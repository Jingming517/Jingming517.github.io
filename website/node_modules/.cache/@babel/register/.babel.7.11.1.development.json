{
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\env.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\env.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\env.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\env.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "env.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar fs = require('fs-extra');\n\nvar path = require('path');\n\nvar chalk = require('chalk');\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar join = path.join;\nvar languagesFile = join(CWD, 'languages.js');\nvar versionsJSONFile = join(CWD, 'versions.json');\nvar versionsFile = join(CWD, 'pages/en/versions.js');\n\nvar Translation = /*#__PURE__*/function () {\n  function Translation() {\n    var _this = this;\n\n    _classCallCheck(this, Translation);\n\n    _defineProperty(this, \"enabledLanguages\", function () {\n      return _this.languages.filter(function (lang) {\n        return lang.enabled;\n      });\n    });\n\n    this.enabled = false;\n    this.languages = [{\n      enabled: true,\n      name: 'English',\n      tag: 'en'\n    }];\n    this.load();\n  }\n\n  _createClass(Translation, [{\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(languagesFile)) {\n        this.enabled = true;\n        this.languages = require(languagesFile);\n      }\n    }\n  }]);\n\n  return Translation;\n}();\n\nvar Versioning = /*#__PURE__*/function () {\n  function Versioning() {\n    _classCallCheck(this, Versioning);\n\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n    this.load();\n  }\n\n  _createClass(Versioning, [{\n    key: \"printMissingVersionsPageError\",\n    value: function printMissingVersionsPageError() {\n      console.error(\"\".concat(chalk.yellow('No versions.js file found!')) + \"\\nYou should create your versions.js file in pages/en directory.\" + \"\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.\");\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(versionsJSONFile)) {\n        this.enabled = true;\n        this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n        this.latestVersion = this.versions[0];\n        this.defaultVersion = siteConfig.defaultVersionShown ? siteConfig.defaultVersionShown : this.latestVersion; // otherwise show the latest version (other than next/master)\n      }\n\n      if (!fs.existsSync(versionsFile)) {\n        this.missingVersionsPage = true;\n      }\n    }\n  }]);\n\n  return Versioning;\n}();\n\nvar env = {\n  translation: new Translation(),\n  versioning: new Versioning()\n};\nmodule.exports = env;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudi5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwiZnMiLCJyZXF1aXJlIiwicGF0aCIsImNoYWxrIiwic2l0ZUNvbmZpZyIsImpvaW4iLCJsYW5ndWFnZXNGaWxlIiwidmVyc2lvbnNKU09ORmlsZSIsInZlcnNpb25zRmlsZSIsIlRyYW5zbGF0aW9uIiwibGFuZ3VhZ2VzIiwiZmlsdGVyIiwibGFuZyIsImVuYWJsZWQiLCJuYW1lIiwidGFnIiwibG9hZCIsImV4aXN0c1N5bmMiLCJWZXJzaW9uaW5nIiwibGF0ZXN0VmVyc2lvbiIsImRlZmF1bHRWZXJzaW9uIiwidmVyc2lvbnMiLCJtaXNzaW5nVmVyc2lvbnNQYWdlIiwiY29uc29sZSIsImVycm9yIiwieWVsbG93IiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiZGVmYXVsdFZlcnNpb25TaG93biIsImVudiIsInRyYW5zbGF0aW9uIiwidmVyc2lvbmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFNRyxVQUFVLEdBQUdILE9BQU8sV0FBSUosR0FBSixvQkFBMUI7O0FBRUEsSUFBTVEsSUFBSSxHQUFHSCxJQUFJLENBQUNHLElBQWxCO0FBRUEsSUFBTUMsYUFBYSxHQUFHRCxJQUFJLENBQUNSLEdBQUQsRUFBTSxjQUFOLENBQTFCO0FBQ0EsSUFBTVUsZ0JBQWdCLEdBQUdGLElBQUksQ0FBQ1IsR0FBRCxFQUFNLGVBQU4sQ0FBN0I7QUFDQSxJQUFNVyxZQUFZLEdBQUdILElBQUksQ0FBQ1IsR0FBRCxFQUFNLHNCQUFOLENBQXpCOztJQUVNWSxXO0FBQ0oseUJBQWM7QUFBQTs7QUFBQTs7QUFBQSw4Q0FhSztBQUFBLGFBQU0sS0FBSSxDQUFDQyxTQUFMLENBQWVDLE1BQWYsQ0FBc0IsVUFBQ0MsSUFBRDtBQUFBLGVBQVVBLElBQUksQ0FBQ0MsT0FBZjtBQUFBLE9BQXRCLENBQU47QUFBQSxLQWJMOztBQUNaLFNBQUtBLE9BQUwsR0FBZSxLQUFmO0FBQ0EsU0FBS0gsU0FBTCxHQUFpQixDQUNmO0FBQ0VHLE1BQUFBLE9BQU8sRUFBRSxJQURYO0FBRUVDLE1BQUFBLElBQUksRUFBRSxTQUZSO0FBR0VDLE1BQUFBLEdBQUcsRUFBRTtBQUhQLEtBRGUsQ0FBakI7QUFRQSxTQUFLQyxJQUFMO0FBQ0Q7Ozs7MkJBSU07QUFDTCxVQUFJaEIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjWCxhQUFkLENBQUosRUFBa0M7QUFDaEMsYUFBS08sT0FBTCxHQUFlLElBQWY7QUFDQSxhQUFLSCxTQUFMLEdBQWlCVCxPQUFPLENBQUNLLGFBQUQsQ0FBeEI7QUFDRDtBQUNGOzs7Ozs7SUFHR1ksVTtBQUNKLHdCQUFjO0FBQUE7O0FBQ1osU0FBS0wsT0FBTCxHQUFlLEtBQWY7QUFDQSxTQUFLTSxhQUFMLEdBQXFCLElBQXJCO0FBQ0EsU0FBS0MsY0FBTCxHQUFzQixJQUF0QjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0IsRUFBaEI7QUFDQSxTQUFLQyxtQkFBTCxHQUEyQixLQUEzQjtBQUVBLFNBQUtOLElBQUw7QUFDRDs7OztvREFFK0I7QUFDOUJPLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUNFLFVBQUdyQixLQUFLLENBQUNzQixNQUFOLENBQWEsNEJBQWIsQ0FBSCwySUFERjtBQUtEOzs7MkJBRU07QUFDTCxVQUFJekIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjVixnQkFBZCxDQUFKLEVBQXFDO0FBQ25DLGFBQUtNLE9BQUwsR0FBZSxJQUFmO0FBQ0EsYUFBS1EsUUFBTCxHQUFnQkssSUFBSSxDQUFDQyxLQUFMLENBQVczQixFQUFFLENBQUM0QixZQUFILENBQWdCckIsZ0JBQWhCLEVBQWtDLE1BQWxDLENBQVgsQ0FBaEI7QUFDQSxhQUFLWSxhQUFMLEdBQXFCLEtBQUtFLFFBQUwsQ0FBYyxDQUFkLENBQXJCO0FBQ0EsYUFBS0QsY0FBTCxHQUFzQmhCLFVBQVUsQ0FBQ3lCLG1CQUFYLEdBQ2xCekIsVUFBVSxDQUFDeUIsbUJBRE8sR0FFbEIsS0FBS1YsYUFGVCxDQUptQyxDQU1YO0FBQ3pCOztBQUVELFVBQUksQ0FBQ25CLEVBQUUsQ0FBQ2lCLFVBQUgsQ0FBY1QsWUFBZCxDQUFMLEVBQWtDO0FBQ2hDLGFBQUtjLG1CQUFMLEdBQTJCLElBQTNCO0FBQ0Q7QUFDRjs7Ozs7O0FBR0gsSUFBTVEsR0FBRyxHQUFHO0FBQ1ZDLEVBQUFBLFdBQVcsRUFBRSxJQUFJdEIsV0FBSixFQURIO0FBRVZ1QixFQUFBQSxVQUFVLEVBQUUsSUFBSWQsVUFBSjtBQUZGLENBQVo7QUFLQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSixHQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpO1xuXG5jb25zdCBzaXRlQ29uZmlnID0gcmVxdWlyZShgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcblxuY29uc3Qgam9pbiA9IHBhdGguam9pbjtcblxuY29uc3QgbGFuZ3VhZ2VzRmlsZSA9IGpvaW4oQ1dELCAnbGFuZ3VhZ2VzLmpzJyk7XG5jb25zdCB2ZXJzaW9uc0pTT05GaWxlID0gam9pbihDV0QsICd2ZXJzaW9ucy5qc29uJyk7XG5jb25zdCB2ZXJzaW9uc0ZpbGUgPSBqb2luKENXRCwgJ3BhZ2VzL2VuL3ZlcnNpb25zLmpzJyk7XG5cbmNsYXNzIFRyYW5zbGF0aW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5sYW5ndWFnZXMgPSBbXG4gICAgICB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIG5hbWU6ICdFbmdsaXNoJyxcbiAgICAgICAgdGFnOiAnZW4nLFxuICAgICAgfSxcbiAgICBdO1xuXG4gICAgdGhpcy5sb2FkKCk7XG4gIH1cblxuICBlbmFibGVkTGFuZ3VhZ2VzID0gKCkgPT4gdGhpcy5sYW5ndWFnZXMuZmlsdGVyKChsYW5nKSA9PiBsYW5nLmVuYWJsZWQpO1xuXG4gIGxvYWQoKSB7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmMobGFuZ3VhZ2VzRmlsZSkpIHtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLmxhbmd1YWdlcyA9IHJlcXVpcmUobGFuZ3VhZ2VzRmlsZSk7XG4gICAgfVxuICB9XG59XG5cbmNsYXNzIFZlcnNpb25pbmcge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmVuYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmxhdGVzdFZlcnNpb24gPSBudWxsO1xuICAgIHRoaXMuZGVmYXVsdFZlcnNpb24gPSBudWxsO1xuICAgIHRoaXMudmVyc2lvbnMgPSBbXTtcbiAgICB0aGlzLm1pc3NpbmdWZXJzaW9uc1BhZ2UgPSBmYWxzZTtcblxuICAgIHRoaXMubG9hZCgpO1xuICB9XG5cbiAgcHJpbnRNaXNzaW5nVmVyc2lvbnNQYWdlRXJyb3IoKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgIGAke2NoYWxrLnllbGxvdygnTm8gdmVyc2lvbnMuanMgZmlsZSBmb3VuZCEnKX1gICtcbiAgICAgICAgYFxcbllvdSBzaG91bGQgY3JlYXRlIHlvdXIgdmVyc2lvbnMuanMgZmlsZSBpbiBwYWdlcy9lbiBkaXJlY3RvcnkuYCArXG4gICAgICAgIGBcXG5QbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kb2N1c2F1cnVzLmlvL2RvY3MvZW4vdmVyc2lvbmluZy5odG1sLmAsXG4gICAgKTtcbiAgfVxuXG4gIGxvYWQoKSB7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmModmVyc2lvbnNKU09ORmlsZSkpIHtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLnZlcnNpb25zID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmModmVyc2lvbnNKU09ORmlsZSwgJ3V0ZjgnKSk7XG4gICAgICB0aGlzLmxhdGVzdFZlcnNpb24gPSB0aGlzLnZlcnNpb25zWzBdO1xuICAgICAgdGhpcy5kZWZhdWx0VmVyc2lvbiA9IHNpdGVDb25maWcuZGVmYXVsdFZlcnNpb25TaG93blxuICAgICAgICA/IHNpdGVDb25maWcuZGVmYXVsdFZlcnNpb25TaG93blxuICAgICAgICA6IHRoaXMubGF0ZXN0VmVyc2lvbjsgLy8gb3RoZXJ3aXNlIHNob3cgdGhlIGxhdGVzdCB2ZXJzaW9uIChvdGhlciB0aGFuIG5leHQvbWFzdGVyKVxuICAgIH1cblxuICAgIGlmICghZnMuZXhpc3RzU3luYyh2ZXJzaW9uc0ZpbGUpKSB7XG4gICAgICB0aGlzLm1pc3NpbmdWZXJzaW9uc1BhZ2UgPSB0cnVlO1xuICAgIH1cbiAgfVxufVxuXG5jb25zdCBlbnYgPSB7XG4gIHRyYW5zbGF0aW9uOiBuZXcgVHJhbnNsYXRpb24oKSxcbiAgdmVyc2lvbmluZzogbmV3IFZlcnNpb25pbmcoKSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW52O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "env.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "path",
        "chalk",
        "siteConfig",
        "join",
        "languagesFile",
        "versionsJSONFile",
        "versionsFile",
        "Translation",
        "languages",
        "filter",
        "lang",
        "enabled",
        "name",
        "tag",
        "load",
        "existsSync",
        "Versioning",
        "latestVersion",
        "defaultVersion",
        "versions",
        "missingVersionsPage",
        "console",
        "error",
        "yellow",
        "JSON",
        "parse",
        "readFileSync",
        "defaultVersionShown",
        "env",
        "translation",
        "versioning",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMG,UAAU,GAAGH,OAAO,WAAIJ,GAAJ,oBAA1B;;AAEA,IAAMQ,IAAI,GAAGH,IAAI,CAACG,IAAlB;AAEA,IAAMC,aAAa,GAAGD,IAAI,CAACR,GAAD,EAAM,cAAN,CAA1B;AACA,IAAMU,gBAAgB,GAAGF,IAAI,CAACR,GAAD,EAAM,eAAN,CAA7B;AACA,IAAMW,YAAY,GAAGH,IAAI,CAACR,GAAD,EAAM,sBAAN,CAAzB;;IAEMY,W;AACJ,yBAAc;AAAA;;AAAA;;AAAA,8CAaK;AAAA,aAAM,KAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,OAAf;AAAA,OAAtB,CAAN;AAAA,KAbL;;AACZ,SAAKA,OAAL,GAAe,KAAf;AACA,SAAKH,SAAL,GAAiB,CACf;AACEG,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADe,CAAjB;AAQA,SAAKC,IAAL;AACD;;;;2BAIM;AACL,UAAIhB,EAAE,CAACiB,UAAH,CAAcX,aAAd,CAAJ,EAAkC;AAChC,aAAKO,OAAL,GAAe,IAAf;AACA,aAAKH,SAAL,GAAiBT,OAAO,CAACK,aAAD,CAAxB;AACD;AACF;;;;;;IAGGY,U;AACJ,wBAAc;AAAA;;AACZ,SAAKL,OAAL,GAAe,KAAf;AACA,SAAKM,aAAL,GAAqB,IAArB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AAEA,SAAKN,IAAL;AACD;;;;oDAE+B;AAC9BO,MAAAA,OAAO,CAACC,KAAR,CACE,UAAGrB,KAAK,CAACsB,MAAN,CAAa,4BAAb,CAAH,2IADF;AAKD;;;2BAEM;AACL,UAAIzB,EAAE,CAACiB,UAAH,CAAcV,gBAAd,CAAJ,EAAqC;AACnC,aAAKM,OAAL,GAAe,IAAf;AACA,aAAKQ,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAW3B,EAAE,CAAC4B,YAAH,CAAgBrB,gBAAhB,EAAkC,MAAlC,CAAX,CAAhB;AACA,aAAKY,aAAL,GAAqB,KAAKE,QAAL,CAAc,CAAd,CAArB;AACA,aAAKD,cAAL,GAAsBhB,UAAU,CAACyB,mBAAX,GAClBzB,UAAU,CAACyB,mBADO,GAElB,KAAKV,aAFT,CAJmC,CAMX;AACzB;;AAED,UAAI,CAACnB,EAAE,CAACiB,UAAH,CAAcT,YAAd,CAAL,EAAkC;AAChC,aAAKc,mBAAL,GAA2B,IAA3B;AACD;AACF;;;;;;AAGH,IAAMQ,GAAG,GAAG;AACVC,EAAAA,WAAW,EAAE,IAAItB,WAAJ,EADH;AAEVuB,EAAAA,UAAU,EAAE,IAAId,UAAJ;AAFF,CAAZ;AAKAe,MAAM,CAACC,OAAP,GAAiBJ,GAAjB",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('chalk');\n\nconst siteConfig = require(`${CWD}/siteConfig.js`);\n\nconst join = path.join;\n\nconst languagesFile = join(CWD, 'languages.js');\nconst versionsJSONFile = join(CWD, 'versions.json');\nconst versionsFile = join(CWD, 'pages/en/versions.js');\n\nclass Translation {\n  constructor() {\n    this.enabled = false;\n    this.languages = [\n      {\n        enabled: true,\n        name: 'English',\n        tag: 'en',\n      },\n    ];\n\n    this.load();\n  }\n\n  enabledLanguages = () => this.languages.filter((lang) => lang.enabled);\n\n  load() {\n    if (fs.existsSync(languagesFile)) {\n      this.enabled = true;\n      this.languages = require(languagesFile);\n    }\n  }\n}\n\nclass Versioning {\n  constructor() {\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n\n    this.load();\n  }\n\n  printMissingVersionsPageError() {\n    console.error(\n      `${chalk.yellow('No versions.js file found!')}` +\n        `\\nYou should create your versions.js file in pages/en directory.` +\n        `\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.`,\n    );\n  }\n\n  load() {\n    if (fs.existsSync(versionsJSONFile)) {\n      this.enabled = true;\n      this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n      this.latestVersion = this.versions[0];\n      this.defaultVersion = siteConfig.defaultVersionShown\n        ? siteConfig.defaultVersionShown\n        : this.latestVersion; // otherwise show the latest version (other than next/master)\n    }\n\n    if (!fs.existsSync(versionsFile)) {\n      this.missingVersionsPage = true;\n    }\n  }\n}\n\nconst env = {\n  translation: new Translation(),\n  versioning: new Versioning(),\n};\n\nmodule.exports = env;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\start.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\start.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\start.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\start.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "start.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar program = require('commander');\n\nvar openBrowser = require('react-dev-utils/openBrowser');\n\nvar portFinder = require('portfinder');\n\nvar liveReloadServer = require('./liveReloadServer.js');\n\nvar server = require('./server.js');\n\nvar CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  var promise = portFinder.getPortPromise({\n    port: 35729\n  }).then(function (port) {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  var initialServerPort = parseInt(program.port, 10) || process.env.PORT || 3000;\n  var host = program.host || 'localhost';\n  var promise = portFinder.getPortPromise({\n    port: initialServerPort\n  }).then(function (port) {\n    server(port, host);\n\n    var _require = require(\"\".concat(CWD, \"/siteConfig.js\")),\n        baseUrl = _require.baseUrl;\n\n    var serverAddress = \"http://\".concat(host, \":\").concat(port).concat(baseUrl);\n    console.log('Docusaurus server started on port %d', port);\n    openBrowser(serverAddress);\n  });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer()[\"catch\"](function (ex) {\n      return console.warn(\"Failed to start live reload server: \".concat(ex));\n    }).then(function () {\n      return startServer();\n    });\n  }\n\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus: startDocusaurus,\n  startServer: startServer,\n  startLiveReloadServer: startLiveReloadServer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXJ0LmpzIl0sIm5hbWVzIjpbInByb2dyYW0iLCJyZXF1aXJlIiwib3BlbkJyb3dzZXIiLCJwb3J0RmluZGVyIiwibGl2ZVJlbG9hZFNlcnZlciIsInNlcnZlciIsIkNXRCIsInByb2Nlc3MiLCJjd2QiLCJzdGFydExpdmVSZWxvYWRTZXJ2ZXIiLCJwcm9taXNlIiwiZ2V0UG9ydFByb21pc2UiLCJwb3J0IiwidGhlbiIsInN0YXJ0Iiwic3RhcnRTZXJ2ZXIiLCJpbml0aWFsU2VydmVyUG9ydCIsInBhcnNlSW50IiwiZW52IiwiUE9SVCIsImhvc3QiLCJiYXNlVXJsIiwic2VydmVyQWRkcmVzcyIsImNvbnNvbGUiLCJsb2ciLCJzdGFydERvY3VzYXVydXMiLCJ3YXRjaCIsImV4Iiwid2FybiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsNkJBQUQsQ0FBM0I7O0FBQ0EsSUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFDQSxJQUFNRyxnQkFBZ0IsR0FBR0gsT0FBTyxDQUFDLHVCQUFELENBQWhDOztBQUNBLElBQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLGFBQUQsQ0FBdEI7O0FBRUEsSUFBTUssR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFFQSxTQUFTQyxxQkFBVCxHQUFpQztBQUMvQixNQUFNQyxPQUFPLEdBQUdQLFVBQVUsQ0FBQ1EsY0FBWCxDQUEwQjtBQUFDQyxJQUFBQSxJQUFJLEVBQUU7QUFBUCxHQUExQixFQUF5Q0MsSUFBekMsQ0FBOEMsVUFBQ0QsSUFBRCxFQUFVO0FBQ3RFUixJQUFBQSxnQkFBZ0IsQ0FBQ1UsS0FBakIsQ0FBdUJGLElBQXZCO0FBQ0QsR0FGZSxDQUFoQjtBQUdBLFNBQU9GLE9BQVA7QUFDRDs7QUFFRCxTQUFTSyxXQUFULEdBQXVCO0FBQ3JCLE1BQU1DLGlCQUFpQixHQUNyQkMsUUFBUSxDQUFDakIsT0FBTyxDQUFDWSxJQUFULEVBQWUsRUFBZixDQUFSLElBQThCTCxPQUFPLENBQUNXLEdBQVIsQ0FBWUMsSUFBMUMsSUFBa0QsSUFEcEQ7QUFFQSxNQUFNQyxJQUFJLEdBQUdwQixPQUFPLENBQUNvQixJQUFSLElBQWdCLFdBQTdCO0FBQ0EsTUFBTVYsT0FBTyxHQUFHUCxVQUFVLENBQ3ZCUSxjQURhLENBQ0U7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFSTtBQUFQLEdBREYsRUFFYkgsSUFGYSxDQUVSLFVBQUNELElBQUQsRUFBVTtBQUNkUCxJQUFBQSxNQUFNLENBQUNPLElBQUQsRUFBT1EsSUFBUCxDQUFOOztBQURjLG1CQUVJbkIsT0FBTyxXQUFJSyxHQUFKLG9CQUZYO0FBQUEsUUFFUGUsT0FGTyxZQUVQQSxPQUZPOztBQUdkLFFBQU1DLGFBQWEsb0JBQWFGLElBQWIsY0FBcUJSLElBQXJCLFNBQTRCUyxPQUE1QixDQUFuQjtBQUNBRSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQ0FBWixFQUFvRFosSUFBcEQ7QUFDQVYsSUFBQUEsV0FBVyxDQUFDb0IsYUFBRCxDQUFYO0FBQ0QsR0FSYSxDQUFoQjtBQVNBLFNBQU9aLE9BQVA7QUFDRDs7QUFFRCxTQUFTZSxlQUFULEdBQTJCO0FBQ3pCLE1BQUl6QixPQUFPLENBQUMwQixLQUFaLEVBQW1CO0FBQ2pCLFdBQU9qQixxQkFBcUIsV0FBckIsQ0FDRSxVQUFDa0IsRUFBRDtBQUFBLGFBQVFKLE9BQU8sQ0FBQ0ssSUFBUiwrQ0FBb0RELEVBQXBELEVBQVI7QUFBQSxLQURGLEVBRUpkLElBRkksQ0FFQztBQUFBLGFBQU1FLFdBQVcsRUFBakI7QUFBQSxLQUZELENBQVA7QUFHRDs7QUFDRCxTQUFPQSxXQUFXLEVBQWxCO0FBQ0Q7O0FBRURjLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmTCxFQUFBQSxlQUFlLEVBQWZBLGVBRGU7QUFFZlYsRUFBQUEsV0FBVyxFQUFYQSxXQUZlO0FBR2ZOLEVBQUFBLHFCQUFxQixFQUFyQkE7QUFIZSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHByb2dyYW0gPSByZXF1aXJlKCdjb21tYW5kZXInKTtcbmNvbnN0IG9wZW5Ccm93c2VyID0gcmVxdWlyZSgncmVhY3QtZGV2LXV0aWxzL29wZW5Ccm93c2VyJyk7XG5jb25zdCBwb3J0RmluZGVyID0gcmVxdWlyZSgncG9ydGZpbmRlcicpO1xuY29uc3QgbGl2ZVJlbG9hZFNlcnZlciA9IHJlcXVpcmUoJy4vbGl2ZVJlbG9hZFNlcnZlci5qcycpO1xuY29uc3Qgc2VydmVyID0gcmVxdWlyZSgnLi9zZXJ2ZXIuanMnKTtcblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcblxuZnVuY3Rpb24gc3RhcnRMaXZlUmVsb2FkU2VydmVyKCkge1xuICBjb25zdCBwcm9taXNlID0gcG9ydEZpbmRlci5nZXRQb3J0UHJvbWlzZSh7cG9ydDogMzU3Mjl9KS50aGVuKChwb3J0KSA9PiB7XG4gICAgbGl2ZVJlbG9hZFNlcnZlci5zdGFydChwb3J0KTtcbiAgfSk7XG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5mdW5jdGlvbiBzdGFydFNlcnZlcigpIHtcbiAgY29uc3QgaW5pdGlhbFNlcnZlclBvcnQgPVxuICAgIHBhcnNlSW50KHByb2dyYW0ucG9ydCwgMTApIHx8IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcbiAgY29uc3QgaG9zdCA9IHByb2dyYW0uaG9zdCB8fCAnbG9jYWxob3N0JztcbiAgY29uc3QgcHJvbWlzZSA9IHBvcnRGaW5kZXJcbiAgICAuZ2V0UG9ydFByb21pc2Uoe3BvcnQ6IGluaXRpYWxTZXJ2ZXJQb3J0fSlcbiAgICAudGhlbigocG9ydCkgPT4ge1xuICAgICAgc2VydmVyKHBvcnQsIGhvc3QpO1xuICAgICAgY29uc3Qge2Jhc2VVcmx9ID0gcmVxdWlyZShgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcbiAgICAgIGNvbnN0IHNlcnZlckFkZHJlc3MgPSBgaHR0cDovLyR7aG9zdH06JHtwb3J0fSR7YmFzZVVybH1gO1xuICAgICAgY29uc29sZS5sb2coJ0RvY3VzYXVydXMgc2VydmVyIHN0YXJ0ZWQgb24gcG9ydCAlZCcsIHBvcnQpO1xuICAgICAgb3BlbkJyb3dzZXIoc2VydmVyQWRkcmVzcyk7XG4gICAgfSk7XG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5mdW5jdGlvbiBzdGFydERvY3VzYXVydXMoKSB7XG4gIGlmIChwcm9ncmFtLndhdGNoKSB7XG4gICAgcmV0dXJuIHN0YXJ0TGl2ZVJlbG9hZFNlcnZlcigpXG4gICAgICAuY2F0Y2goKGV4KSA9PiBjb25zb2xlLndhcm4oYEZhaWxlZCB0byBzdGFydCBsaXZlIHJlbG9hZCBzZXJ2ZXI6ICR7ZXh9YCkpXG4gICAgICAudGhlbigoKSA9PiBzdGFydFNlcnZlcigpKTtcbiAgfVxuICByZXR1cm4gc3RhcnRTZXJ2ZXIoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN0YXJ0RG9jdXNhdXJ1cyxcbiAgc3RhcnRTZXJ2ZXIsXG4gIHN0YXJ0TGl2ZVJlbG9hZFNlcnZlcixcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "start.js"
      ],
      "names": [
        "program",
        "require",
        "openBrowser",
        "portFinder",
        "liveReloadServer",
        "server",
        "CWD",
        "process",
        "cwd",
        "startLiveReloadServer",
        "promise",
        "getPortPromise",
        "port",
        "then",
        "start",
        "startServer",
        "initialServerPort",
        "parseInt",
        "env",
        "PORT",
        "host",
        "baseUrl",
        "serverAddress",
        "console",
        "log",
        "startDocusaurus",
        "watch",
        "ex",
        "warn",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,uBAAD,CAAhC;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,aAAD,CAAtB;;AAEA,IAAMK,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AAEA,SAASC,qBAAT,GAAiC;AAC/B,MAAMC,OAAO,GAAGP,UAAU,CAACQ,cAAX,CAA0B;AAACC,IAAAA,IAAI,EAAE;AAAP,GAA1B,EAAyCC,IAAzC,CAA8C,UAACD,IAAD,EAAU;AACtER,IAAAA,gBAAgB,CAACU,KAAjB,CAAuBF,IAAvB;AACD,GAFe,CAAhB;AAGA,SAAOF,OAAP;AACD;;AAED,SAASK,WAAT,GAAuB;AACrB,MAAMC,iBAAiB,GACrBC,QAAQ,CAACjB,OAAO,CAACY,IAAT,EAAe,EAAf,CAAR,IAA8BL,OAAO,CAACW,GAAR,CAAYC,IAA1C,IAAkD,IADpD;AAEA,MAAMC,IAAI,GAAGpB,OAAO,CAACoB,IAAR,IAAgB,WAA7B;AACA,MAAMV,OAAO,GAAGP,UAAU,CACvBQ,cADa,CACE;AAACC,IAAAA,IAAI,EAAEI;AAAP,GADF,EAEbH,IAFa,CAER,UAACD,IAAD,EAAU;AACdP,IAAAA,MAAM,CAACO,IAAD,EAAOQ,IAAP,CAAN;;AADc,mBAEInB,OAAO,WAAIK,GAAJ,oBAFX;AAAA,QAEPe,OAFO,YAEPA,OAFO;;AAGd,QAAMC,aAAa,oBAAaF,IAAb,cAAqBR,IAArB,SAA4BS,OAA5B,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDZ,IAApD;AACAV,IAAAA,WAAW,CAACoB,aAAD,CAAX;AACD,GARa,CAAhB;AASA,SAAOZ,OAAP;AACD;;AAED,SAASe,eAAT,GAA2B;AACzB,MAAIzB,OAAO,CAAC0B,KAAZ,EAAmB;AACjB,WAAOjB,qBAAqB,WAArB,CACE,UAACkB,EAAD;AAAA,aAAQJ,OAAO,CAACK,IAAR,+CAAoDD,EAApD,EAAR;AAAA,KADF,EAEJd,IAFI,CAEC;AAAA,aAAME,WAAW,EAAjB;AAAA,KAFD,CAAP;AAGD;;AACD,SAAOA,WAAW,EAAlB;AACD;;AAEDc,MAAM,CAACC,OAAP,GAAiB;AACfL,EAAAA,eAAe,EAAfA,eADe;AAEfV,EAAAA,WAAW,EAAXA,WAFe;AAGfN,EAAAA,qBAAqB,EAArBA;AAHe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst program = require('commander');\nconst openBrowser = require('react-dev-utils/openBrowser');\nconst portFinder = require('portfinder');\nconst liveReloadServer = require('./liveReloadServer.js');\nconst server = require('./server.js');\n\nconst CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  const promise = portFinder.getPortPromise({port: 35729}).then((port) => {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  const initialServerPort =\n    parseInt(program.port, 10) || process.env.PORT || 3000;\n  const host = program.host || 'localhost';\n  const promise = portFinder\n    .getPortPromise({port: initialServerPort})\n    .then((port) => {\n      server(port, host);\n      const {baseUrl} = require(`${CWD}/siteConfig.js`);\n      const serverAddress = `http://${host}:${port}${baseUrl}`;\n      console.log('Docusaurus server started on port %d', port);\n      openBrowser(serverAddress);\n    });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer()\n      .catch((ex) => console.warn(`Failed to start live reload server: ${ex}`))\n      .then(() => startServer());\n  }\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus,\n  startServer,\n  startLiveReloadServer,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\liveReloadServer.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\liveReloadServer.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\liveReloadServer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\liveReloadServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "liveReloadServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar gaze = require('gaze');\n\nvar tinylr = require('tiny-lr');\n\nvar program = require('commander');\n\nvar readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  var server = tinylr();\n  server.listen(port, function () {\n    console.log('LiveReload server started on port %d', port);\n  });\n  gaze([\"../\".concat(readMetadata.getDocsPath(), \"/**/*\"), '**/*', '!node_modules/**/*'], function () {\n    this.on('all', function () {\n      server.notifyClients(['/']);\n    });\n  });\n}\n\nvar getReloadScriptUrl = function getReloadScriptUrl() {\n  var port = process.env.LIVERELOAD_PORT;\n  var host = program.host || 'localhost';\n  return \"http://\".concat(host, \":\").concat(port, \"/livereload.js\");\n};\n\nmodule.exports = {\n  start: start,\n  getReloadScriptUrl: getReloadScriptUrl\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpdmVSZWxvYWRTZXJ2ZXIuanMiXSwibmFtZXMiOlsiZ2F6ZSIsInJlcXVpcmUiLCJ0aW55bHIiLCJwcm9ncmFtIiwicmVhZE1ldGFkYXRhIiwic3RhcnQiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiTElWRVJFTE9BRF9QT1JUIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImdldERvY3NQYXRoIiwib24iLCJub3RpZnlDbGllbnRzIiwiZ2V0UmVsb2FkU2NyaXB0VXJsIiwiaG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLElBQU1HLFlBQVksR0FBR0gsT0FBTyxDQUFDLG1CQUFELENBQTVCOztBQUVBLFNBQVNJLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUNuQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosR0FBdUIsYUFBdkI7QUFDQUYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLGVBQVosR0FBOEJKLElBQTlCO0FBQ0EsTUFBTUssTUFBTSxHQUFHVCxNQUFNLEVBQXJCO0FBQ0FTLEVBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjTixJQUFkLEVBQW9CLFlBQU07QUFDeEJPLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNDQUFaLEVBQW9EUixJQUFwRDtBQUNELEdBRkQ7QUFJQU4sRUFBQUEsSUFBSSxDQUNGLGNBQU9JLFlBQVksQ0FBQ1csV0FBYixFQUFQLFlBQTBDLE1BQTFDLEVBQWtELG9CQUFsRCxDQURFLEVBRUYsWUFBWTtBQUNWLFNBQUtDLEVBQUwsQ0FBUSxLQUFSLEVBQWUsWUFBTTtBQUNuQkwsTUFBQUEsTUFBTSxDQUFDTSxhQUFQLENBQXFCLENBQUMsR0FBRCxDQUFyQjtBQUNELEtBRkQ7QUFHRCxHQU5DLENBQUo7QUFRRDs7QUFDRCxJQUFNQyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLEdBQU07QUFDL0IsTUFBTVosSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsZUFBekI7QUFDQSxNQUFNUyxJQUFJLEdBQUdoQixPQUFPLENBQUNnQixJQUFSLElBQWdCLFdBQTdCO0FBRUEsMEJBQWlCQSxJQUFqQixjQUF5QmIsSUFBekI7QUFDRCxDQUxEOztBQU9BYyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmhCLEVBQUFBLEtBQUssRUFBTEEsS0FEZTtBQUVmYSxFQUFBQSxrQkFBa0IsRUFBbEJBO0FBRmUsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBnYXplID0gcmVxdWlyZSgnZ2F6ZScpO1xuY29uc3QgdGlueWxyID0gcmVxdWlyZSgndGlueS1scicpO1xuY29uc3QgcHJvZ3JhbSA9IHJlcXVpcmUoJ2NvbW1hbmRlcicpO1xuY29uc3QgcmVhZE1ldGFkYXRhID0gcmVxdWlyZSgnLi9yZWFkTWV0YWRhdGEuanMnKTtcblxuZnVuY3Rpb24gc3RhcnQocG9ydCkge1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViA9ICdkZXZlbG9wbWVudCc7XG4gIHByb2Nlc3MuZW52LkxJVkVSRUxPQURfUE9SVCA9IHBvcnQ7XG4gIGNvbnN0IHNlcnZlciA9IHRpbnlscigpO1xuICBzZXJ2ZXIubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnTGl2ZVJlbG9hZCBzZXJ2ZXIgc3RhcnRlZCBvbiBwb3J0ICVkJywgcG9ydCk7XG4gIH0pO1xuXG4gIGdhemUoXG4gICAgW2AuLi8ke3JlYWRNZXRhZGF0YS5nZXREb2NzUGF0aCgpfS8qKi8qYCwgJyoqLyonLCAnIW5vZGVfbW9kdWxlcy8qKi8qJ10sXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5vbignYWxsJywgKCkgPT4ge1xuICAgICAgICBzZXJ2ZXIubm90aWZ5Q2xpZW50cyhbJy8nXSk7XG4gICAgICB9KTtcbiAgICB9LFxuICApO1xufVxuY29uc3QgZ2V0UmVsb2FkU2NyaXB0VXJsID0gKCkgPT4ge1xuICBjb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuTElWRVJFTE9BRF9QT1JUO1xuICBjb25zdCBob3N0ID0gcHJvZ3JhbS5ob3N0IHx8ICdsb2NhbGhvc3QnO1xuXG4gIHJldHVybiBgaHR0cDovLyR7aG9zdH06JHtwb3J0fS9saXZlcmVsb2FkLmpzYDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzdGFydCxcbiAgZ2V0UmVsb2FkU2NyaXB0VXJsLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "liveReloadServer.js"
      ],
      "names": [
        "gaze",
        "require",
        "tinylr",
        "program",
        "readMetadata",
        "start",
        "port",
        "process",
        "env",
        "NODE_ENV",
        "LIVERELOAD_PORT",
        "server",
        "listen",
        "console",
        "log",
        "getDocsPath",
        "on",
        "notifyClients",
        "getReloadScriptUrl",
        "host",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,mBAAD,CAA5B;;AAEA,SAASI,KAAT,CAAeC,IAAf,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ,GAA8BJ,IAA9B;AACA,MAAMK,MAAM,GAAGT,MAAM,EAArB;AACAS,EAAAA,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoB,YAAM;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDR,IAApD;AACD,GAFD;AAIAN,EAAAA,IAAI,CACF,cAAOI,YAAY,CAACW,WAAb,EAAP,YAA0C,MAA1C,EAAkD,oBAAlD,CADE,EAEF,YAAY;AACV,SAAKC,EAAL,CAAQ,KAAR,EAAe,YAAM;AACnBL,MAAAA,MAAM,CAACM,aAAP,CAAqB,CAAC,GAAD,CAArB;AACD,KAFD;AAGD,GANC,CAAJ;AAQD;;AACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,MAAMZ,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYE,eAAzB;AACA,MAAMS,IAAI,GAAGhB,OAAO,CAACgB,IAAR,IAAgB,WAA7B;AAEA,0BAAiBA,IAAjB,cAAyBb,IAAzB;AACD,CALD;;AAOAc,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,KAAK,EAALA,KADe;AAEfa,EAAAA,kBAAkB,EAAlBA;AAFe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst gaze = require('gaze');\nconst tinylr = require('tiny-lr');\nconst program = require('commander');\nconst readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  const server = tinylr();\n  server.listen(port, () => {\n    console.log('LiveReload server started on port %d', port);\n  });\n\n  gaze(\n    [`../${readMetadata.getDocsPath()}/**/*`, '**/*', '!node_modules/**/*'],\n    function () {\n      this.on('all', () => {\n        server.notifyClients(['/']);\n      });\n    },\n  );\n}\nconst getReloadScriptUrl = () => {\n  const port = process.env.LIVERELOAD_PORT;\n  const host = program.host || 'localhost';\n\n  return `http://${host}:${port}/livereload.js`;\n};\n\nmodule.exports = {\n  start,\n  getReloadScriptUrl,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\readMetadata.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\readMetadata.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\readMetadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\readMetadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "readMetadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar program = require('commander');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar blog = require('./blog.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar versionFallback = require('./versionFallback.js');\n\nvar utils = require('./utils.js');\n\nvar docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : ''); // Get a list of all IDs that have been deleted in any version.\n// We will assume these should not be in the current/next version.\n\nvar allDeletedIds = new Set();\n\nif (siteConfig.deletedDocs) {\n  Object.values(siteConfig.deletedDocs).forEach(function (idList) {\n    idList.forEach(function (id) {\n      return allDeletedIds.add(id);\n    });\n  });\n}\n\nvar SupportedHeaderFields = new Set(['id', 'title', 'author', 'authorURL', 'authorFBID', 'sidebar_label', 'original_id', 'hide_title', 'layout', 'custom_edit_url', 'description']);\nvar allSidebars;\n\nif (fs.existsSync(\"\".concat(CWD, \"/sidebars.json\"))) {\n  allSidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n} else {\n  allSidebars = {};\n} // Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\n\n\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n} // returns map from id to object containing sidebar ordering info\n\n\nfunction readSidebar() {\n  var sidebars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  Object.assign(sidebars, versionFallback.sidebarData());\n  var items = {};\n  Object.keys(sidebars).forEach(function (sidebar) {\n    var categories = sidebars[sidebar];\n    var sidebarItems = [];\n    Object.keys(categories).forEach(function (category) {\n      var categoryItems = categories[category];\n      categoryItems.forEach(function (categoryItem) {\n        if (_typeof(categoryItem) === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(function (subcategoryItem) {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category: category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1\n                });\n              });\n              return;\n\n            default:\n              return;\n          }\n        } // Is a regular id value.\n\n\n        sidebarItems.push({\n          id: categoryItem,\n          category: category,\n          subcategory: null,\n          order: sidebarItems.length + 1\n        });\n      });\n    });\n\n    for (var i = 0; i < sidebarItems.length; i++) {\n      var item = sidebarItems[i];\n      var previous = null;\n      var next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous: previous,\n        next: next,\n        sidebar: sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order\n      };\n    }\n  });\n  return items;\n} // process the metadata for a document found in either 'docs' or 'translated_docs'\n\n\nfunction processMetadata(file, refDir) {\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var language = utils.getLanguage(file, refDir) || 'en';\n  var metadata = {};\n  Object.keys(result.metadata).forEach(function (fieldName) {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(\"Header field \\\"\".concat(fieldName, \"\\\" in \").concat(file, \" is not supported.\"));\n    }\n  });\n  var rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  } // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n\n\n  var subDir = utils.getSubDir(file, refDir);\n\n  if (subDir) {\n    metadata.id = \"\".concat(subDir, \"/\").concat(metadata.id);\n  } // Example: `docs/projectA/test.md` source is `projectA/test.md`\n\n\n  metadata.source = subDir ? \"\".concat(subDir, \"/\").concat(path.basename(file)) : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  var langPart = env.translation.enabled || siteConfig.useEnglishUrl ? \"\".concat(language, \"/\") : '';\n  var versionPart = '';\n\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = \"\".concat(docsPart).concat(langPart).concat(versionPart).concat(metadata.id, \".html\"); // change ids previous, next\n\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n  var items = readSidebar(allSidebars);\n  var id = metadata.localized_id;\n  var item = items[id];\n\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.next;\n    }\n\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.previous;\n    }\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: rawContent\n  };\n} // process metadata for all docs and save into core/metadata.js\n\n\nfunction generateMetadataDocs() {\n  var order;\n\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n    return language.tag;\n  });\n  var metadatas = {};\n  var defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    var docsDir = path.join(CWD, '../', getDocsPath());\n    var files = glob.sync(\"\".concat(docsDir, \"/**\"));\n    files.forEach(function (file) {\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n\n        if (allDeletedIds.has(metadata.id) || metadata.original_id && allDeletedIds.has(metadata.original_id)) {\n          return;\n        }\n\n        metadatas[metadata.id] = metadata; // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n\n        enabledLanguages.filter(function (currentLanguage) {\n          return currentLanguage !== 'en';\n        }).forEach(function (currentLanguage) {\n          var baseMetadata = Object.assign({}, metadata);\n          baseMetadata.id = baseMetadata.id.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n\n          if (baseMetadata.permalink) {\n            baseMetadata.permalink = baseMetadata.permalink.toString().replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(currentLanguage, \"/\"));\n          }\n\n          if (baseMetadata.next) {\n            baseMetadata.next = baseMetadata.next.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          if (baseMetadata.previous) {\n            baseMetadata.previous = baseMetadata.previous.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          baseMetadata.language = currentLanguage;\n          defaultMetadatas[baseMetadata.id] = baseMetadata;\n        });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    }); // metadata for non-english docs\n\n    var translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(\"\".concat(CWD, \"/translated_docs/**\"));\n    files.forEach(function (file) {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, translatedDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n\n        if (allDeletedIds.has(metadata.id) || metadata.original_id && allDeletedIds.has(metadata.original_id)) {\n          return;\n        }\n\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  } // metadata for versioned docs\n\n\n  var versionData = versionFallback.docData();\n  versionData.forEach(function (metadata) {\n    var id = metadata.localized_id;\n\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.next = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].next;\n      }\n\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.previous = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].previous;\n      }\n    }\n\n    metadatas[metadata.id] = metadata;\n  }); // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n\n  Object.keys(metadatas).forEach(function (metadata) {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title = metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title = metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/metadata.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(metadatas, null, 2), \";\\n\"));\n} // process metadata for blog posts and save into core/MetadataBlog.js\n\n\nfunction generateMetadataBlog() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : siteConfig;\n  var metadatas = [];\n  var files = glob.sync(\"\".concat(CWD, \"/blog/**/*.*\"));\n  files.sort().reverse().forEach(function (file) {\n    var extension = path.extname(file);\n\n    if (extension !== '.md' && extension !== '.markdown') {\n      return;\n    }\n\n    var metadata = blog.getMetadata(file, config); // Extract, YYYY, MM, DD from the file name\n\n    var filePathDateArr = path.basename(file).split('-');\n    metadata.date = new Date(\"\".concat(filePathDateArr[0], \"-\").concat(filePathDateArr[1], \"-\").concat(filePathDateArr[2], \"T06:00:00.000Z\")); // allow easier sorting of blog by providing seconds since epoch\n\n    metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n    metadatas.push(metadata);\n  });\n  var sortedMetadatas = metadatas.sort(function (a, b) {\n    return parseInt(b.seconds, 10) - parseInt(a.seconds, 10);\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/MetadataBlog.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(sortedMetadatas, null, 2), \";\\n\"));\n}\n\nmodule.exports = {\n  getDocsPath: getDocsPath,\n  readSidebar: readSidebar,\n  processMetadata: processMetadata,\n  generateMetadataDocs: generateMetadataDocs,\n  generateMetadataBlog: generateMetadataBlog\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRNZXRhZGF0YS5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwicGF0aCIsInJlcXVpcmUiLCJmcyIsImdsb2IiLCJwcm9ncmFtIiwibWV0YWRhdGFVdGlscyIsImVudiIsImJsb2ciLCJsb2FkQ29uZmlnIiwic2l0ZUNvbmZpZyIsInZlcnNpb25GYWxsYmFjayIsInV0aWxzIiwiZG9jc1BhcnQiLCJkb2NzVXJsIiwiYWxsRGVsZXRlZElkcyIsIlNldCIsImRlbGV0ZWREb2NzIiwiT2JqZWN0IiwidmFsdWVzIiwiZm9yRWFjaCIsImlkTGlzdCIsImlkIiwiYWRkIiwiU3VwcG9ydGVkSGVhZGVyRmllbGRzIiwiYWxsU2lkZWJhcnMiLCJleGlzdHNTeW5jIiwiZ2V0RG9jc1BhdGgiLCJjdXN0b21Eb2NzUGF0aCIsInNob3VsZEdlbmVyYXRlTmV4dFJlbGVhc2VEb2NzIiwidmVyc2lvbmluZyIsImVuYWJsZWQiLCJza2lwTmV4dFJlbGVhc2UiLCJyZWFkU2lkZWJhciIsInNpZGViYXJzIiwiYXNzaWduIiwic2lkZWJhckRhdGEiLCJpdGVtcyIsImtleXMiLCJzaWRlYmFyIiwiY2F0ZWdvcmllcyIsInNpZGViYXJJdGVtcyIsImNhdGVnb3J5IiwiY2F0ZWdvcnlJdGVtcyIsImNhdGVnb3J5SXRlbSIsInR5cGUiLCJpZHMiLCJzdWJjYXRlZ29yeUl0ZW0iLCJwdXNoIiwic3ViY2F0ZWdvcnkiLCJsYWJlbCIsIm9yZGVyIiwibGVuZ3RoIiwiaSIsIml0ZW0iLCJwcmV2aW91cyIsIm5leHQiLCJwcm9jZXNzTWV0YWRhdGEiLCJmaWxlIiwicmVmRGlyIiwicmVzdWx0IiwiZXh0cmFjdE1ldGFkYXRhIiwicmVhZEZpbGVTeW5jIiwibGFuZ3VhZ2UiLCJnZXRMYW5ndWFnZSIsIm1ldGFkYXRhIiwiZmllbGROYW1lIiwiaGFzIiwiY29uc29sZSIsIndhcm4iLCJyYXdDb250ZW50IiwicGFyc2UiLCJuYW1lIiwiaW5jbHVkZXMiLCJFcnJvciIsInN1YkRpciIsImdldFN1YkRpciIsInNvdXJjZSIsImJhc2VuYW1lIiwidGl0bGUiLCJsYW5nUGFydCIsInRyYW5zbGF0aW9uIiwidXNlRW5nbGlzaFVybCIsInZlcnNpb25QYXJ0IiwidmVyc2lvbiIsInBlcm1hbGluayIsImxvY2FsaXplZF9pZCIsIm5leHRfaWQiLCJwcmV2aW91c19pZCIsImdlbmVyYXRlTWV0YWRhdGFEb2NzIiwiZSIsImVycm9yIiwiZXhpdCIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJ0YWciLCJtZXRhZGF0YXMiLCJkZWZhdWx0TWV0YWRhdGFzIiwiZG9jc0RpciIsImpvaW4iLCJmaWxlcyIsInN5bmMiLCJleHRlbnNpb24iLCJleHRuYW1lIiwicmVzIiwib3JpZ2luYWxfaWQiLCJmaWx0ZXIiLCJjdXJyZW50TGFuZ3VhZ2UiLCJiYXNlTWV0YWRhdGEiLCJ0b1N0cmluZyIsInJlcGxhY2UiLCJSZWdFeHAiLCJ0cmFuc2xhdGVkRGlyIiwidmVyc2lvbkRhdGEiLCJkb2NEYXRhIiwicHJldmlvdXNfdGl0bGUiLCJuZXh0X3RpdGxlIiwid3JpdGVGaWxlU3luYyIsIl9fZGlybmFtZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJnZW5lcmF0ZU1ldGFkYXRhQmxvZyIsImNvbmZpZyIsInNvcnQiLCJyZXZlcnNlIiwiZ2V0TWV0YWRhdGEiLCJmaWxlUGF0aERhdGVBcnIiLCJzcGxpdCIsImRhdGUiLCJEYXRlIiwic2Vjb25kcyIsIk1hdGgiLCJyb3VuZCIsImdldFRpbWUiLCJzb3J0ZWRNZXRhZGF0YXMiLCJhIiwiYiIsInBhcnNlSW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFaOztBQUVBLElBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxJQUFNRSxJQUFJLEdB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Q0FBQyxDQUFELENBRGhELG9CQUFoQixDQVJpQixDQVdqQjs7QUFDQTdELElBQUFBLFFBQVEsQ0FBQ2lFLE9BQVQsR0FBbUJDLElBQUksQ0FBQ0MsS0FBTCxDQUFXbkUsUUFBUSxDQUFDK0QsSUFBVCxDQUFjSyxPQUFkLEtBQTBCLElBQXJDLENBQW5CO0FBRUFyQyxJQUFBQSxTQUFTLENBQUNoRCxJQUFWLENBQWVpQixRQUFmO0FBQ0QsR0FsQkg7QUFvQkEsTUFBTXFFLGVBQWUsR0FBR3RDLFNBQVMsQ0FBQzJCLElBQVYsQ0FDdEIsVUFBQ1ksQ0FBRCxFQUFJQyxDQUFKO0FBQUEsV0FBVUMsUUFBUSxDQUFDRCxDQUFDLENBQUNOLE9BQUgsRUFBWSxFQUFaLENBQVIsR0FBMEJPLFFBQVEsQ0FBQ0YsQ0FBQyxDQUFDTCxPQUFILEVBQVksRUFBWixDQUE1QztBQUFBLEdBRHNCLENBQXhCO0FBSUEvSCxFQUFBQSxFQUFFLENBQUNrSCxhQUFILENBQ0VwSCxJQUFJLENBQUNrRyxJQUFMLENBQVVtQixTQUFWLEVBQXFCLDBCQUFyQixDQURGLFlBR0ksVUFDQSxNQURBLEdBRUEsYUFGQSxHQUVnQjtBQUNoQixTQUhBLEdBSUEsbUJBUEosU0FRS0MsSUFBSSxDQUFDQyxTQUFMLENBQWVjLGVBQWYsRUFBZ0MsSUFBaEMsRUFBc0MsQ0FBdEMsQ0FSTDtBQVVEOztBQUVESSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmhILEVBQUFBLFdBQVcsRUFBWEEsV0FEZTtBQUVmTSxFQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZndCLEVBQUFBLGVBQWUsRUFBZkEsZUFIZTtBQUlmZ0MsRUFBQUEsb0JBQW9CLEVBQXBCQSxvQkFKZTtBQUtmZ0MsRUFBQUEsb0JBQW9CLEVBQXBCQTtBQUxlLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxzZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG5jb25zdCBwcm9ncmFtID0gcmVxdWlyZSgnY29tbWFuZGVyJyk7XG5cbmNvbnN0IG1ldGFkYXRhVXRpbHMgPSByZXF1aXJlKCcuL21ldGFkYXRhVXRpbHMnKTtcblxuY29uc3QgZW52ID0gcmVxdWlyZSgnLi9lbnYuanMnKTtcbmNvbnN0IGJsb2cgPSByZXF1aXJlKCcuL2Jsb2cuanMnKTtcblxuY29uc3QgbG9hZENvbmZpZyA9IHJlcXVpcmUoJy4vY29uZmlnJyk7XG5cbmNvbnN0IHNpdGVDb25maWcgPSBsb2FkQ29uZmlnKGAke0NXRH0vc2l0ZUNvbmZpZy5qc2ApO1xuY29uc3QgdmVyc2lvbkZhbGxiYWNrID0gcmVxdWlyZSgnLi92ZXJzaW9uRmFsbGJhY2suanMnKTtcbmNvbnN0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscy5qcycpO1xuXG5jb25zdCBkb2NzUGFydCA9IGAke3NpdGVDb25maWcuZG9jc1VybCA/IGAke3NpdGVDb25maWcuZG9jc1VybH0vYCA6ICcnfWA7XG5cbi8vIEdldCBhIGxpc3Qgb2YgYWxsIElEcyB0aGF0IGhhdmUgYmVlbiBkZWxldGVkIGluIGFueSB2ZXJzaW9uLlxuLy8gV2Ugd2lsbCBhc3N1bWUgdGhlc2Ugc2hvdWxkIG5vdCBiZSBpbiB0aGUgY3VycmVudC9uZXh0IHZlcnNpb24uXG5jb25zdCBhbGxEZWxldGVkSWRzID0gbmV3IFNldCgpO1xuaWYgKHNpdGVDb25maWcuZGVsZXRlZERvY3MpIHtcbiAgT2JqZWN0LnZhbHVlcyhzaXRlQ29uZmlnLmRlbGV0ZWREb2NzKS5mb3JFYWNoKChpZExpc3QpID0+IHtcbiAgICBpZExpc3QuZm9yRWFjaCgoaWQpID0+IGFsbERlbGV0ZWRJZHMuYWRkKGlkKSk7XG4gIH0pO1xufVxuXG5jb25zdCBTdXBwb3J0ZWRIZWFkZXJGaWVsZHMgPSBuZXcgU2V0KFtcbiAgJ2lkJyxcbiAgJ3RpdGxlJyxcbiAgJ2F1dGhvcicsXG4gICdhdXRob3JVUkwnLFxuICAnYXV0aG9yRkJJRCcsXG4gICdzaWRlYmFyX2xhYmVsJyxcbiAgJ29yaWdpbmFsX2lkJyxcbiAgJ2hpZGVfdGl0bGUnLFxuICAnbGF5b3V0JyxcbiAgJ2N1c3RvbV9lZGl0X3VybCcsXG4gICdkZXNjcmlwdGlvbicsXG5dKTtcblxubGV0IGFsbFNpZGViYXJzO1xuaWYgKGZzLmV4aXN0c1N5bmMoYCR7Q1dEfS9zaWRlYmFycy5qc29uYCkpIHtcbiAgYWxsU2lkZWJhcnMgPSByZXF1aXJlKGAke0NXRH0vc2lkZWJhcnMuanNvbmApO1xufSBlbHNlIHtcbiAgYWxsU2lkZWJhcnMgPSB7fTtcbn1cblxuLy8gQ2FuIGhhdmUgYSBjdXN0b20gZG9jcyBwYXRoLiBUb3AgbGV2ZWwgZm9sZGVyIHN0aWxsIG5lZWRzIHRvIGJlIGluIGRpcmVjdG9yeVxuLy8gYXQgdGhlIHNhbWUgbGV2ZWwgYXMgYHdlYnNpdGVgLCBub3QgaW5zaWRlIGB3ZWJzaXRlYC5cbi8vICAgZS5nLiwgZG9jcy93aGVyZURvY3NSZWFsbHlFeGlzdFxuLy8gICAgICAgICB3ZWJzaXRlLWRvY3MvXG4vLyBBbGwgLm1kIGRvY3Mgc3RpbGwgKGN1cnJlbnRseSkgbXVzdCBiZSBpbiBvbmUgZmxhdCBkaXJlY3RvcnkgaGllcmFyY2h5LlxuLy8gICBlLmcuLCBkb2NzL3doZXJlRG9jc1JlYWxseUV4aXN0LyoubWQgKGFsbCAubWQgZmlsZXMgaW4gdGhpcyBkaXIpXG5mdW5jdGlvbiBnZXREb2NzUGF0aCgpIHtcbiAgcmV0dXJuIHNpdGVDb25maWcuY3VzdG9tRG9jc1BhdGggPyBzaXRlQ29uZmlnLmN1c3RvbURvY3NQYXRoIDogJ2RvY3MnO1xufVxuXG5mdW5jdGlvbiBzaG91bGRHZW5lcmF0ZU5leHRSZWxlYXNlRG9jcygpIHtcbiAgcmV0dXJuICEoZW52LnZlcnNpb25pbmcuZW5hYmxlZCAmJiBwcm9ncmFtLnNraXBOZXh0UmVsZWFzZSk7XG59XG5cbi8vIHJldHVybnMgbWFwIGZyb20gaWQgdG8gb2JqZWN0IGNvbnRhaW5pbmcgc2lkZWJhciBvcmRlcmluZyBpbmZvXG5mdW5jdGlvbiByZWFkU2lkZWJhcihzaWRlYmFycyA9IHt9KSB7XG4gIE9iamVjdC5hc3NpZ24oc2lkZWJhcnMsIHZlcnNpb25GYWxsYmFjay5zaWRlYmFyRGF0YSgpKTtcblxuICBjb25zdCBpdGVtcyA9IHt9O1xuXG4gIE9iamVjdC5rZXlzKHNpZGViYXJzKS5mb3JFYWNoKChzaWRlYmFyKSA9PiB7XG4gICAgY29uc3QgY2F0ZWdvcmllcyA9IHNpZGViYXJzW3NpZGViYXJdO1xuICAgIGNvbnN0IHNpZGViYXJJdGVtcyA9IFtdO1xuXG4gICAgT2JqZWN0LmtleXMoY2F0ZWdvcmllcykuZm9yRWFjaCgoY2F0ZWdvcnkpID0+IHtcbiAgICAgIGNvbnN0IGNhdGVnb3J5SXRlbXMgPSBjYXRlZ29yaWVzW2NhdGVnb3J5XTtcbiAgICAgIGNhdGVnb3J5SXRlbXMuZm9yRWFjaCgoY2F0ZWdvcnlJdGVtKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgY2F0ZWdvcnlJdGVtID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgIHN3aXRjaCAoY2F0ZWdvcnlJdGVtLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgJ3N1YmNhdGVnb3J5JzpcbiAgICAgICAgICAgICAgY2F0ZWdvcnlJdGVtLmlkcy5mb3JFYWNoKChzdWJjYXRlZ29yeUl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBzaWRlYmFySXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICBpZDogc3ViY2F0ZWdvcnlJdGVtLFxuICAgICAgICAgICAgICAgICAgY2F0ZWdvcnksXG4gICAgICAgICAgICAgICAgICBzdWJjYXRlZ29yeTogY2F0ZWdvcnlJdGVtLmxhYmVsLFxuICAgICAgICAgICAgICAgICAgb3JkZXI6IHNpZGViYXJJdGVtcy5sZW5ndGggKyAxLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIElzIGEgcmVndWxhciBpZCB2YWx1ZS5cbiAgICAgICAgc2lkZWJhckl0ZW1zLnB1c2goe1xuICAgICAgICAgIGlkOiBjYXRlZ29yeUl0ZW0sXG4gICAgICAgICAgY2F0ZWdvcnksXG4gICAgICAgICAgc3ViY2F0ZWdvcnk6IG51bGwsXG4gICAgICAgICAgb3JkZXI6IHNpZGViYXJJdGVtcy5sZW5ndGggKyAxLFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaWRlYmFySXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGl0ZW0gPSBzaWRlYmFySXRlbXNbaV07XG4gICAgICBsZXQgcHJldmlvdXMgPSBudWxsO1xuICAgICAgbGV0IG5leHQgPSBudWxsO1xuXG4gICAgICBpZiAoaSA+IDApIHtcbiAgICAgICAgcHJldmlvdXMgPSBzaWRlYmFySXRlbXNbaSAtIDFdLmlkO1xuICAgICAgfVxuXG4gICAgICBpZiAoaSA8IHNpZGViYXJJdGVtcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIG5leHQgPSBzaWRlYmFySXRlbXNbaSArIDFdLmlkO1xuICAgICAgfVxuXG4gICAgICBpdGVtc1tpdGVtLmlkXSA9IHtcbiAgICAgICAgcHJldmlvdXMsXG4gICAgICAgIG5leHQsXG4gICAgICAgIHNpZGViYXIsXG4gICAgICAgIGNhdGVnb3J5OiBpdGVtLmNhdGVnb3J5LFxuICAgICAgICBzdWJjYXRlZ29yeTogaXRlbS5zdWJjYXRlZ29yeSxcbiAgICAgICAgb3JkZXI6IGl0ZW0ub3JkZXIsXG4gICAgICB9O1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGl0ZW1zO1xufVxuXG4vLyBwcm9jZXNzIHRoZSBtZXRhZGF0YSBmb3IgYSBkb2N1bWVudCBmb3VuZCBpbiBlaXRoZXIgJ2RvY3MnIG9yICd0cmFuc2xhdGVkX2RvY3MnXG5mdW5jdGlvbiBwcm9jZXNzTWV0YWRhdGEoZmlsZSwgcmVmRGlyKSB7XG4gIGNvbnN0IHJlc3VsdCA9IG1ldGFkYXRhVXRpbHMuZXh0cmFjdE1ldGFkYXRhKGZzLnJlYWRGaWxlU3luYyhmaWxlLCAndXRmOCcpKTtcbiAgY29uc3QgbGFuZ3VhZ2UgPSB1dGlscy5nZXRMYW5ndWFnZShmaWxlLCByZWZEaXIpIHx8ICdlbic7XG5cbiAgY29uc3QgbWV0YWRhdGEgPSB7fTtcbiAgT2JqZWN0LmtleXMocmVzdWx0Lm1ldGFkYXRhKS5mb3JFYWNoKChmaWVsZE5hbWUpID0+IHtcbiAgICBpZiAoU3VwcG9ydGVkSGVhZGVyRmllbGRzLmhhcyhmaWVsZE5hbWUpKSB7XG4gICAgICBtZXRhZGF0YVtmaWVsZE5hbWVdID0gcmVzdWx0Lm1ldGFkYXRhW2ZpZWxkTmFtZV07XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUud2FybihgSGVhZGVyIGZpZWxkIFwiJHtmaWVsZE5hbWV9XCIgaW4gJHtmaWxlfSBpcyBub3Qgc3VwcG9ydGVkLmApO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgcmF3Q29udGVudCA9IHJlc3VsdC5yYXdDb250ZW50O1xuXG4gIGlmICghbWV0YWRhdGEuaWQpIHtcbiAgICBtZXRhZGF0YS5pZCA9IHBhdGgucGFyc2UoZmlsZSkubmFtZTtcbiAgfVxuICBpZiAobWV0YWRhdGEuaWQuaW5jbHVkZXMoJy8nKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRG9jdW1lbnQgaWQgY2Fubm90IGluY2x1ZGUgXCIvXCIuJyk7XG4gIH1cblxuICAvLyBJZiBhIGZpbGUgaXMgbG9jYXRlZCBpbiBhIHN1YmRpcmVjdG9yeSwgcHJlcGVuZCB0aGUgc3ViZGlyIHRvIGl0J3MgSURcbiAgLy8gRXhhbXBsZTpcbiAgLy8gIChmaWxlOiAnZG9jdXNhdXJ1cy9kb2NzL3Byb2plY3RBL3Rlc3QubWQnLCBJRCAndGVzdCcsIHJlZkRpcjogJ2RvY3VzYXVydXMvZG9jcycpXG4gIC8vICByZXR1cm5zICdwcm9qZWN0QS90ZXN0J1xuICBjb25zdCBzdWJEaXIgPSB1dGlscy5nZXRTdWJEaXIoZmlsZSwgcmVmRGlyKTtcbiAgaWYgKHN1YkRpcikge1xuICAgIG1ldGFkYXRhLmlkID0gYCR7c3ViRGlyfS8ke21ldGFkYXRhLmlkfWA7XG4gIH1cblxuICAvLyBFeGFtcGxlOiBgZG9jcy9wcm9qZWN0QS90ZXN0Lm1kYCBzb3VyY2UgaXMgYHByb2plY3RBL3Rlc3QubWRgXG4gIG1ldGFkYXRhLnNvdXJjZSA9IHN1YkRpclxuICAgID8gYCR7c3ViRGlyfS8ke3BhdGguYmFzZW5hbWUoZmlsZSl9YFxuICAgIDogcGF0aC5iYXNlbmFtZShmaWxlKTtcblxuICBpZiAoIW1ldGFkYXRhLnRpdGxlKSB7XG4gICAgbWV0YWRhdGEudGl0bGUgPSBtZXRhZGF0YS5pZDtcbiAgfVxuXG4gIGNvbnN0IGxhbmdQYXJ0ID1cbiAgICBlbnYudHJhbnNsYXRpb24uZW5hYmxlZCB8fCBzaXRlQ29uZmlnLnVzZUVuZ2xpc2hVcmwgPyBgJHtsYW5ndWFnZX0vYCA6ICcnO1xuICBsZXQgdmVyc2lvblBhcnQgPSAnJztcbiAgaWYgKGVudi52ZXJzaW9uaW5nLmVuYWJsZWQpIHtcbiAgICBtZXRhZGF0YS52ZXJzaW9uID0gJ25leHQnO1xuICAgIHZlcnNpb25QYXJ0ID0gJ25leHQvJztcbiAgfVxuXG4gIG1ldGFkYXRhLnBlcm1hbGluayA9IGAke2RvY3NQYXJ0fSR7bGFuZ1BhcnR9JHt2ZXJzaW9uUGFydH0ke21ldGFkYXRhLmlkfS5odG1sYDtcblxuICAvLyBjaGFuZ2UgaWRzIHByZXZpb3VzLCBuZXh0XG4gIG1ldGFkYXRhLmxvY2FsaXplZF9pZCA9IG1ldGFkYXRhLmlkO1xuICBtZXRhZGF0YS5pZCA9IChlbnYudHJhbnNsYXRpb24uZW5hYmxlZCA/IGAke2xhbmd1YWdlfS1gIDogJycpICsgbWV0YWRhdGEuaWQ7XG4gIG1ldGFkYXRhLmxhbmd1YWdlID0gZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyBsYW5ndWFnZSA6ICdlbic7XG5cbiAgY29uc3QgaXRlbXMgPSByZWFkU2lkZWJhcihhbGxTaWRlYmFycyk7XG4gIGNvbnN0IGlkID0gbWV0YWRhdGEubG9jYWxpemVkX2lkO1xuICBjb25zdCBpdGVtID0gaXRlbXNbaWRdO1xuICBpZiAoaXRlbSkge1xuICAgIG1ldGFkYXRhLnNpZGViYXIgPSBpdGVtLnNpZGViYXI7XG4gICAgbWV0YWRhdGEuY2F0ZWdvcnkgPSBpdGVtLmNhdGVnb3J5O1xuICAgIG1ldGFkYXRhLnN1YmNhdGVnb3J5ID0gaXRlbS5zdWJjYXRlZ29yeTtcbiAgICBtZXRhZGF0YS5vcmRlciA9IGl0ZW0ub3JkZXI7XG5cbiAgICBpZiAoaXRlbS5uZXh0KSB7XG4gICAgICBtZXRhZGF0YS5uZXh0X2lkID0gaXRlbS5uZXh0O1xuICAgICAgbWV0YWRhdGEubmV4dCA9XG4gICAgICAgIChlbnYudHJhbnNsYXRpb24uZW5hYmxlZCA/IGAke2xhbmd1YWdlfS1gIDogJycpICsgaXRlbS5uZXh0O1xuICAgIH1cbiAgICBpZiAoaXRlbS5wcmV2aW91cykge1xuICAgICAgbWV0YWRhdGEucHJldmlvdXNfaWQgPSBpdGVtLnByZXZpb3VzO1xuICAgICAgbWV0YWRhdGEucHJldmlvdXMgPVxuICAgICAgICAoZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyBgJHtsYW5ndWFnZX0tYCA6ICcnKSArIGl0ZW0ucHJldmlvdXM7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHttZXRhZGF0YSwgcmF3Q29udGVudH07XG59XG5cbi8vIHByb2Nlc3MgbWV0YWRhdGEgZm9yIGFsbCBkb2NzIGFuZCBzYXZlIGludG8gY29yZS9tZXRhZGF0YS5qc1xuZnVuY3Rpb24gZ2VuZXJhdGVNZXRhZGF0YURvY3MoKSB7XG4gIGxldCBvcmRlcjtcbiAgdHJ5IHtcbiAgICBvcmRlciA9IHJlYWRTaWRlYmFyKGFsbFNpZGViYXJzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xuICB9XG5cbiAgY29uc3QgZW5hYmxlZExhbmd1YWdlcyA9IGVudi50cmFuc2xhdGlvblxuICAgIC5lbmFibGVkTGFuZ3VhZ2VzKClcbiAgICAubWFwKChsYW5ndWFnZSkgPT4gbGFuZ3VhZ2UudGFnKTtcblxuICBjb25zdCBtZXRhZGF0YXMgPSB7fTtcbiAgY29uc3QgZGVmYXVsdE1ldGFkYXRhcyA9IHt9O1xuXG4gIGlmIChzaG91bGRHZW5lcmF0ZU5leHRSZWxlYXNlRG9jcygpKSB7XG4gICAgLy8gbWV0YWRhdGEgZm9yIGVuZ2xpc2ggZmlsZXNcbiAgICBjb25zdCBkb2NzRGlyID0gcGF0aC5qb2luKENXRCwgJy4uLycsIGdldERvY3NQYXRoKCkpO1xuICAgIGxldCBmaWxlcyA9IGdsb2Iuc3luYyhgJHtkb2NzRGlyfS8qKmApO1xuICAgIGZpbGVzLmZvckVhY2goKGZpbGUpID0+IHtcbiAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IHBhdGguZXh0bmFtZShmaWxlKTtcblxuICAgICAgaWYgKGV4dGVuc2lvbiA9PT0gJy5tZCcgfHwgZXh0ZW5zaW9uID09PSAnLm1hcmtkb3duJykge1xuICAgICAgICBjb25zdCByZXMgPSBwcm9jZXNzTWV0YWRhdGEoZmlsZSwgZG9jc0Rpcik7XG5cbiAgICAgICAgaWYgKCFyZXMpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWV0YWRhdGEgPSByZXMubWV0YWRhdGE7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBhbGxEZWxldGVkSWRzLmhhcyhtZXRhZGF0YS5pZCkgfHxcbiAgICAgICAgICAobWV0YWRhdGEub3JpZ2luYWxfaWQgJiYgYWxsRGVsZXRlZElkcy5oYXMobWV0YWRhdGEub3JpZ2luYWxfaWQpKVxuICAgICAgICApIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbWV0YWRhdGFzW21ldGFkYXRhLmlkXSA9IG1ldGFkYXRhO1xuXG4gICAgICAgIC8vIGNyZWF0ZSBhIGRlZmF1bHQgbGlzdCBvZiBkb2N1bWVudHMgZm9yIGVhY2ggZW5hYmxlZCBsYW5ndWFnZSBiYXNlZCBvbiBkb2NzIGluIEVuZ2xpc2hcbiAgICAgICAgLy8gdGhlc2Ugd2lsbCBnZXQgcmVwbGFjZWQgaWYvd2hlbiB0aGUgbG9jYWxpemVkIGZpbGUgaXMgZG93bmxvYWRlZCBmcm9tIGNyb3dkaW5cbiAgICAgICAgZW5hYmxlZExhbmd1YWdlc1xuICAgICAgICAgIC5maWx0ZXIoKGN1cnJlbnRMYW5ndWFnZSkgPT4gY3VycmVudExhbmd1YWdlICE9PSAnZW4nKVxuICAgICAgICAgIC5mb3JFYWNoKChjdXJyZW50TGFuZ3VhZ2UpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGJhc2VNZXRhZGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIG1ldGFkYXRhKTtcbiAgICAgICAgICAgIGJhc2VNZXRhZGF0YS5pZCA9IGJhc2VNZXRhZGF0YS5pZFxuICAgICAgICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICAgICAgICAucmVwbGFjZSgvXmVuLS8sIGAke2N1cnJlbnRMYW5ndWFnZX0tYCk7XG4gICAgICAgICAgICBpZiAoYmFzZU1ldGFkYXRhLnBlcm1hbGluaykge1xuICAgICAgICAgICAgICBiYXNlTWV0YWRhdGEucGVybWFsaW5rID0gYmFzZU1ldGFkYXRhLnBlcm1hbGlua1xuICAgICAgICAgICAgICAgIC50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoXG4gICAgICAgICAgICAgICAgICBuZXcgUmVnRXhwKGBeJHtkb2NzUGFydH1lbi9gKSxcbiAgICAgICAgICAgICAgICAgIGAke2RvY3NQYXJ0fSR7Y3VycmVudExhbmd1YWdlfS9gLFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYmFzZU1ldGFkYXRhLm5leHQpIHtcbiAgICAgICAgICAgICAgYmFzZU1ldGFkYXRhLm5leHQgPSBiYXNlTWV0YWRhdGEubmV4dFxuICAgICAgICAgICAgICAgIC50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL15lbi0vLCBgJHtjdXJyZW50TGFuZ3VhZ2V9LWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGJhc2VNZXRhZGF0YS5wcmV2aW91cykge1xuICAgICAgICAgICAgICBiYXNlTWV0YWRhdGEucHJldmlvdXMgPSBiYXNlTWV0YWRhdGEucHJldmlvdXNcbiAgICAgICAgICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9eZW4tLywgYCR7Y3VycmVudExhbmd1YWdlfS1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJhc2VNZXRhZGF0YS5sYW5ndWFnZSA9IGN1cnJlbnRMYW5ndWFnZTtcbiAgICAgICAgICAgIGRlZmF1bHRNZXRhZGF0YXNbYmFzZU1ldGFkYXRhLmlkXSA9IGJhc2VNZXRhZGF0YTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihtZXRhZGF0YXMsIGRlZmF1bHRNZXRhZGF0YXMpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gbWV0YWRhdGEgZm9yIG5vbi1lbmdsaXNoIGRvY3NcbiAgICBjb25zdCB0cmFuc2xhdGVkRGlyID0gcGF0aC5qb2luKENXRCwgJ3RyYW5zbGF0ZWRfZG9jcycpO1xuICAgIGZpbGVzID0gZ2xvYi5zeW5jKGAke0NXRH0vdHJhbnNsYXRlZF9kb2NzLyoqYCk7XG4gICAgZmlsZXMuZm9yRWFjaCgoZmlsZSkgPT4ge1xuICAgICAgaWYgKCF1dGlscy5nZXRMYW5ndWFnZShmaWxlLCB0cmFuc2xhdGVkRGlyKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IHBhdGguZXh0bmFtZShmaWxlKTtcblxuICAgICAgaWYgKGV4dGVuc2lvbiA9PT0gJy5tZCcgfHwgZXh0ZW5zaW9uID09PSAnLm1hcmtkb3duJykge1xuICAgICAgICBjb25zdCByZXMgPSBwcm9jZXNzTWV0YWRhdGEoZmlsZSwgdHJhbnNsYXRlZERpcik7XG4gICAgICAgIGlmICghcmVzKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1ldGFkYXRhID0gcmVzLm1ldGFkYXRhO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgYWxsRGVsZXRlZElkcy5oYXMobWV0YWRhdGEuaWQpIHx8XG4gICAgICAgICAgKG1ldGFkYXRhLm9yaWdpbmFsX2lkICYmIGFsbERlbGV0ZWRJZHMuaGFzKG1ldGFkYXRhLm9yaWdpbmFsX2lkKSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIG1ldGFkYXRhc1ttZXRhZGF0YS5pZF0gPSBtZXRhZGF0YTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8vIG1ldGFkYXRhIGZvciB2ZXJzaW9uZWQgZG9jc1xuICBjb25zdCB2ZXJzaW9uRGF0YSA9IHZlcnNpb25GYWxsYmFjay5kb2NEYXRhKCk7XG4gIHZlcnNpb25EYXRhLmZvckVhY2goKG1ldGFkYXRhKSA9PiB7XG4gICAgY29uc3QgaWQgPSBtZXRhZGF0YS5sb2NhbGl6ZWRfaWQ7XG4gICAgaWYgKG9yZGVyW2lkXSkge1xuICAgICAgbWV0YWRhdGEuc2lkZWJhciA9IG9yZGVyW2lkXS5zaWRlYmFyO1xuICAgICAgbWV0YWRhdGEuY2F0ZWdvcnkgPSBvcmRlcltpZF0uY2F0ZWdvcnk7XG4gICAgICBtZXRhZGF0YS5zdWJjYXRlZ29yeSA9IG9yZGVyW2lkXS5zdWJjYXRlZ29yeTtcbiAgICAgIG1ldGFkYXRhLm9yZGVyID0gb3JkZXJbaWRdLm9yZGVyO1xuXG4gICAgICBpZiAob3JkZXJbaWRdLm5leHQpIHtcbiAgICAgICAgbWV0YWRhdGEubmV4dF9pZCA9IG9yZGVyW2lkXS5uZXh0LnJlcGxhY2UoXG4gICAgICAgICAgYHZlcnNpb24tJHttZXRhZGF0YS52ZXJzaW9ufS1gLFxuICAgICAgICAgICcnLFxuICAgICAgICApO1xuICAgICAgICBtZXRhZGF0YS5uZXh0ID1cbiAgICAgICAgICAoZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyBgJHttZXRhZGF0YS5sYW5ndWFnZX0tYCA6ICcnKSArXG4gICAgICAgICAgb3JkZXJbaWRdLm5leHQ7XG4gICAgICB9XG4gICAgICBpZiAob3JkZXJbaWRdLnByZXZpb3VzKSB7XG4gICAgICAgIG1ldGFkYXRhLnByZXZpb3VzX2lkID0gb3JkZXJbaWRdLnByZXZpb3VzLnJlcGxhY2UoXG4gICAgICAgICAgYHZlcnNpb24tJHttZXRhZGF0YS52ZXJzaW9ufS1gLFxuICAgICAgICAgICcnLFxuICAgICAgICApO1xuICAgICAgICBtZXRhZGF0YS5wcmV2aW91cyA9XG4gICAgICAgICAgKGVudi50cmFuc2xhdGlvbi5lbmFibGVkID8gYCR7bWV0YWRhdGEubGFuZ3VhZ2V9LWAgOiAnJykgK1xuICAgICAgICAgIG9yZGVyW2lkXS5wcmV2aW91cztcbiAgICAgIH1cbiAgICB9XG4gICAgbWV0YWRhdGFzW21ldGFkYXRhLmlkXSA9IG1ldGFkYXRhO1xuICB9KTtcblxuICAvLyBHZXQgdGhlIHRpdGxlcyBvZiB0aGUgcHJldmlvdXMgYW5kIG5leHQgaWRzIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluXG4gIC8vIG5hdmlnYXRpb24gYnV0dG9ucyBpbiBEb2NzTGF5b3V0LmpzXG4gIE9iamVjdC5rZXlzKG1ldGFkYXRhcykuZm9yRWFjaCgobWV0YWRhdGEpID0+IHtcbiAgICBpZiAobWV0YWRhdGFzW21ldGFkYXRhXS5wcmV2aW91cykge1xuICAgICAgaWYgKG1ldGFkYXRhc1ttZXRhZGF0YXNbbWV0YWRhdGFdLnByZXZpb3VzXSkge1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFdLnByZXZpb3VzX3RpdGxlID1cbiAgICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFzW21ldGFkYXRhXS5wcmV2aW91c10udGl0bGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFdLnByZXZpb3VzX3RpdGxlID0gJ1ByZXZpb3VzJztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG1ldGFkYXRhc1ttZXRhZGF0YV0ubmV4dCkge1xuICAgICAgaWYgKG1ldGFkYXRhc1ttZXRhZGF0YXNbbWV0YWRhdGFdLm5leHRdKSB7XG4gICAgICAgIG1ldGFkYXRhc1ttZXRhZGF0YV0ubmV4dF90aXRsZSA9XG4gICAgICAgICAgbWV0YWRhdGFzW21ldGFkYXRhc1ttZXRhZGF0YV0ubmV4dF0udGl0bGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFdLm5leHRfdGl0bGUgPSAnTmV4dCc7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBmcy53cml0ZUZpbGVTeW5jKFxuICAgIHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vY29yZS9tZXRhZGF0YS5qcycpLFxuICAgIGAke1xuICAgICAgJy8qKlxcbicgK1xuICAgICAgJyAqIEAnICtcbiAgICAgICdnZW5lcmF0ZWRcXG4nICsgLy8gc2VwYXJhdGUgdGhpcyBvdXQgZm9yIE51Y2xpZGUgdHJlYXRpbmcgQGdlbmVyYXRlZCBhcyByZWFkb25seVxuICAgICAgJyAqL1xcbicgK1xuICAgICAgJ21vZHVsZS5leHBvcnRzID0gJ1xuICAgIH0ke0pTT04uc3RyaW5naWZ5KG1ldGFkYXRhcywgbnVsbCwgMil9O1xcbmAsXG4gICk7XG59XG5cbi8vIHByb2Nlc3MgbWV0YWRhdGEgZm9yIGJsb2cgcG9zdHMgYW5kIHNhdmUgaW50byBjb3JlL01ldGFkYXRhQmxvZy5qc1xuZnVuY3Rpb24gZ2VuZXJhdGVNZXRhZGF0YUJsb2coY29uZmlnID0gc2l0ZUNvbmZpZykge1xuICBjb25zdCBtZXRhZGF0YXMgPSBbXTtcblxuICBjb25zdCBmaWxlcyA9IGdsb2Iuc3luYyhgJHtDV0R9L2Jsb2cvKiovKi4qYCk7XG4gIGZpbGVzXG4gICAgLnNvcnQoKVxuICAgIC5yZXZlcnNlKClcbiAgICAuZm9yRWFjaCgoZmlsZSkgPT4ge1xuICAgICAgY29uc3QgZXh0ZW5zaW9uID0gcGF0aC5leHRuYW1lKGZpbGUpO1xuICAgICAgaWYgKGV4dGVuc2lvbiAhPT0gJy5tZCcgJiYgZXh0ZW5zaW9uICE9PSAnLm1hcmtkb3duJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBtZXRhZGF0YSA9IGJsb2cuZ2V0TWV0YWRhdGEoZmlsZSwgY29uZmlnKTtcbiAgICAgIC8vIEV4dHJhY3QsIFlZWVksIE1NLCBERCBmcm9tIHRoZSBmaWxlIG5hbWVcbiAgICAgIGNvbnN0IGZpbGVQYXRoRGF0ZUFyciA9IHBhdGguYmFzZW5hbWUoZmlsZSkuc3BsaXQoJy0nKTtcbiAgICAgIG1ldGFkYXRhLmRhdGUgPSBuZXcgRGF0ZShcbiAgICAgICAgYCR7ZmlsZVBhdGhEYXRlQXJyWzBdfS0ke2ZpbGVQYXRoRGF0ZUFyclsxXX0tJHtmaWxlUGF0aERhdGVBcnJbMl19VDA2OjAwOjAwLjAwMFpgLFxuICAgICAgKTtcbiAgICAgIC8vIGFsbG93IGVhc2llciBzb3J0aW5nIG9mIGJsb2cgYnkgcHJvdmlkaW5nIHNlY29uZHMgc2luY2UgZXBvY2hcbiAgICAgIG1ldGFkYXRhLnNlY29uZHMgPSBNYXRoLnJvdW5kKG1ldGFkYXRhLmRhdGUuZ2V0VGltZSgpIC8gMTAwMCk7XG5cbiAgICAgIG1ldGFkYXRhcy5wdXNoKG1ldGFkYXRhKTtcbiAgICB9KTtcblxuICBjb25zdCBzb3J0ZWRNZXRhZGF0YXMgPSBtZXRhZGF0YXMuc29ydChcbiAgICAoYSwgYikgPT4gcGFyc2VJbnQoYi5zZWNvbmRzLCAxMCkgLSBwYXJzZUludChhLnNlY29uZHMsIDEwKSxcbiAgKTtcblxuICBmcy53cml0ZUZpbGVTeW5jKFxuICAgIHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vY29yZS9NZXRhZGF0YUJsb2cuanMnKSxcbiAgICBgJHtcbiAgICAgICcvKipcXG4nICtcbiAgICAgICcgKiBAJyArXG4gICAgICAnZ2VuZXJhdGVkXFxuJyArIC8vIHNlcGFyYXRlIHRoaXMgb3V0IGZvciBOdWNsaWRlIHRyZWF0aW5nIEBnZW5lcmF0ZWQgYXMgcmVhZG9ubHlcbiAgICAgICcgKi9cXG4nICtcbiAgICAgICdtb2R1bGUuZXhwb3J0cyA9ICdcbiAgICB9JHtKU09OLnN0cmluZ2lmeShzb3J0ZWRNZXRhZGF0YXMsIG51bGwsIDIpfTtcXG5gLFxuICApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0RG9jc1BhdGgsXG4gIHJlYWRTaWRlYmFyLFxuICBwcm9jZXNzTWV0YWRhdGEsXG4gIGdlbmVyYXRlTWV0YWRhdGFEb2NzLFxuICBnZW5lcmF0ZU1ldGFkYXRhQmxvZyxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "readMetadata.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "path",
        "require",
        "fs",
        "glob",
        "program",
        "metadataUtils",
        "env",
        "blog",
        "loadConfig",
        "siteConfig",
        "versionFallback",
        "utils",
        "docsPart",
        "docsUrl",
        "allDeletedIds",
        "Set",
        "deletedDocs",
        "Object",
        "values",
        "forEach",
        "idList",
        "id",
        "add",
        "SupportedHeaderFields",
        "allSidebars",
        "existsSync",
        "getDocsPath",
        "customDocsPath",
        "shouldGenerateNextReleaseDocs",
        "versioning",
        "enabled",
        "skipNextRelease",
        "readSidebar",
        "sidebars",
        "assign",
        "sidebarData",
        "items",
        "keys",
        "sidebar",
        "categories",
        "sidebarItems",
        "category",
        "categoryItems",
        "categoryItem",
        "type",
        "ids",
        "subcategoryItem",
        "push",
        "subcategory",
        "label",
        "order",
        "length",
        "i",
        "item",
        "previous",
        "next",
        "processMetadata",
        "file",
        "refDir",
        "result",
        "extractMetadata",
        "readFileSync",
        "language",
        "getLanguage",
        "metadata",
        "fieldName",
        "has",
        "console",
        "warn",
        "rawContent",
        "parse",
        "name",
        "includes",
        "Error",
        "subDir",
        "getSubDir",
        "source",
        "basename",
        "title",
        "langPart",
        "translation",
        "useEnglishUrl",
        "versionPart",
        "version",
        "permalink",
        "localized_id",
        "next_id",
        "previous_id",
        "generateMetadataDocs",
        "e",
        "error",
        "exit",
        "enabledLanguages",
        "map",
        "tag",
        "metadatas",
        "defaultMetadatas",
        "docsDir",
        "join",
        "files",
        "sync",
        "extension",
        "extname",
        "res",
        "original_id",
        "filter",
        "currentLanguage",
        "baseMetadata",
        "toString",
        "replace",
        "RegExp",
        "translatedDir",
        "versionData",
        "docData",
        "previous_title",
        "next_title",
        "writeFileSync",
        "__dirname",
        "JSON",
        "stringify",
        "generateMetadataBlog",
        "config",
        "sort",
        "reverse",
        "getMetadata",
        "filePathDateArr",
        "split",
        "date",
        "Date",
        "seconds",
        "Math",
        "round",
        "getTime",
        "sortedMetadatas",
        "a",
        "b",
        "parseInt",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\n\nconst path = require('path');\nconst fs = require('fs');\nconst glob = require('glob');\nconst program = require('commander');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst blog = require('./blog.js');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\nconst versionFallback = require('./versionFallback.js');\nconst utils = require('./utils.js');\n\nconst docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n\n// Get a list of all IDs that have been deleted in any version.\n// We will assume these should not be in the current/next version.\nconst allDeletedIds = new Set();\nif (siteConfig.deletedDocs) {\n  Object.values(siteConfig.deletedDocs).forEach((idList) => {\n    idList.forEach((id) => allDeletedIds.add(id));\n  });\n}\n\nconst SupportedHeaderFields = new Set([\n  'id',\n  'title',\n  'author',\n  'authorURL',\n  'authorFBID',\n  'sidebar_label',\n  'original_id',\n  'hide_title',\n  'layout',\n  'custom_edit_url',\n  'description',\n]);\n\nlet allSidebars;\nif (fs.existsSync(`${CWD}/sidebars.json`)) {\n  allSidebars = require(`${CWD}/sidebars.json`);\n} else {\n  allSidebars = {};\n}\n\n// Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n}\n\n// returns map from id to object containing sidebar ordering info\nfunction readSidebar(sidebars = {}) {\n  Object.assign(sidebars, versionFallback.sidebarData());\n\n  const items = {};\n\n  Object.keys(sidebars).forEach((sidebar) => {\n    const categories = sidebars[sidebar];\n    const sidebarItems = [];\n\n    Object.keys(categories).forEach((category) => {\n      const categoryItems = categories[category];\n      categoryItems.forEach((categoryItem) => {\n        if (typeof categoryItem === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach((subcategoryItem) => {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1,\n                });\n              });\n              return;\n            default:\n              return;\n          }\n        }\n\n        // Is a regular id value.\n        sidebarItems.push({\n          id: categoryItem,\n          category,\n          subcategory: null,\n          order: sidebarItems.length + 1,\n        });\n      });\n    });\n\n    for (let i = 0; i < sidebarItems.length; i++) {\n      const item = sidebarItems[i];\n      let previous = null;\n      let next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous,\n        next,\n        sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order,\n      };\n    }\n  });\n\n  return items;\n}\n\n// process the metadata for a document found in either 'docs' or 'translated_docs'\nfunction processMetadata(file, refDir) {\n  const result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const language = utils.getLanguage(file, refDir) || 'en';\n\n  const metadata = {};\n  Object.keys(result.metadata).forEach((fieldName) => {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(`Header field \"${fieldName}\" in ${file} is not supported.`);\n    }\n  });\n\n  const rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  }\n\n  // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n  const subDir = utils.getSubDir(file, refDir);\n  if (subDir) {\n    metadata.id = `${subDir}/${metadata.id}`;\n  }\n\n  // Example: `docs/projectA/test.md` source is `projectA/test.md`\n  metadata.source = subDir\n    ? `${subDir}/${path.basename(file)}`\n    : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  const langPart =\n    env.translation.enabled || siteConfig.useEnglishUrl ? `${language}/` : '';\n  let versionPart = '';\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = `${docsPart}${langPart}${versionPart}${metadata.id}.html`;\n\n  // change ids previous, next\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n\n  const items = readSidebar(allSidebars);\n  const id = metadata.localized_id;\n  const item = items[id];\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next =\n        (env.translation.enabled ? `${language}-` : '') + item.next;\n    }\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous =\n        (env.translation.enabled ? `${language}-` : '') + item.previous;\n    }\n  }\n\n  return {metadata, rawContent};\n}\n\n// process metadata for all docs and save into core/metadata.js\nfunction generateMetadataDocs() {\n  let order;\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  const enabledLanguages = env.translation\n    .enabledLanguages()\n    .map((language) => language.tag);\n\n  const metadatas = {};\n  const defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    const docsDir = path.join(CWD, '../', getDocsPath());\n    let files = glob.sync(`${docsDir}/**`);\n    files.forEach((file) => {\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        if (\n          allDeletedIds.has(metadata.id) ||\n          (metadata.original_id && allDeletedIds.has(metadata.original_id))\n        ) {\n          return;\n        }\n        metadatas[metadata.id] = metadata;\n\n        // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n        enabledLanguages\n          .filter((currentLanguage) => currentLanguage !== 'en')\n          .forEach((currentLanguage) => {\n            const baseMetadata = Object.assign({}, metadata);\n            baseMetadata.id = baseMetadata.id\n              .toString()\n              .replace(/^en-/, `${currentLanguage}-`);\n            if (baseMetadata.permalink) {\n              baseMetadata.permalink = baseMetadata.permalink\n                .toString()\n                .replace(\n                  new RegExp(`^${docsPart}en/`),\n                  `${docsPart}${currentLanguage}/`,\n                );\n            }\n            if (baseMetadata.next) {\n              baseMetadata.next = baseMetadata.next\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            if (baseMetadata.previous) {\n              baseMetadata.previous = baseMetadata.previous\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            baseMetadata.language = currentLanguage;\n            defaultMetadatas[baseMetadata.id] = baseMetadata;\n          });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    });\n\n    // metadata for non-english docs\n    const translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(`${CWD}/translated_docs/**`);\n    files.forEach((file) => {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, translatedDir);\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        if (\n          allDeletedIds.has(metadata.id) ||\n          (metadata.original_id && allDeletedIds.has(metadata.original_id))\n        ) {\n          return;\n        }\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  }\n\n  // metadata for versioned docs\n  const versionData = versionFallback.docData();\n  versionData.forEach((metadata) => {\n    const id = metadata.localized_id;\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.next =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].next;\n      }\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.previous =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].previous;\n      }\n    }\n    metadatas[metadata.id] = metadata;\n  });\n\n  // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n  Object.keys(metadatas).forEach((metadata) => {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title =\n          metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title =\n          metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/metadata.js'),\n    `${\n      '/**\\n' +\n      ' * @' +\n      'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '\n    }${JSON.stringify(metadatas, null, 2)};\\n`,\n  );\n}\n\n// process metadata for blog posts and save into core/MetadataBlog.js\nfunction generateMetadataBlog(config = siteConfig) {\n  const metadatas = [];\n\n  const files = glob.sync(`${CWD}/blog/**/*.*`);\n  files\n    .sort()\n    .reverse()\n    .forEach((file) => {\n      const extension = path.extname(file);\n      if (extension !== '.md' && extension !== '.markdown') {\n        return;\n      }\n      const metadata = blog.getMetadata(file, config);\n      // Extract, YYYY, MM, DD from the file name\n      const filePathDateArr = path.basename(file).split('-');\n      metadata.date = new Date(\n        `${filePathDateArr[0]}-${filePathDateArr[1]}-${filePathDateArr[2]}T06:00:00.000Z`,\n      );\n      // allow easier sorting of blog by providing seconds since epoch\n      metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n\n      metadatas.push(metadata);\n    });\n\n  const sortedMetadatas = metadatas.sort(\n    (a, b) => parseInt(b.seconds, 10) - parseInt(a.seconds, 10),\n  );\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/MetadataBlog.js'),\n    `${\n      '/**\\n' +\n      ' * @' +\n      'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '\n    }${JSON.stringify(sortedMetadatas, null, 2)};\\n`,\n  );\n}\n\nmodule.exports = {\n  getDocsPath,\n  readSidebar,\n  processMetadata,\n  generateMetadataDocs,\n  generateMetadataBlog,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\metadataUtils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\metadataUtils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\metadataUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\metadataUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "metadataUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  var lines = content.split(/\\r?\\n/);\n\n  if (lines[0] !== '---') {\n    return {};\n  }\n\n  var i = 1;\n\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n')\n  };\n} // Extract markdown metadata header\n\n\nfunction extractMetadata(content) {\n  var metadata = {};\n  var both = splitHeader(content); // if no content returned, then that means there was no header, and both.header is the content\n\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {\n        metadata: metadata,\n        rawContent: content\n      };\n    }\n\n    return {\n      metadata: metadata,\n      rawContent: both.header\n    };\n  } // New line characters => to handle all operating systems.\n\n\n  var lines = both.header.split(/\\r?\\n/); // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n\n  for (var i = 0; i < lines.length - 1; ++i) {\n    var keyvalue = lines[i].split(':');\n    var key = keyvalue[0].trim();\n    var value = keyvalue.slice(1).join(':').trim();\n\n    try {\n      value = JSON.parse(value);\n    } catch (err) {// Ignore the error as it means it's not a JSON value.\n    }\n\n    metadata[key] = value;\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: both.content\n  };\n} // mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\n\n\nfunction mdToHtml(Metadata, siteConfig) {\n  var baseUrl = siteConfig.baseUrl,\n      docsUrl = siteConfig.docsUrl;\n  var result = {};\n  Object.keys(Metadata).forEach(function (id) {\n    var metadata = Metadata[id];\n\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n\n    var htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n    var baseDocsPart = \"\".concat(baseUrl).concat(docsUrl ? \"\".concat(docsUrl, \"/\") : '');\n    var i18nDocsRegex = new RegExp(\"^\".concat(baseDocsPart, \"en/\"));\n    var docsRegex = new RegExp(\"^\".concat(baseDocsPart));\n\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, \"\".concat(baseDocsPart, \"en/VERSION/\"));\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, \"\".concat(baseDocsPart, \"VERSION/\"));\n    }\n\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata: extractMetadata,\n  mdToHtml: mdToHtml\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "metadataUtils.js"
      ],
      "names": [
        "splitHeader",
        "content",
        "lines",
        "split",
        "i",
        "length",
        "header",
        "slice",
        "join",
        "extractMetadata",
        "metadata",
        "both",
        "rawContent",
        "keyvalue",
        "key",
        "trim",
        "value",
        "JSON",
        "parse",
        "err",
        "mdToHtml",
        "Metadata",
        "siteConfig",
        "baseUrl",
        "docsUrl",
        "result",
        "Object",
        "keys",
        "forEach",
        "id",
        "language",
        "original_id",
        "htmlLink",
        "permalink",
        "replace",
        "baseDocsPart",
        "i18nDocsRegex",
        "RegExp",
        "docsRegex",
        "test",
        "source",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  const lines = content.split(/\\r?\\n/);\n  if (lines[0] !== '---') {\n    return {};\n  }\n  let i = 1;\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n'),\n  };\n}\n\n// Extract markdown metadata header\nfunction extractMetadata(content) {\n  const metadata = {};\n  const both = splitHeader(content);\n\n  // if no content returned, then that means there was no header, and both.header is the content\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {metadata, rawContent: content};\n    }\n    return {metadata, rawContent: both.header};\n  }\n\n  // New line characters => to handle all operating systems.\n  const lines = both.header.split(/\\r?\\n/);\n\n  // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n  for (let i = 0; i < lines.length - 1; ++i) {\n    const keyvalue = lines[i].split(':');\n    const key = keyvalue[0].trim();\n    let value = keyvalue.slice(1).join(':').trim();\n    try {\n      value = JSON.parse(value);\n    } catch (err) {\n      // Ignore the error as it means it's not a JSON value.\n    }\n    metadata[key] = value;\n  }\n  return {metadata, rawContent: both.content};\n}\n\n// mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\nfunction mdToHtml(Metadata, siteConfig) {\n  const {baseUrl, docsUrl} = siteConfig;\n  const result = {};\n  Object.keys(Metadata).forEach((id) => {\n    const metadata = Metadata[id];\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n    let htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n\n    const baseDocsPart = `${baseUrl}${docsUrl ? `${docsUrl}/` : ''}`;\n\n    const i18nDocsRegex = new RegExp(`^${baseDocsPart}en/`);\n    const docsRegex = new RegExp(`^${baseDocsPart}`);\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, `${baseDocsPart}en/VERSION/`);\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, `${baseDocsPart}VERSION/`);\n    }\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata,\n  mdToHtml,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\blog.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\blog.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\blog.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\blog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "blog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar path = require('path');\n\nvar fs = require('fs-extra');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar _require = require('./utils.js'),\n    replaceAssetsLink = _require.replaceAssetsLink;\n\nvar _require2 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n\n  return path.basename(file).replace('-', '/').replace('-', '/').replace('-', '/').replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  var BlogPageLayout = require('../core/BlogPageLayout.js');\n\n  var blogPages = {};\n  var perPage = 10;\n\n  for (var page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    var metadata = {\n      page: page,\n      perPage: perPage\n    };\n    var blogPageComp = /*#__PURE__*/React.createElement(BlogPageLayout, {\n      metadata: metadata,\n      language: \"en\",\n      config: siteConfig\n    });\n    var str = renderToStaticMarkupWithDoctype(blogPageComp);\n    var pagePath = \"\".concat(page > 0 ? \"page\".concat(page + 1) : '', \"/index.html\");\n    blogPages[pagePath] = str;\n  }\n\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, {\n    encoding: 'utf8'\n  }));\n  var metadata = Object.assign({\n    path: fileToUrl(file),\n    content: replaceAssetsLink(result.rawContent, \"\".concat(siteConfig.baseUrl, \"blog\"))\n  }, result.metadata);\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  var metadata = getMetadata(file, siteConfig);\n\n  if (!metadata) {\n    return null;\n  }\n\n  var BlogPostLayout = require('../core/BlogPostLayout.js');\n\n  var blogPostComp = /*#__PURE__*/React.createElement(BlogPostLayout, {\n    metadata: metadata,\n    language: \"en\",\n    config: siteConfig\n  }, metadata.content);\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl: fileToUrl,\n  getMetadata: getMetadata,\n  getPagesMarkup: getPagesMarkup,\n  getPostMarkup: getPostMarkup,\n  urlToSource: urlToSource\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwicGF0aCIsImZzIiwibWV0YWRhdGFVdGlscyIsInJlcGxhY2VBc3NldHNMaW5rIiwicmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSIsInVybFRvU291cmNlIiwidXJsIiwicmVwbGFjZSIsImZpbGVUb1VybCIsImZpbGUiLCJleGlzdHNTeW5jIiwiYmFzZW5hbWUiLCJnZXRQYWdlc01hcmt1cCIsIm51bU9mQmxvZyIsInNpdGVDb25maWciLCJCbG9nUGFnZUxheW91dCIsImJsb2dQYWdlcyIsInBlclBhZ2UiLCJwYWdlIiwiTWF0aCIsImNlaWwiLCJtZXRhZGF0YSIsImJsb2dQYWdlQ29tcCIsInN0ciIsInBhZ2VQYXRoIiwiZ2V0TWV0YWRhdGEiLCJyZXN1bHQiLCJleHRyYWN0TWV0YWRhdGEiLCJyZWFkRmlsZVN5bmMiLCJlbmNvZGluZyIsIk9iamVjdCIsImFzc2lnbiIsImNvbnRlbnQiLCJyYXdDb250ZW50IiwiYmFzZVVybCIsImlkIiwidGl0bGUiLCJnZXRQb3N0TWFya3VwIiwiQmxvZ1Bvc3RMYXlvdXQiLCJibG9nUG9zdENvbXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsVUFBRCxDQUFsQjs7QUFDQSxJQUFNRyxhQUFhLEdBQUdILE9BQU8sQ0FBQyxpQkFBRCxDQUE3Qjs7ZUFDNEJBLE9BQU8sQ0FBQyxZQUFELEM7SUFBNUJJLGlCLFlBQUFBLGlCOztnQkFDbUNKLE9BQU8sQ0FBQyxlQUFELEM7SUFBMUNLLCtCLGFBQUFBLCtCOztBQUVQLFNBQVNDLFdBQVQsQ0FBcUJDLEdBQXJCLEVBQTBCO0FBQ3hCLE1BQUksQ0FB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Q0FBQ2hCLElBQUQsRUFBT0ssVUFBUCxDQUE1Qjs7QUFDQSxNQUFJLENBQUNPLFFBQUwsRUFBZTtBQUNiLFdBQU8sSUFBUDtBQUNEOztBQUNELE1BQU1pQixjQUFjLEdBQUd2QyxPQUFPLENBQUMsMkJBQUQsQ0FBOUI7O0FBQ0EsTUFBTXdDLFlBQVksZ0JBQ2hCLG9CQUFDLGNBQUQ7QUFBZ0IsSUFBQSxRQUFRLEVBQUVsQixRQUExQjtBQUFvQyxJQUFBLFFBQVEsRUFBQyxJQUE3QztBQUFrRCxJQUFBLE1BQU0sRUFBRVA7QUFBMUQsS0FDR08sUUFBUSxDQUFDVyxPQURaLENBREY7QUFLQSxTQUFPNUIsK0JBQStCLENBQUNtQyxZQUFELENBQXRDO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmakMsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZpQixFQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZmIsRUFBQUEsY0FBYyxFQUFkQSxjQUhlO0FBSWZ5QixFQUFBQSxhQUFhLEVBQWJBLGFBSmU7QUFLZmhDLEVBQUFBLFdBQVcsRUFBWEE7QUFMZSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBtZXRhZGF0YVV0aWxzID0gcmVxdWlyZSgnLi9tZXRhZGF0YVV0aWxzJyk7XG5jb25zdCB7cmVwbGFjZUFzc2V0c0xpbmt9ID0gcmVxdWlyZSgnLi91dGlscy5qcycpO1xuY29uc3Qge3JlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGV9ID0gcmVxdWlyZSgnLi9yZW5kZXJVdGlscycpO1xuXG5mdW5jdGlvbiB1cmxUb1NvdXJjZSh1cmwpIHtcbiAgaWYgKCF1cmwgfHwgdHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gdXJsLnJlcGxhY2UoLyhcXC9pbmRleCk/XFwuaHRtbCQvLCAnLm1kJykucmVwbGFjZSgvXFwvL2csICctJyk7XG59XG5cbmZ1bmN0aW9uIGZpbGVUb1VybChmaWxlKSB7XG4gIGlmICghZmlsZSB8fCAhZnMuZXhpc3RzU3luYyhmaWxlKSB8fCB0eXBlb2YgZmlsZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gcGF0aFxuICAgIC5iYXNlbmFtZShmaWxlKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKC9cXC5tZCQvLCAnLmh0bWwnKTtcbn1cblxuZnVuY3Rpb24gZ2V0UGFnZXNNYXJrdXAobnVtT2ZCbG9nLCBzaXRlQ29uZmlnKSB7XG4gIGNvbnN0IEJsb2dQYWdlTGF5b3V0ID0gcmVxdWlyZSgnLi4vY29yZS9CbG9nUGFnZUxheW91dC5qcycpO1xuICBjb25zdCBibG9nUGFnZXMgPSB7fTtcbiAgY29uc3QgcGVyUGFnZSA9IDEwO1xuICBmb3IgKGxldCBwYWdlID0gMDsgcGFnZSA8IE1hdGguY2VpbChudW1PZkJsb2cgLyBwZXJQYWdlKTsgcGFnZSsrKSB7XG4gICAgY29uc3QgbWV0YWRhdGEgPSB7cGFnZSwgcGVyUGFnZX07XG4gICAgY29uc3QgYmxvZ1BhZ2VDb21wID0gKFxuICAgICAgPEJsb2dQYWdlTGF5b3V0IG1ldGFkYXRhPXttZXRhZGF0YX0gbGFuZ3VhZ2U9XCJlblwiIGNvbmZpZz17c2l0ZUNvbmZpZ30gLz5cbiAgICApO1xuICAgIGNvbnN0IHN0ciA9IHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoYmxvZ1BhZ2VDb21wKTtcbiAgICBjb25zdCBwYWdlUGF0aCA9IGAke3BhZ2UgPiAwID8gYHBhZ2Uke3BhZ2UgKyAxfWAgOiAnJ30vaW5kZXguaHRtbGA7XG4gICAgYmxvZ1BhZ2VzW3BhZ2VQYXRoXSA9IHN0cjtcbiAgfVxuICByZXR1cm4gYmxvZ1BhZ2VzO1xufVxuXG5mdW5jdGlvbiBnZXRNZXRhZGF0YShmaWxlLCBzaXRlQ29uZmlnKSB7XG4gIGlmICghZmlsZSB8fCAhZnMuZXhpc3RzU3luYyhmaWxlKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IG1ldGFkYXRhVXRpbHMuZXh0cmFjdE1ldGFkYXRhKFxuICAgIGZzLnJlYWRGaWxlU3luYyhmaWxlLCB7ZW5jb2Rpbmc6ICd1dGY4J30pLFxuICApO1xuICBjb25zdCBtZXRhZGF0YSA9IE9iamVjdC5hc3NpZ24oXG4gICAge1xuICAgICAgcGF0aDogZmlsZVRvVXJsKGZpbGUpLFxuICAgICAgY29udGVudDogcmVwbGFjZUFzc2V0c0xpbmsoXG4gICAgICAgIHJlc3VsdC5yYXdDb250ZW50LFxuICAgICAgICBgJHtzaXRlQ29uZmlnLmJhc2VVcmx9YmxvZ2AsXG4gICAgICApLFxuICAgIH0sXG4gICAgcmVzdWx0Lm1ldGFkYXRhLFxuICApO1xuICBtZXRhZGF0YS5pZCA9IG1ldGFkYXRhLnRpdGxlO1xuICByZXR1cm4gbWV0YWRhdGE7XG59XG5cbmZ1bmN0aW9uIGdldFBvc3RNYXJrdXAoZmlsZSwgc2l0ZUNvbmZpZykge1xuICBjb25zdCBtZXRhZGF0YSA9IGdldE1ldGFkYXRhKGZpbGUsIHNpdGVDb25maWcpO1xuICBpZiAoIW1ldGFkYXRhKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgQmxvZ1Bvc3RMYXlvdXQgPSByZXF1aXJlKCcuLi9jb3JlL0Jsb2dQb3N0TGF5b3V0LmpzJyk7XG4gIGNvbnN0IGJsb2dQb3N0Q29tcCA9IChcbiAgICA8QmxvZ1Bvc3RMYXlvdXQgbWV0YWRhdGE9e21ldGFkYXRhfSBsYW5ndWFnZT1cImVuXCIgY29uZmlnPXtzaXRlQ29uZmlnfT5cbiAgICAgIHttZXRhZGF0YS5jb250ZW50fVxuICAgIDwvQmxvZ1Bvc3RMYXlvdXQ+XG4gICk7XG4gIHJldHVybiByZW5kZXJUb1N0YXRpY01hcmt1cFdpdGhEb2N0eXBlKGJsb2dQb3N0Q29tcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBmaWxlVG9VcmwsXG4gIGdldE1ldGFkYXRhLFxuICBnZXRQYWdlc01hcmt1cCxcbiAgZ2V0UG9zdE1hcmt1cCxcbiAgdXJsVG9Tb3VyY2UsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "blog.js"
      ],
      "names": [
        "React",
        "require",
        "path",
        "fs",
        "metadataUtils",
        "replaceAssetsLink",
        "renderToStaticMarkupWithDoctype",
        "urlToSource",
        "url",
        "replace",
        "fileToUrl",
        "file",
        "existsSync",
        "basename",
        "getPagesMarkup",
        "numOfBlog",
        "siteConfig",
        "BlogPageLayout",
        "blogPages",
        "perPage",
        "page",
        "Math",
        "ceil",
        "metadata",
        "blogPageComp",
        "str",
        "pagePath",
        "getMetadata",
        "result",
        "extractMetadata",
        "readFileSync",
        "encoding",
        "Object",
        "assign",
        "content",
        "rawContent",
        "baseUrl",
        "id",
        "title",
        "getPostMarkup",
        "BlogPostLayout",
        "blogPostComp",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst metadataUtils = require('./metadataUtils');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n  return path\n    .basename(file)\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  const BlogPageLayout = require('../core/BlogPageLayout.js');\n  const blogPages = {};\n  const perPage = 10;\n  for (let page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    const metadata = {page, perPage};\n    const blogPageComp = (\n      <BlogPageLayout metadata={metadata} language=\"en\" config={siteConfig} />\n    );\n    const str = renderToStaticMarkupWithDoctype(blogPageComp);\n    const pagePath = `${page > 0 ? `page${page + 1}` : ''}/index.html`;\n    blogPages[pagePath] = str;\n  }\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n  const result = metadataUtils.extractMetadata(\n    fs.readFileSync(file, {encoding: 'utf8'}),\n  );\n  const metadata = Object.assign(\n    {\n      path: fileToUrl(file),\n      content: replaceAssetsLink(\n        result.rawContent,\n        `${siteConfig.baseUrl}blog`,\n      ),\n    },\n    result.metadata,\n  );\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  const metadata = getMetadata(file, siteConfig);\n  if (!metadata) {\n    return null;\n  }\n  const BlogPostLayout = require('../core/BlogPostLayout.js');\n  const blogPostComp = (\n    <BlogPostLayout metadata={metadata} language=\"en\" config={siteConfig}>\n      {metadata.content}\n    </BlogPostLayout>\n  );\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl,\n  getMetadata,\n  getPagesMarkup,\n  getPostMarkup,\n  urlToSource,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\utils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\utils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar cssnano = require('cssnano');\n\nvar autoprefixer = require('autoprefixer');\n\nvar postcss = require('postcss');\n\nvar path = require('path');\n\nvar escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  var subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  var separator = escapeStringRegexp(path.sep);\n  var baseDir = escapeStringRegexp(path.basename(refDir));\n  var regexSubFolder = new RegExp(\"\".concat(baseDir).concat(separator, \"(.*?)\").concat(separator, \".*\"));\n  var match = regexSubFolder.exec(file); // Avoid misinterpreting subdirectory as language\n\n  var env = require('./env.js');\n\n  if (match && env.translation.enabled) {\n    var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n      return language.tag;\n    });\n\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n\n  for (var i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano.process(cssContent, {\n    preset: 'default',\n    zindex: false,\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer]).process(cssContent, {\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  var fencedBlock = false;\n  var lines = oldContent.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    return fencedBlock ? line : line.replace(/\\]\\(assets\\//g, \"](\".concat(location, \"/assets/\"));\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir: getSubDir,\n  getLanguage: getLanguage,\n  isSeparateCss: isSeparateCss,\n  minifyCss: minifyCss,\n  autoPrefixCss: autoPrefixCss,\n  replaceAssetsLink: replaceAssetsLink\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNzc25hbm8iLCJyZXF1aXJlIiwiYXV0b3ByZWZpeGVyIiwicG9zdGNzcyIsInBhdGgiLCJlc2NhcGVTdHJpbmdSZWdleHAiLCJnZXRTdWJEaXIiLCJmaWxlIiwicmVmRGlyIiwic3ViRGlyIiwiZGlybmFtZSIsInJlbGF0aXZlIiwicmVwbGFjZSIsImluY2x1ZGVzIiwiZ2V0TGFuZ3VhZ2UiLCJzZXBhcmF0b3IiLCJzZXAiLCJiYXNlRGlyIiwiYmFzZW5hbWUiLCJyZWdleFN1YkZvbGRlciIsIlJlZ0V4cCIsIm1hdGNoIiwiZXhlYyIsImVudiIsInRyYW5zbGF0aW9uIiwiZW5hYmxlZCIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJsYW5ndWFnZSIsInRhZyIsImluZGV4T2YiLCJpc1NlcGFyYXRlQ3NzIiwic2VwYXJhdGVEaXJzIiwiaSIsImxlbmd0aCIsIm1pbmlmeUNzcyIsImNzc0NvbnRlbnQiLCJwcm9jZXNzIiwicHJlc2V0IiwiemluZGV4IiwiZnJvbSIsInVuZGVmaW5lZCIsInRoZW4iLCJyZXN1bHQiLCJjc3MiLCJhdXRvUHJlZml4Q3NzIiwicmVwbGFjZUFzc2V0c0xpbmsiLCJvbGRDb250ZW50IiwibG9jYXRpb24iLCJmZW5jZWRCbG9jayIsImxpbmVzIiwic3BsaXQiLCJsaW5lIiwidHJpbSIsInN0YXJ0c1dpdGgiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBTUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTVCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSSxrQkFBa0IsR0FBR0osT0FBTyxDQUFDLHNCQUFELENBQWxD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QUF2QyxFQUFpRDtBQUMvQyxNQUFJQyxXQUFXLEdBQUcsS0FBbEI7QUFDQSxNQUFNQyxLQUFLLEdBQUdILFVBQVUsQ0FBQ0ksS0FBWCxDQUFpQixJQUFqQixFQUF1QnhCLEdBQXZCLENBQTJCLFVBQUN5QixJQUFELEVBQVU7QUFDakQsUUFBSUEsSUFBSSxDQUFDQyxJQUFMLEdBQVlDLFVBQVosQ0FBdUIsS0FBdkIsQ0FBSixFQUFtQztBQUNqQ0wsTUFBQUEsV0FBVyxHQUFHLENBQUNBLFdBQWY7QUFDRDs7QUFDRCxXQUFPQSxXQUFXLEdBQ2RHLElBRGMsR0FFZEEsSUFBSSxDQUFDeEMsT0FBTCxDQUFhLGVBQWIsY0FBbUNvQyxRQUFuQyxjQUZKO0FBR0QsR0FQYSxDQUFkO0FBUUEsU0FBT0UsS0FBSyxDQUFDSyxJQUFOLENBQVcsSUFBWCxDQUFQO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmbkQsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZRLEVBQUFBLFdBQVcsRUFBWEEsV0FGZTtBQUdmaUIsRUFBQUEsYUFBYSxFQUFiQSxhQUhlO0FBSWZJLEVBQUFBLFNBQVMsRUFBVEEsU0FKZTtBQUtmVSxFQUFBQSxhQUFhLEVBQWJBLGFBTGU7QUFNZkMsRUFBQUEsaUJBQWlCLEVBQWpCQTtBQU5lLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxzZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmNvbnN0IGNzc25hbm8gPSByZXF1aXJlKCdjc3NuYW5vJyk7XG5jb25zdCBhdXRvcHJlZml4ZXIgPSByZXF1aXJlKCdhdXRvcHJlZml4ZXInKTtcbmNvbnN0IHBvc3Rjc3MgPSByZXF1aXJlKCdwb3N0Y3NzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgZXNjYXBlU3RyaW5nUmVnZXhwID0gcmVxdWlyZSgnZXNjYXBlLXN0cmluZy1yZWdleHAnKTtcblxuZnVuY3Rpb24gZ2V0U3ViRGlyKGZpbGUsIHJlZkRpcikge1xuICBjb25zdCBzdWJEaXIgPSBwYXRoLmRpcm5hbWUocGF0aC5yZWxhdGl2ZShyZWZEaXIsIGZpbGUpKS5yZXBsYWNlKC9cXFxcL2csICcvJyk7XG4gIHJldHVybiBzdWJEaXIgIT09ICcuJyAmJiAhc3ViRGlyLmluY2x1ZGVzKCcuLicpID8gc3ViRGlyIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gZ2V0TGFuZ3VhZ2UoZmlsZSwgcmVmRGlyKSB7XG4gIGNvbnN0IHNlcGFyYXRvciA9IGVzY2FwZVN0cmluZ1JlZ2V4cChwYXRoLnNlcCk7XG4gIGNvbnN0IGJhc2VEaXIgPSBlc2NhcGVTdHJpbmdSZWdleHAocGF0aC5iYXNlbmFtZShyZWZEaXIpKTtcbiAgY29uc3QgcmVnZXhTdWJGb2xkZXIgPSBuZXcgUmVnRXhwKFxuICAgIGAke2Jhc2VEaXJ9JHtzZXBhcmF0b3J9KC4qPykke3NlcGFyYXRvcn0uKmAsXG4gICk7XG4gIGNvbnN0IG1hdGNoID0gcmVnZXhTdWJGb2xkZXIuZXhlYyhmaWxlKTtcblxuICAvLyBBdm9pZCBtaXNpbnRlcnByZXRpbmcgc3ViZGlyZWN0b3J5IGFzIGxhbmd1YWdlXG4gIGNvbnN0IGVudiA9IHJlcXVpcmUoJy4vZW52LmpzJyk7XG4gIGlmIChtYXRjaCAmJiBlbnYudHJhbnNsYXRpb24uZW5hYmxlZCkge1xuICAgIGNvbnN0IGVuYWJsZWRMYW5ndWFnZXMgPSBlbnYudHJhbnNsYXRpb25cbiAgICAgIC5lbmFibGVkTGFuZ3VhZ2VzKClcbiAgICAgIC5tYXAoKGxhbmd1YWdlKSA9PiBsYW5ndWFnZS50YWcpO1xuICAgIGlmIChlbmFibGVkTGFuZ3VhZ2VzLmluZGV4T2YobWF0Y2hbMV0pICE9PSAtMSkge1xuICAgICAgcmV0dXJuIG1hdGNoWzFdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNTZXBhcmF0ZUNzcyhmaWxlLCBzZXBhcmF0ZURpcnMpIHtcbiAgaWYgKCFzZXBhcmF0ZURpcnMpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZXBhcmF0ZURpcnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZmlsZS5pbmNsdWRlcyhzZXBhcmF0ZURpcnNbaV0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBtaW5pZnlDc3MoY3NzQ29udGVudCkge1xuICByZXR1cm4gY3NzbmFub1xuICAgIC5wcm9jZXNzKGNzc0NvbnRlbnQsIHtcbiAgICAgIHByZXNldDogJ2RlZmF1bHQnLFxuICAgICAgemluZGV4OiBmYWxzZSxcbiAgICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICB9KVxuICAgIC50aGVuKChyZXN1bHQpID0+IHJlc3VsdC5jc3MpO1xufVxuXG5mdW5jdGlvbiBhdXRvUHJlZml4Q3NzKGNzc0NvbnRlbnQpIHtcbiAgcmV0dXJuIHBvc3Rjc3MoW2F1dG9wcmVmaXhlcl0pXG4gICAgLnByb2Nlc3MoY3NzQ29udGVudCwge1xuICAgICAgZnJvbTogdW5kZWZpbmVkLFxuICAgIH0pXG4gICAgLnRoZW4oKHJlc3VsdCkgPT4gcmVzdWx0LmNzcyk7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VBc3NldHNMaW5rKG9sZENvbnRlbnQsIGxvY2F0aW9uKSB7XG4gIGxldCBmZW5jZWRCbG9jayA9IGZhbHNlO1xuICBjb25zdCBsaW5lcyA9IG9sZENvbnRlbnQuc3BsaXQoJ1xcbicpLm1hcCgobGluZSkgPT4ge1xuICAgIGlmIChsaW5lLnRyaW0oKS5zdGFydHNXaXRoKCdgYGAnKSkge1xuICAgICAgZmVuY2VkQmxvY2sgPSAhZmVuY2VkQmxvY2s7XG4gICAgfVxuICAgIHJldHVybiBmZW5jZWRCbG9ja1xuICAgICAgPyBsaW5lXG4gICAgICA6IGxpbmUucmVwbGFjZSgvXFxdXFwoYXNzZXRzXFwvL2csIGBdKCR7bG9jYXRpb259L2Fzc2V0cy9gKTtcbiAgfSk7XG4gIHJldHVybiBsaW5lcy5qb2luKCdcXG4nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldFN1YkRpcixcbiAgZ2V0TGFuZ3VhZ2UsXG4gIGlzU2VwYXJhdGVDc3MsXG4gIG1pbmlmeUNzcyxcbiAgYXV0b1ByZWZpeENzcyxcbiAgcmVwbGFjZUFzc2V0c0xpbmssXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "cssnano",
        "require",
        "autoprefixer",
        "postcss",
        "path",
        "escapeStringRegexp",
        "getSubDir",
        "file",
        "refDir",
        "subDir",
        "dirname",
        "relative",
        "replace",
        "includes",
        "getLanguage",
        "separator",
        "sep",
        "baseDir",
        "basename",
        "regexSubFolder",
        "RegExp",
        "match",
        "exec",
        "env",
        "translation",
        "enabled",
        "enabledLanguages",
        "map",
        "language",
        "tag",
        "indexOf",
        "isSeparateCss",
        "separateDirs",
        "i",
        "length",
        "minifyCss",
        "cssContent",
        "process",
        "preset",
        "zindex",
        "from",
        "undefined",
        "then",
        "result",
        "css",
        "autoPrefixCss",
        "replaceAssetsLink",
        "oldContent",
        "location",
        "fencedBlock",
        "lines",
        "split",
        "line",
        "trim",
        "startsWith",
        "join",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst cssnano = require('cssnano');\nconst autoprefixer = require('autoprefixer');\nconst postcss = require('postcss');\nconst path = require('path');\nconst escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  const subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  const separator = escapeStringRegexp(path.sep);\n  const baseDir = escapeStringRegexp(path.basename(refDir));\n  const regexSubFolder = new RegExp(\n    `${baseDir}${separator}(.*?)${separator}.*`,\n  );\n  const match = regexSubFolder.exec(file);\n\n  // Avoid misinterpreting subdirectory as language\n  const env = require('./env.js');\n  if (match && env.translation.enabled) {\n    const enabledLanguages = env.translation\n      .enabledLanguages()\n      .map((language) => language.tag);\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n  for (let i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano\n    .process(cssContent, {\n      preset: 'default',\n      zindex: false,\n      from: undefined,\n    })\n    .then((result) => result.css);\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer])\n    .process(cssContent, {\n      from: undefined,\n    })\n    .then((result) => result.css);\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  let fencedBlock = false;\n  const lines = oldContent.split('\\n').map((line) => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    return fencedBlock\n      ? line\n      : line.replace(/\\]\\(assets\\//g, `](${location}/assets/`);\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir,\n  getLanguage,\n  isSeparateCss,\n  minifyCss,\n  autoPrefixCss,\n  replaceAssetsLink,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\renderUtils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\renderUtils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\renderUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\renderUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "renderUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\n\n\nfunction renderToStaticMarkupWithDoctype() {\n  return \"<!DOCTYPE html>\".concat(renderToStaticMarkup.apply(void 0, arguments));\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype: renderToStaticMarkupWithDoctype\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbmRlclV0aWxzLmpzIl0sIm5hbWVzIjpbInJlbmRlclRvU3RhdGljTWFya3VwIiwicmVxdWlyZSIsInJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxvQkFBb0IsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQVAsQ0FBNEJELG9CQUF6RDtBQUVBOzs7Ozs7O0FBS0EsU0FBU0UsK0JBQVQsR0FBa0Q7QUFDaEQsa0NBQXlCRixvQkFBb0IsTUFBcEIsbUJBQXpCO0FBQ0Q7O0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmRixFQUFBQSwrQkFBK0IsRUFBL0JBO0FBRGUsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCByZW5kZXJUb1N0YXRpY01hcmt1cCA9IHJlcXVpcmUoJ3JlYWN0LWRvbS9zZXJ2ZXInKS5yZW5kZXJUb1N0YXRpY01hcmt1cDtcblxuLyoqXG4gKiBDdXN0b20gZnVuY3Rpb24gdGhhdCB3cmFwcyByZW5kZXJUb1N0YXRpY01hcmt1cCBzbyB0aGF0IHdlIGNhbiBpbmplY3RcbiAqIGRvY3R5cGUgYmVmb3JlIFJlYWN0IHJlbmRlcnMgdGhlIGNvbnRlbnRzLiBBbGwgaW5zdGFuY2Ugb2YgZnVsbC1wYWdlXG4gKiByZW5kZXJpbmcgd2l0aGluIERvY3VzYXVydXMgc2hvdWxkIHVzZSB0aGlzIGZ1bmN0aW9uIGluc3RlYWQuXG4gKi9cbmZ1bmN0aW9uIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoLi4uYXJncykge1xuICByZXR1cm4gYDwhRE9DVFlQRSBodG1sPiR7cmVuZGVyVG9TdGF0aWNNYXJrdXAoLi4uYXJncyl9YDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "renderUtils.js"
      ],
      "names": [
        "renderToStaticMarkup",
        "require",
        "renderToStaticMarkupWithDoctype",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BD,oBAAzD;AAEA;;;;;;;AAKA,SAASE,+BAAT,GAAkD;AAChD,kCAAyBF,oBAAoB,MAApB,mBAAzB;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA,+BAA+B,EAA/BA;AADe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\nfunction renderToStaticMarkupWithDoctype(...args) {\n  return `<!DOCTYPE html>${renderToStaticMarkup(...args)}`;\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\config.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\config.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath) {\n  var deleteCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n\n  var config = {};\n\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n  /* Fill default value */\n\n\n  var defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs'\n  };\n  Object.keys(defaultConfig).forEach(function (field) {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n  return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9hZENvbmZpZyIsImNvbmZpZ1BhdGgiLCJkZWxldGVDYWNoZSIsImNhY2hlIiwiY29uZmlnIiwiZXhpc3RzU3luYyIsImRlZmF1bHRDb25maWciLCJjdXN0b21Eb2NzUGF0aCIsImRvY3NVcmwiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImZpZWxkIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsVUFBVCxDQUFvQkMsVUFBcEIsRUFBb0Q7QUFBQSxNQUFwQkMsV0FBb0IsdUVBQU4sSUFBTTs7QUFDbkUsTUFBSUEsV0FBSixFQUFpQjtBQUNmLFdBQU9MLE9BQU8sQ0FBQ00sS0FBUixDQUFjRixVQUFkLENBQVA7QUFDRDs7QUFDRCxNQUFJRyxNQUFNLEdBQUcsRUFBYjs7QUFDQSxNQUFJUixFQUFFLENBQUNTLFVBQUgsQ0FBY0osVUFBZCxDQUFKLEVBQStCO0FBQzdCRyxJQUFBQSxNQUFNLEdBQUdQLE9BQU8sQ0FBQ0ksVUFBRCxDQUFoQixDQUQ2QixDQUNDO0FBQy9CO0FBRUQ7OztBQUNBLE1BQU1LLGFBQWEsR0FBRztBQUNwQkMsSUFBQUEsY0FBYyxFQUFFLE1BREk7QUFFcEJDLElBQUFBLE9BQU8sRUFBRTtBQUZXLEdBQXRCO0FBSUFDLEVBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixhQUFaLEVBQTJCSyxPQUEzQixDQUFtQyxVQUFDQyxLQUFELEVBQVc7QUFDNUMsUUFBSSxFQUFFQSxLQUFLLElBQUlSLE1BQVgsQ0FBSixFQUF3QjtBQUN0QkEsTUFBQUEsTUFBTSxDQUFDUSxLQUFELENBQU4sR0FBZ0JOLGFBQWEsQ0FBQ00sS0FBRCxDQUE3QjtBQUNEO0FBQ0YsR0FKRDtBQU1BLFNBQU9SLE1BQVA7QUFDRCxDQXJCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsb2FkQ29uZmlnKGNvbmZpZ1BhdGgsIGRlbGV0ZUNhY2hlID0gdHJ1ZSkge1xuICBpZiAoZGVsZXRlQ2FjaGUpIHtcbiAgICBkZWxldGUgcmVxdWlyZS5jYWNoZVtjb25maWdQYXRoXTtcbiAgfVxuICBsZXQgY29uZmlnID0ge307XG4gIGlmIChmcy5leGlzdHNTeW5jKGNvbmZpZ1BhdGgpKSB7XG4gICAgY29uZmlnID0gcmVxdWlyZShjb25maWdQYXRoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICB9XG5cbiAgLyogRmlsbCBkZWZhdWx0IHZhbHVlICovXG4gIGNvbnN0IGRlZmF1bHRDb25maWcgPSB7XG4gICAgY3VzdG9tRG9jc1BhdGg6ICdkb2NzJyxcbiAgICBkb2NzVXJsOiAnZG9jcycsXG4gIH07XG4gIE9iamVjdC5rZXlzKGRlZmF1bHRDb25maWcpLmZvckVhY2goKGZpZWxkKSA9PiB7XG4gICAgaWYgKCEoZmllbGQgaW4gY29uZmlnKSkge1xuICAgICAgY29uZmlnW2ZpZWxkXSA9IGRlZmF1bHRDb25maWdbZmllbGRdO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "loadConfig",
        "configPath",
        "deleteCache",
        "cache",
        "config",
        "existsSync",
        "defaultConfig",
        "customDocsPath",
        "docsUrl",
        "Object",
        "keys",
        "forEach",
        "field"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,UAApB,EAAoD;AAAA,MAApBC,WAAoB,uEAAN,IAAM;;AACnE,MAAIA,WAAJ,EAAiB;AACf,WAAOL,OAAO,CAACM,KAAR,CAAcF,UAAd,CAAP;AACD;;AACD,MAAIG,MAAM,GAAG,EAAb;;AACA,MAAIR,EAAE,CAACS,UAAH,CAAcJ,UAAd,CAAJ,EAA+B;AAC7BG,IAAAA,MAAM,GAAGP,OAAO,CAACI,UAAD,CAAhB,CAD6B,CACC;AAC/B;AAED;;;AACA,MAAMK,aAAa,GAAG;AACpBC,IAAAA,cAAc,EAAE,MADI;AAEpBC,IAAAA,OAAO,EAAE;AAFW,GAAtB;AAIAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC,UAACC,KAAD,EAAW;AAC5C,QAAI,EAAEA,KAAK,IAAIR,MAAX,CAAJ,EAAwB;AACtBA,MAAAA,MAAM,CAACQ,KAAD,CAAN,GAAgBN,aAAa,CAACM,KAAD,CAA7B;AACD;AACF,GAJD;AAMA,SAAOR,MAAP;AACD,CArBD",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath, deleteCache = true) {\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n  let config = {};\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n\n  /* Fill default value */\n  const defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs',\n  };\n  Object.keys(defaultConfig).forEach((field) => {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n\n  return config;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\versionFallback.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\versionFallback.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\versionFallback.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\versionFallback.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "versionFallback.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar glob = require('glob');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar utils = require('./utils.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\nvar ENABLE_TRANSLATION = fs.existsSync(\"\".concat(CWD, \"/languages.js\"));\nvar versions;\n\nif (fs.existsSync(\"\".concat(CWD, \"/versions.json\"))) {\n  versions = require(\"\".concat(CWD, \"/versions.json\"));\n} else {\n  versions = [];\n}\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar versionFolder = \"\".concat(CWD, \"/versioned_docs/\"); // available stores doc ids of documents that are available for\n// each version\n\nvar available = {}; // versionFiles is used to keep track of what file to use with a\n// given version/id of a document\n\nvar versionFiles = {};\nvar files = glob.sync(\"\".concat(versionFolder, \"**\"));\nfiles.forEach(function (file) {\n  var ext = path.extname(file);\n\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n\n  var res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  }\n\n  if (!metadata.id) {\n    console.error(\"No 'id' field found in \".concat(file, \".\"));\n    throw new Error(\"No 'id' field found in \".concat(file, \".\"));\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  } // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n\n\n  var version = metadata.id.substring(metadata.id.indexOf('version-') + 8, // version- is 8 characters\n  metadata.id.lastIndexOf(\"-\".concat(metadata.original_id))); // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n\n  var subDir = utils.getSubDir(file, path.join(versionFolder, \"version-\".concat(version)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n\n  versionFiles[version][metadata.original_id] = file;\n}); // returns the version to use for a document based on its id and\n// what the requested version is\n\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  } // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n\n\n  var requestedFound = false;\n  var availableVersion = null;\n  var deletedDocs = null;\n\n  if (siteConfig.deletedDocs) {\n    // Config file may have either Array or Set for each version. Convert\n    // all to Set to make the check faster in the versions loop below.\n    deletedDocs = {};\n    Object.keys(siteConfig.deletedDocs).forEach(function (deletedDocVersion) {\n      deletedDocs[deletedDocVersion] = new Set(siteConfig.deletedDocs[deletedDocVersion]);\n    });\n  }\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound) {\n      // If this ID is deleted as of any version equal to or prior to\n      // the requested, return null.\n      if (deletedDocs && deletedDocs[versions[i]] && deletedDocs[versions[i]].has(id)) {\n        return null;\n      }\n\n      if (!availableVersion && available[id].has(versions[i])) {\n        availableVersion = versions[i]; // Note the fallback version but keep looping in case this ID\n        // was deleted as of a previous version.\n        //\n        // If `deletedDocs` config isn't used, we can return immediately\n        // and avoid unnecessary looping.\n\n        if (!deletedDocs) {\n          break;\n        }\n      }\n    }\n  }\n\n  return availableVersion;\n} // returns whether a given file has content that differ from the\n// document with the given id\n\n\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version;\n\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  if (!version) {\n    return true;\n  }\n\n  var latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return metadataUtils.extractMetadata(fs.readFileSync(latestFile, 'utf8')).rawContent.trim() !== metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).rawContent.trim();\n} // return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\n\n\nfunction processVersionMetadata(file, version, useVersion, language) {\n  var metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).metadata; // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n\n  var subDir = utils.getSubDir(file, path.join(CWD, 'versioned_docs', \"version-\".concat(useVersion)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n    metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(useVersion, \"-\").concat(subDir, \"/\"));\n  }\n\n  metadata.source = subDir ? \"version-\".concat(useVersion, \"/\").concat(subDir, \"/\").concat(path.basename(file)) : \"version-\".concat(useVersion, \"/\").concat(path.basename(file));\n  var latestVersion = versions[0];\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n  var versionPart = \"\".concat(version !== latestVersion ? \"\".concat(version, \"/\") : '');\n\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = \"\".concat(docsPart).concat(versionPart).concat(metadata.original_id, \".html\");\n  } else {\n    metadata.permalink = \"\".concat(docsPart).concat(language, \"/\").concat(versionPart).concat(metadata.original_id, \".html\");\n  }\n\n  metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(version, \"-\"));\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n  return metadata;\n} // return all metadata of versioned documents\n\n\nfunction docData() {\n  var allIds = new Set();\n  Object.keys(versionFiles).forEach(function (version) {\n    Object.keys(versionFiles[version]).forEach(function (id) {\n      allIds.add(id);\n    });\n  });\n  var metadatas = [];\n  languages.filter(function (language) {\n    return language.enabled;\n  }).forEach(function (language) {\n    versions.forEach(function (version) {\n      allIds.forEach(function (id) {\n        var useVersion;\n\n        try {\n          useVersion = docVersion(id, version);\n        } catch (e) {\n          console.log(e);\n          process.exit(1);\n        }\n\n        if (!useVersion) {\n          return;\n        }\n\n        var file = versionFiles[useVersion][id];\n        metadatas.push(processVersionMetadata(file, version, useVersion, language.tag));\n      });\n    });\n  });\n  return metadatas;\n} // return the version of the sidebar to use given a requested version\n\n\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && fs.existsSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(versions[i], \"-sidebars.json\"))) {\n      return versions[i];\n    }\n  }\n\n  throw new Error(\"No sidebar file available to use for version \".concat(reqVersion, \". Verify that 'version-\").concat(reqVersion, \"-sidebars.json' exists.\"));\n} // return whether or not the current sidebars.json file differs from the\n// latest versioned one\n\n\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version = sidebarVersion(latest);\n  var latestSidebar = \"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\");\n\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n\n  var currentSidebar = \"\".concat(CWD, \"/sidebars.json\"); // if no current sidebar file, return false so no sidebar file gets copied\n\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  } // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n\n\n  return JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), '') !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')));\n} // return all versioned sidebar data\n\n\nfunction sidebarData() {\n  var allSidebars = {};\n\n  for (var i = 0; i < versions.length; i++) {\n    var version = sidebarVersion(versions[i]);\n    var sidebar = JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\"), 'utf8').replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), \"version-\".concat(versions[i], \"-\")));\n    Object.assign(allSidebars, sidebar);\n  }\n\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion: docVersion,\n  diffLatestDoc: diffLatestDoc,\n  processVersionMetadata: processVersionMetadata,\n  docData: docData,\n  sidebarVersion: sidebarVersion,\n  diffLatestSidebar: diffLatestSidebar,\n  sidebarData: sidebarData\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "versionFallback.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "glob",
        "require",
        "fs",
        "path",
        "metadataUtils",
        "env",
        "utils",
        "loadConfig",
        "siteConfig",
        "ENABLE_TRANSLATION",
        "existsSync",
        "versions",
        "languages",
        "enabled",
        "name",
        "tag",
        "versionFolder",
        "available",
        "versionFiles",
        "files",
        "sync",
        "forEach",
        "file",
        "ext",
        "extname",
        "res",
        "extractMetadata",
        "readFileSync",
        "metadata",
        "original_id",
        "console",
        "error",
        "Error",
        "id",
        "indexOf",
        "version",
        "substring",
        "lastIndexOf",
        "subDir",
        "getSubDir",
        "join",
        "Set",
        "add",
        "docVersion",
        "reqVersion",
        "requestedFound",
        "availableVersion",
        "deletedDocs",
        "Object",
        "keys",
        "deletedDocVersion",
        "i",
        "length",
        "has",
        "diffLatestDoc",
        "latest",
        "e",
        "exit",
        "latestFile",
        "rawContent",
        "trim",
        "processVersionMetadata",
        "useVersion",
        "language",
        "replace",
        "source",
        "basename",
        "latestVersion",
        "docsPart",
        "docsUrl",
        "versionPart",
        "useEnglishUrl",
        "permalink",
        "localized_id",
        "translation",
        "docData",
        "allIds",
        "metadatas",
        "filter",
        "log",
        "push",
        "sidebarVersion",
        "diffLatestSidebar",
        "latestSidebar",
        "currentSidebar",
        "JSON",
        "stringify",
        "parse",
        "RegExp",
        "sidebarData",
        "allSidebars",
        "sidebar",
        "assign",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst utils = require('./utils.js');\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst ENABLE_TRANSLATION = fs.existsSync(`${CWD}/languages.js`);\n\nlet versions;\nif (fs.existsSync(`${CWD}/versions.json`)) {\n  versions = require(`${CWD}/versions.json`);\n} else {\n  versions = [];\n}\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst versionFolder = `${CWD}/versioned_docs/`;\n\n// available stores doc ids of documents that are available for\n// each version\nconst available = {};\n// versionFiles is used to keep track of what file to use with a\n// given version/id of a document\nconst versionFiles = {};\nconst files = glob.sync(`${versionFolder}**`);\nfiles.forEach((file) => {\n  const ext = path.extname(file);\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n  const res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n  if (!metadata.id) {\n    console.error(`No 'id' field found in ${file}.`);\n    throw new Error(`No 'id' field found in ${file}.`);\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n\n  // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n  const version = metadata.id.substring(\n    metadata.id.indexOf('version-') + 8, // version- is 8 characters\n    metadata.id.lastIndexOf(`-${metadata.original_id}`),\n  );\n\n  // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n  const subDir = utils.getSubDir(\n    file,\n    path.join(versionFolder, `version-${version}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n  versionFiles[version][metadata.original_id] = file;\n});\n\n// returns the version to use for a document based on its id and\n// what the requested version is\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  }\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  let availableVersion = null;\n  let deletedDocs = null;\n  if (siteConfig.deletedDocs) {\n    // Config file may have either Array or Set for each version. Convert\n    // all to Set to make the check faster in the versions loop below.\n    deletedDocs = {};\n    Object.keys(siteConfig.deletedDocs).forEach((deletedDocVersion) => {\n      deletedDocs[deletedDocVersion] = new Set(\n        siteConfig.deletedDocs[deletedDocVersion],\n      );\n    });\n  }\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (requestedFound) {\n      // If this ID is deleted as of any version equal to or prior to\n      // the requested, return null.\n      if (\n        deletedDocs &&\n        deletedDocs[versions[i]] &&\n        deletedDocs[versions[i]].has(id)\n      ) {\n        return null;\n      }\n      if (!availableVersion && available[id].has(versions[i])) {\n        availableVersion = versions[i];\n        // Note the fallback version but keep looping in case this ID\n        // was deleted as of a previous version.\n        //\n        // If `deletedDocs` config isn't used, we can return immediately\n        // and avoid unnecessary looping.\n        if (!deletedDocs) {\n          break;\n        }\n      }\n    }\n  }\n  return availableVersion;\n}\n\n// returns whether a given file has content that differ from the\n// document with the given id\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  const latest = versions[0];\n\n  let version;\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n  if (!version) {\n    return true;\n  }\n  const latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return (\n    metadataUtils\n      .extractMetadata(fs.readFileSync(latestFile, 'utf8'))\n      .rawContent.trim() !==\n    metadataUtils\n      .extractMetadata(fs.readFileSync(file, 'utf8'))\n      .rawContent.trim()\n  );\n}\n\n// return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\nfunction processVersionMetadata(file, version, useVersion, language) {\n  const metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'))\n    .metadata;\n\n  // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n  const subDir = utils.getSubDir(\n    file,\n    path.join(CWD, 'versioned_docs', `version-${useVersion}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n    metadata.id = metadata.id.replace(\n      `version-${useVersion}-`,\n      `version-${useVersion}-${subDir}/`,\n    );\n  }\n\n  metadata.source = subDir\n    ? `version-${useVersion}/${subDir}/${path.basename(file)}`\n    : `version-${useVersion}/${path.basename(file)}`;\n\n  const latestVersion = versions[0];\n\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  const versionPart = `${version !== latestVersion ? `${version}/` : ''}`;\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = `${docsPart}${versionPart}${metadata.original_id}.html`;\n  } else {\n    metadata.permalink = `${docsPart}${language}/${versionPart}${metadata.original_id}.html`;\n  }\n  metadata.id = metadata.id.replace(\n    `version-${useVersion}-`,\n    `version-${version}-`,\n  );\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n\n  return metadata;\n}\n\n// return all metadata of versioned documents\nfunction docData() {\n  const allIds = new Set();\n  Object.keys(versionFiles).forEach((version) => {\n    Object.keys(versionFiles[version]).forEach((id) => {\n      allIds.add(id);\n    });\n  });\n\n  const metadatas = [];\n\n  languages\n    .filter((language) => language.enabled)\n    .forEach((language) => {\n      versions.forEach((version) => {\n        allIds.forEach((id) => {\n          let useVersion;\n          try {\n            useVersion = docVersion(id, version);\n          } catch (e) {\n            console.log(e);\n            process.exit(1);\n          }\n          if (!useVersion) {\n            return;\n          }\n          const file = versionFiles[useVersion][id];\n\n          metadatas.push(\n            processVersionMetadata(file, version, useVersion, language.tag),\n          );\n        });\n      });\n    });\n\n  return metadatas;\n}\n\n// return the version of the sidebar to use given a requested version\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (\n      requestedFound &&\n      fs.existsSync(\n        `${CWD}/versioned_sidebars/version-${versions[i]}-sidebars.json`,\n      )\n    ) {\n      return versions[i];\n    }\n  }\n  throw new Error(\n    `No sidebar file available to use for version ${reqVersion}. Verify that 'version-${reqVersion}-sidebars.json' exists.`,\n  );\n}\n\n// return whether or not the current sidebars.json file differs from the\n// latest versioned one\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n  const latest = versions[0];\n\n  const version = sidebarVersion(latest);\n  const latestSidebar = `${CWD}/versioned_sidebars/version-${version}-sidebars.json`;\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n  const currentSidebar = `${CWD}/sidebars.json`;\n  // if no current sidebar file, return false so no sidebar file gets copied\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  }\n\n  // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n  return (\n    JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(\n      new RegExp(`version-${version}-`, 'g'),\n      '',\n    ) !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')))\n  );\n}\n\n// return all versioned sidebar data\nfunction sidebarData() {\n  const allSidebars = {};\n\n  for (let i = 0; i < versions.length; i++) {\n    const version = sidebarVersion(versions[i]);\n    const sidebar = JSON.parse(\n      fs\n        .readFileSync(\n          `${CWD}/versioned_sidebars/version-${version}-sidebars.json`,\n          'utf8',\n        )\n        .replace(\n          new RegExp(`version-${version}-`, 'g'),\n          `version-${versions[i]}-`,\n        ),\n    );\n    Object.assign(allSidebars, sidebar);\n  }\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion,\n  diffLatestDoc,\n  processVersionMetadata,\n  docData,\n  sidebarVersion,\n  diffLatestSidebar,\n  sidebarData,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\server.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\website",
      "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\server.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\nfunction execute(port, host) {\n  var extractTranslations = require('../write-translations');\n\n  var metadataUtils = require('./metadataUtils');\n\n  var blog = require('./blog');\n\n  var docs = require('./docs');\n\n  var env = require('./env.js');\n\n  var express = require('express');\n\n  var React = require('react');\n\n  var request = require('request');\n\n  var fs = require('fs-extra');\n\n  var path = require('path');\n\n  var _require = require('./utils'),\n      isSeparateCss = _require.isSeparateCss;\n\n  var mkdirp = require('mkdirp');\n\n  var glob = require('glob');\n\n  var chalk = require('chalk');\n\n  var translate = require('./translate');\n\n  var _require2 = require('./renderUtils'),\n      renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\n  var feed = require('./feed');\n\n  var sitemap = require('./sitemap');\n\n  var routing = require('./routing');\n\n  var loadConfig = require('./config');\n\n  var CWD = process.cwd();\n  var join = path.join;\n  var sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach(function (cacheKey) {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  } // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n\n\n  function removeModuleAndChildrenFromCache(moduleName) {\n    var mod = require.resolve(moduleName);\n\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach(function (child) {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  var readMetadata = require('./readMetadata.js');\n\n  var Metadata;\n  var MetadataBlog;\n  var siteConfig;\n\n  function reloadSiteConfig() {\n    var siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    var oldBaseUrl = siteConfig && siteConfig.baseUrl;\n    siteConfig = loadConfig(siteConfigPath);\n\n    if (oldBaseUrl && oldBaseUrl !== siteConfig.baseUrl) {\n      console.log('Base url has changed. Please restart server ...');\n      process.exit();\n    }\n  }\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n\n    reloadSiteConfig();\n    readMetadata.generateMetadataBlog(siteConfig);\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadTranslations() {\n    removeModuleAndChildrenFromCache('./translation.js');\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, function (error, response, body) {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n  var app = express();\n  app.get(routing.docs(siteConfig), function (req, res, next) {\n    var url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    var metakey = Object.keys(Metadata).find(function (id) {\n      return Metadata[id].permalink === url;\n    });\n    var metadata = Metadata[metakey];\n    var file = docs.getFile(metadata);\n\n    if (!file) {\n      next();\n      return;\n    }\n\n    var _metadataUtils$extrac = metadataUtils.extractMetadata(file),\n        rawContent = _metadataUtils$extrac.rawContent,\n        rawMetadata = _metadataUtils$extrac.metadata; // if any of the followings is changed, reload the metadata\n\n\n    var reloadTriggers = ['sidebar_label', 'hide_title', 'title'];\n\n    if (reloadTriggers.some(function (key) {\n      return metadata[key] !== rawMetadata[key];\n    })) {\n      reloadMetadata();\n      extractTranslations();\n      reloadTranslations();\n      metadata = Metadata[metakey];\n    }\n\n    reloadSiteConfig();\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    var mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig));\n  });\n  app.get(routing.sitemap(siteConfig), function (req, res) {\n    sitemap(function (err, xml) {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n  app.get(routing.feed(siteConfig), function (req, res, next) {\n    res.set('Content-Type', 'application/rss+xml');\n    var file = req.path.toString().split('blog/')[1].toLowerCase();\n\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n\n    next();\n  });\n  app.get(routing.blog(siteConfig), function (req, res, next) {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    var blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    var urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[\"\".concat(urlPath.replace(/\\/$/, ''), \"/index.html\")]);\n    } else {\n      var file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      var blogPost = blog.getPostMarkup(file, siteConfig);\n\n      if (!blogPost) {\n        next();\n        return;\n      }\n\n      res.send(blogPost);\n    }\n  });\n  app.get(routing.page(siteConfig), function (req, res, next) {\n    reloadSiteConfig(); // Look for user-provided HTML file first.\n\n    var htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n\n    if (fs.existsSync(htmlFile) || fs.existsSync(htmlFile = htmlFile.replace(path.basename(htmlFile), join('en', path.basename(htmlFile))))) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n        var Site = require(join('..', 'core', 'Site.js'));\n\n        var str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Site, {\n          language: \"en\",\n          config: siteConfig,\n          metadata: {\n            id: path.basename(htmlFile, '.html')\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: fs.readFileSync(htmlFile, {\n              encoding: 'utf8'\n            })\n          }\n        })));\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {\n          encoding: 'utf8'\n        }));\n      }\n\n      next();\n      return;\n    } // look for user provided react file either in specified path or in path for english files\n\n\n    var file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    var userFile = join(CWD, 'pages', file);\n    var language = env.translation.enabled ? 'en' : '';\n    var regexLang = /(.*)\\/.*\\.html$/;\n    var match = regexLang.exec(req.path);\n    var parts = match[1].split('/');\n    var enabledLangTags = env.translation.enabledLanguages().map(function (lang) {\n      return lang.tag;\n    });\n\n    for (var i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    var englishFile = join(CWD, 'pages', file);\n\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, \"\".concat(sep, \"en\").concat(sep));\n    } // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n\n\n    if (fs.existsSync(userFile) || fs.existsSync(userFile = userFile.replace(path.basename(userFile), \"en\".concat(sep).concat(path.basename(userFile)))) || fs.existsSync(userFile = englishFile)) {\n      // copy into docusaurus so require paths work\n      var userFileParts = userFile.split(join(CWD, \"pages\".concat(sep)));\n      var tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(path.basename(file), \"temp\".concat(path.basename(file)));\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile); // render into a string\n\n      removeModuleAndChildrenFromCache(tempFile);\n\n      var ReactComp = require(tempFile);\n\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n      var _Site = require(join('..', 'core', 'Site.js'));\n\n      translate.setLanguage(language);\n\n      var _str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(_Site, {\n        language: language,\n        config: siteConfig,\n        title: ReactComp.title,\n        description: ReactComp.description,\n        metadata: {\n          id: path.basename(userFile, '.js')\n        }\n      }, /*#__PURE__*/React.createElement(ReactComp, {\n        config: siteConfig,\n        language: language\n      })));\n\n      fs.removeSync(tempFile);\n      res.send(_str);\n    } else {\n      next();\n    }\n  });\n  app.get(\"\".concat(siteConfig.baseUrl, \"css/main.css\"), function (req, res) {\n    var mainCssPath = join(__dirname, '..', 'static', req.path.toString().replace(siteConfig.baseUrl, '/'));\n    var cssContent = fs.readFileSync(mainCssPath, {\n      encoding: 'utf8'\n    });\n    var files = glob.sync(join(CWD, 'static', '**', '*.css'));\n    files.forEach(function (file) {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n\n      cssContent = \"\".concat(cssContent, \"\\n\").concat(fs.readFileSync(file, {\n        encoding: 'utf8'\n      }));\n    });\n\n    if (!siteConfig.colors || !siteConfig.colors.primaryColor || !siteConfig.colors.secondaryColor) {\n      console.error(\"\".concat(chalk.yellow('Missing color configuration.'), \" Make sure siteConfig.colors includes primaryColor and secondaryColor fields.\"));\n    }\n\n    Object.keys(siteConfig.colors).forEach(function (key) {\n      var color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach(function (key) {\n        var fontString = siteConfig.fonts[key].map(function (font) {\n          return \"\\\"\".concat(font, \"\\\"\");\n        }).join(', ');\n        cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), fontString);\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  }); // serve static assets from these locations\n\n  app.use(\"\".concat(siteConfig.baseUrl).concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '', \"assets\"), express[\"static\"](join(CWD, '..', readMetadata.getDocsPath(), 'assets')));\n  app.use(\"\".concat(siteConfig.baseUrl, \"blog/assets\"), express[\"static\"](join(CWD, 'blog', 'assets')));\n  app.use(siteConfig.baseUrl, express[\"static\"](join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express[\"static\"](join(__dirname, '..', 'static'))); // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n\n  app.get(routing.noExtension(), function (req, res, next) {\n    var slash = req.path.toString().endsWith('/') ? '' : '/';\n    var requestUrl = \"http://\".concat(host, \":\").concat(port).concat(req.path);\n    requestFile(\"\".concat(requestUrl + slash, \"index.html\"), res, function () {\n      requestFile(slash === '/' ? \"\".concat(requestUrl, \".html\") : requestUrl.replace(/\\/$/, '.html'), res, next);\n    });\n  }); // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n\n  app.get(routing.dotfiles(), function (req, res, next) {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n\n    requestFile(\"http://\".concat(host, \":\").concat(port).concat(req.path, \".html\"), res, next);\n  });\n  app.listen(port);\n}\n\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "execute",
        "port",
        "host",
        "extractTranslations",
        "require",
        "metadataUtils",
        "blog",
        "docs",
        "env",
        "express",
        "React",
        "request",
        "fs",
        "path",
        "isSeparateCss",
        "mkdirp",
        "glob",
        "chalk",
        "translate",
        "renderToStaticMarkupWithDoctype",
        "feed",
        "sitemap",
        "routing",
        "loadConfig",
        "CWD",
        "process",
        "cwd",
        "join",
        "sep",
        "removeModulePathFromCache",
        "moduleName",
        "Object",
        "keys",
        "module",
        "constructor",
        "_pathCache",
        "forEach",
        "cacheKey",
        "indexOf",
        "removeModuleAndChildrenFromCache",
        "mod",
        "resolve",
        "cache",
        "children",
        "child",
        "id",
        "readMetadata",
        "Metadata",
        "MetadataBlog",
        "siteConfig",
        "reloadSiteConfig",
        "siteConfigPath",
        "oldBaseUrl",
        "baseUrl",
        "console",
        "log",
        "exit",
        "reloadMetadata",
        "generateMetadataDocs",
        "reloadMetadataBlog",
        "existsSync",
        "__dirname",
        "removeSync",
        "generateMetadataBlog",
        "reloadTranslations",
        "requestFile",
        "url",
        "res",
        "notFoundCallback",
        "get",
        "error",
        "response",
        "body",
        "statusCode",
        "status",
        "send",
        "app",
        "req",
        "next",
        "decodeURI",
        "toString",
        "replace",
        "metakey",
        "find",
        "permalink",
        "metadata",
        "file",
        "getFile",
        "extractMetadata",
        "rawContent",
        "rawMetadata",
        "reloadTriggers",
        "some",
        "key",
        "mdToHtml",
        "getMarkup",
        "err",
        "xml",
        "set",
        "split",
        "toLowerCase",
        "blogPages",
        "getPagesMarkup",
        "length",
        "urlPath",
        "endsWith",
        "match",
        "urlToSource",
        "blogPost",
        "getPostMarkup",
        "page",
        "htmlFile",
        "basename",
        "wrapPagesHTML",
        "Site",
        "str",
        "__html",
        "readFileSync",
        "encoding",
        "userFile",
        "language",
        "translation",
        "enabled",
        "regexLang",
        "exec",
        "parts",
        "enabledLangTags",
        "enabledLanguages",
        "map",
        "lang",
        "tag",
        "i",
        "englishFile",
        "userFileParts",
        "tempFile",
        "sync",
        "dirname",
        "copySync",
        "ReactComp",
        "setLanguage",
        "title",
        "description",
        "mainCssPath",
        "cssContent",
        "files",
        "separateCss",
        "colors",
        "primaryColor",
        "secondaryColor",
        "yellow",
        "color",
        "RegExp",
        "fonts",
        "fontString",
        "font",
        "header",
        "use",
        "docsUrl",
        "getDocsPath",
        "noExtension",
        "slash",
        "requestUrl",
        "dotfiles",
        "cleanUrl",
        "listen",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\n\nfunction execute(port, host) {\n  const extractTranslations = require('../write-translations');\n  const metadataUtils = require('./metadataUtils');\n  const blog = require('./blog');\n  const docs = require('./docs');\n  const env = require('./env.js');\n  const express = require('express');\n  const React = require('react');\n  const request = require('request');\n  const fs = require('fs-extra');\n  const path = require('path');\n  const {isSeparateCss} = require('./utils');\n  const mkdirp = require('mkdirp');\n  const glob = require('glob');\n  const chalk = require('chalk');\n  const translate = require('./translate');\n  const {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n  const feed = require('./feed');\n  const sitemap = require('./sitemap');\n  const routing = require('./routing');\n  const loadConfig = require('./config');\n  const CWD = process.cwd();\n  const join = path.join;\n  const sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach((cacheKey) => {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  }\n\n  // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n  function removeModuleAndChildrenFromCache(moduleName) {\n    let mod = require.resolve(moduleName);\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach((child) => {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  const readMetadata = require('./readMetadata.js');\n  let Metadata;\n  let MetadataBlog;\n  let siteConfig;\n\n  function reloadSiteConfig() {\n    const siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    const oldBaseUrl = siteConfig && siteConfig.baseUrl;\n    siteConfig = loadConfig(siteConfigPath);\n\n    if (oldBaseUrl && oldBaseUrl !== siteConfig.baseUrl) {\n      console.log('Base url has changed. Please restart server ...');\n      process.exit();\n    }\n  }\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n    reloadSiteConfig();\n    readMetadata.generateMetadataBlog(siteConfig);\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadTranslations() {\n    removeModuleAndChildrenFromCache('./translation.js');\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, (error, response, body) => {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n\n  const app = express();\n\n  app.get(routing.docs(siteConfig), (req, res, next) => {\n    const url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    const metakey = Object.keys(Metadata).find(\n      (id) => Metadata[id].permalink === url,\n    );\n\n    let metadata = Metadata[metakey];\n\n    const file = docs.getFile(metadata);\n    if (!file) {\n      next();\n      return;\n    }\n    const {rawContent, metadata: rawMetadata} = metadataUtils.extractMetadata(\n      file,\n    );\n\n    // if any of the followings is changed, reload the metadata\n    const reloadTriggers = ['sidebar_label', 'hide_title', 'title'];\n    if (reloadTriggers.some((key) => metadata[key] !== rawMetadata[key])) {\n      reloadMetadata();\n      extractTranslations();\n      reloadTranslations();\n      metadata = Metadata[metakey];\n    }\n\n    reloadSiteConfig();\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    const mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig));\n  });\n\n  app.get(routing.sitemap(siteConfig), (req, res) => {\n    sitemap((err, xml) => {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n\n  app.get(routing.feed(siteConfig), (req, res, next) => {\n    res.set('Content-Type', 'application/rss+xml');\n    const file = req.path.toString().split('blog/')[1].toLowerCase();\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n    next();\n  });\n\n  app.get(routing.blog(siteConfig), (req, res, next) => {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    const blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    const urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[`${urlPath.replace(/\\/$/, '')}/index.html`]);\n    } else {\n      const file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      const blogPost = blog.getPostMarkup(file, siteConfig);\n      if (!blogPost) {\n        next();\n        return;\n      }\n      res.send(blogPost);\n    }\n  });\n\n  app.get(routing.page(siteConfig), (req, res, next) => {\n    reloadSiteConfig();\n    // Look for user-provided HTML file first.\n    let htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n    if (\n      fs.existsSync(htmlFile) ||\n      fs.existsSync(\n        (htmlFile = htmlFile.replace(\n          path.basename(htmlFile),\n          join('en', path.basename(htmlFile)),\n        )),\n      )\n    ) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n        const Site = require(join('..', 'core', 'Site.js'));\n        const str = renderToStaticMarkupWithDoctype(\n          <Site\n            language=\"en\"\n            config={siteConfig}\n            metadata={{id: path.basename(htmlFile, '.html')}}>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: fs.readFileSync(htmlFile, {encoding: 'utf8'}),\n              }}\n            />\n          </Site>,\n        );\n\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {encoding: 'utf8'}));\n      }\n      next();\n      return;\n    }\n\n    // look for user provided react file either in specified path or in path for english files\n    let file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    let userFile = join(CWD, 'pages', file);\n\n    let language = env.translation.enabled ? 'en' : '';\n    const regexLang = /(.*)\\/.*\\.html$/;\n    const match = regexLang.exec(req.path);\n    const parts = match[1].split('/');\n    const enabledLangTags = env.translation\n      .enabledLanguages()\n      .map((lang) => lang.tag);\n\n    for (let i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    let englishFile = join(CWD, 'pages', file);\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, `${sep}en${sep}`);\n    }\n\n    // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n    if (\n      fs.existsSync(userFile) ||\n      fs.existsSync(\n        (userFile = userFile.replace(\n          path.basename(userFile),\n          `en${sep}${path.basename(userFile)}`,\n        )),\n      ) ||\n      fs.existsSync((userFile = englishFile))\n    ) {\n      // copy into docusaurus so require paths work\n      const userFileParts = userFile.split(join(CWD, `pages${sep}`));\n      let tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(\n        path.basename(file),\n        `temp${path.basename(file)}`,\n      );\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile);\n\n      // render into a string\n      removeModuleAndChildrenFromCache(tempFile);\n      const ReactComp = require(tempFile);\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n      const Site = require(join('..', 'core', 'Site.js'));\n      translate.setLanguage(language);\n      const str = renderToStaticMarkupWithDoctype(\n        <Site\n          language={language}\n          config={siteConfig}\n          title={ReactComp.title}\n          description={ReactComp.description}\n          metadata={{id: path.basename(userFile, '.js')}}>\n          <ReactComp config={siteConfig} language={language} />\n        </Site>,\n      );\n\n      fs.removeSync(tempFile);\n\n      res.send(str);\n    } else {\n      next();\n    }\n  });\n\n  app.get(`${siteConfig.baseUrl}css/main.css`, (req, res) => {\n    const mainCssPath = join(\n      __dirname,\n      '..',\n      'static',\n      req.path.toString().replace(siteConfig.baseUrl, '/'),\n    );\n    let cssContent = fs.readFileSync(mainCssPath, {encoding: 'utf8'});\n\n    const files = glob.sync(join(CWD, 'static', '**', '*.css'));\n\n    files.forEach((file) => {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n      cssContent = `${cssContent}\\n${fs.readFileSync(file, {\n        encoding: 'utf8',\n      })}`;\n    });\n\n    if (\n      !siteConfig.colors ||\n      !siteConfig.colors.primaryColor ||\n      !siteConfig.colors.secondaryColor\n    ) {\n      console.error(\n        `${chalk.yellow(\n          'Missing color configuration.',\n        )} Make sure siteConfig.colors includes primaryColor and secondaryColor fields.`,\n      );\n    }\n\n    Object.keys(siteConfig.colors).forEach((key) => {\n      const color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(`\\\\$${key}`, 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach((key) => {\n        const fontString = siteConfig.fonts[key]\n          .map((font) => `\"${font}\"`)\n          .join(', ');\n        cssContent = cssContent.replace(\n          new RegExp(`\\\\$${key}`, 'g'),\n          fontString,\n        );\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  });\n\n  // serve static assets from these locations\n  app.use(\n    `${siteConfig.baseUrl}${\n      siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''\n    }assets`,\n    express.static(join(CWD, '..', readMetadata.getDocsPath(), 'assets')),\n  );\n  app.use(\n    `${siteConfig.baseUrl}blog/assets`,\n    express.static(join(CWD, 'blog', 'assets')),\n  );\n  app.use(siteConfig.baseUrl, express.static(join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express.static(join(__dirname, '..', 'static')));\n\n  // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n  app.get(routing.noExtension(), (req, res, next) => {\n    const slash = req.path.toString().endsWith('/') ? '' : '/';\n    const requestUrl = `http://${host}:${port}${req.path}`;\n    requestFile(`${requestUrl + slash}index.html`, res, () => {\n      requestFile(\n        slash === '/'\n          ? `${requestUrl}.html`\n          : requestUrl.replace(/\\/$/, '.html'),\n        res,\n        next,\n      );\n    });\n  });\n\n  // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n  app.get(routing.dotfiles(), (req, res, next) => {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n    requestFile(`http://${host}:${port}${req.path}.html`, res, next);\n  });\n\n  app.listen(port);\n}\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\env.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\env.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\env.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\env.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "env.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar fs = require('fs-extra');\n\nvar path = require('path');\n\nvar chalk = require('chalk');\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar join = path.join;\nvar languagesFile = join(CWD, 'languages.js');\nvar versionsJSONFile = join(CWD, 'versions.json');\nvar versionsFile = join(CWD, 'pages/en/versions.js');\n\nvar Translation = /*#__PURE__*/function () {\n  function Translation() {\n    var _this = this;\n\n    _classCallCheck(this, Translation);\n\n    _defineProperty(this, \"enabledLanguages\", function () {\n      return _this.languages.filter(function (lang) {\n        return lang.enabled;\n      });\n    });\n\n    this.enabled = false;\n    this.languages = [{\n      enabled: true,\n      name: 'English',\n      tag: 'en'\n    }];\n    this.load();\n  }\n\n  _createClass(Translation, [{\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(languagesFile)) {\n        this.enabled = true;\n        this.languages = require(languagesFile);\n      }\n    }\n  }]);\n\n  return Translation;\n}();\n\nvar Versioning = /*#__PURE__*/function () {\n  function Versioning() {\n    _classCallCheck(this, Versioning);\n\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n    this.load();\n  }\n\n  _createClass(Versioning, [{\n    key: \"printMissingVersionsPageError\",\n    value: function printMissingVersionsPageError() {\n      console.error(\"\".concat(chalk.yellow('No versions.js file found!')) + \"\\nYou should create your versions.js file in pages/en directory.\" + \"\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.\");\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(versionsJSONFile)) {\n        this.enabled = true;\n        this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n        this.latestVersion = this.versions[0];\n        this.defaultVersion = siteConfig.defaultVersionShown ? siteConfig.defaultVersionShown : this.latestVersion; // otherwise show the latest version (other than next/master)\n      }\n\n      if (!fs.existsSync(versionsFile)) {\n        this.missingVersionsPage = true;\n      }\n    }\n  }]);\n\n  return Versioning;\n}();\n\nvar env = {\n  translation: new Translation(),\n  versioning: new Versioning()\n};\nmodule.exports = env;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudi5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwiZnMiLCJyZXF1aXJlIiwicGF0aCIsImNoYWxrIiwic2l0ZUNvbmZpZyIsImpvaW4iLCJsYW5ndWFnZXNGaWxlIiwidmVyc2lvbnNKU09ORmlsZSIsInZlcnNpb25zRmlsZSIsIlRyYW5zbGF0aW9uIiwibGFuZ3VhZ2VzIiwiZmlsdGVyIiwibGFuZyIsImVuYWJsZWQiLCJuYW1lIiwidGFnIiwibG9hZCIsImV4aXN0c1N5bmMiLCJWZXJzaW9uaW5nIiwibGF0ZXN0VmVyc2lvbiIsImRlZmF1bHRWZXJzaW9uIiwidmVyc2lvbnMiLCJtaXNzaW5nVmVyc2lvbnNQYWdlIiwiY29uc29sZSIsImVycm9yIiwieWVsbG93IiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiZGVmYXVsdFZlcnNpb25TaG93biIsImVudiIsInRyYW5zbGF0aW9uIiwidmVyc2lvbmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFNRyxVQUFVLEdBQUdILE9BQU8sV0FBSUosR0FBSixvQkFBMUI7O0FBRUEsSUFBTVEsSUFBSSxHQUFHSCxJQUFJLENBQUNHLElBQWxCO0FBRUEsSUFBTUMsYUFBYSxHQUFHRCxJQUFJLENBQUNSLEdBQUQsRUFBTSxjQUFOLENBQTFCO0FBQ0EsSUFBTVUsZ0JBQWdCLEdBQUdGLElBQUksQ0FBQ1IsR0FBRCxFQUFNLGVBQU4sQ0FBN0I7QUFDQSxJQUFNVyxZQUFZLEdBQUdILElBQUksQ0FBQ1IsR0FBRCxFQUFNLHNCQUFOLENBQXpCOztJQUVNWSxXO0FBQ0oseUJBQWM7QUFBQTs7QUFBQTs7QUFBQSw4Q0FhSztBQUFBLGFBQU0sS0FBSSxDQUFDQyxTQUFMLENBQWVDLE1BQWYsQ0FBc0IsVUFBQ0MsSUFBRDtBQUFBLGVBQVVBLElBQUksQ0FBQ0MsT0FBZjtBQUFBLE9BQXRCLENBQU47QUFBQSxLQWJMOztBQUNaLFNBQUtBLE9BQUwsR0FBZSxLQUFmO0FBQ0EsU0FBS0gsU0FBTCxHQUFpQixDQUNmO0FBQ0VHLE1BQUFBLE9BQU8sRUFBRSxJQURYO0FBRUVDLE1BQUFBLElBQUksRUFBRSxTQUZSO0FBR0VDLE1BQUFBLEdBQUcsRUFBRTtBQUhQLEtBRGUsQ0FBakI7QUFRQSxTQUFLQyxJQUFMO0FBQ0Q7Ozs7MkJBSU07QUFDTCxVQUFJaEIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjWCxhQUFkLENBQUosRUFBa0M7QUFDaEMsYUFBS08sT0FBTCxHQUFlLElBQWY7QUFDQSxhQUFLSCxTQUFMLEdBQWlCVCxPQUFPLENBQUNLLGFBQUQsQ0FBeEI7QUFDRDtBQUNGOzs7Ozs7SUFHR1ksVTtBQUNKLHdCQUFjO0FBQUE7O0FBQ1osU0FBS0wsT0FBTCxHQUFlLEtBQWY7QUFDQSxTQUFLTSxhQUFMLEdBQXFCLElBQXJCO0FBQ0EsU0FBS0MsY0FBTCxHQUFzQixJQUF0QjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0IsRUFBaEI7QUFDQSxTQUFLQyxtQkFBTCxHQUEyQixLQUEzQjtBQUVBLFNBQUtOLElBQUw7QUFDRDs7OztvREFFK0I7QUFDOUJPLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUNFLFVBQUdyQixLQUFLLENBQUNzQixNQUFOLENBQWEsNEJBQWIsQ0FBSCwySUFERjtBQUtEOzs7MkJBRU07QUFDTCxVQUFJekIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjVixnQkFBZCxDQUFKLEVBQXFDO0FBQ25DLGFBQUtNLE9BQUwsR0FBZSxJQUFmO0FBQ0EsYUFBS1EsUUFBTCxHQUFnQkssSUFBSSxDQUFDQyxLQUFMLENBQVczQixFQUFFLENBQUM0QixZQUFILENBQWdCckIsZ0JBQWhCLEVBQWtDLE1BQWxDLENBQVgsQ0FBaEI7QUFDQSxhQUFLWSxhQUFMLEdBQXFCLEtBQUtFLFFBQUwsQ0FBYyxDQUFkLENBQXJCO0FBQ0EsYUFBS0QsY0FBTCxHQUFzQmhCLFVBQVUsQ0FBQ3lCLG1CQUFYLEdBQ2xCekIsVUFBVSxDQUFDeUIsbUJBRE8sR0FFbEIsS0FBS1YsYUFGVCxDQUptQyxDQU1YO0FBQ3pCOztBQUVELFVBQUksQ0FBQ25CLEVBQUUsQ0FBQ2lCLFVBQUgsQ0FBY1QsWUFBZCxDQUFMLEVBQWtDO0FBQ2hDLGFBQUtjLG1CQUFMLEdBQTJCLElBQTNCO0FBQ0Q7QUFDRjs7Ozs7O0FBR0gsSUFBTVEsR0FBRyxHQUFHO0FBQ1ZDLEVBQUFBLFdBQVcsRUFBRSxJQUFJdEIsV0FBSixFQURIO0FBRVZ1QixFQUFBQSxVQUFVLEVBQUUsSUFBSWQsVUFBSjtBQUZGLENBQVo7QUFLQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSixHQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpO1xuXG5jb25zdCBzaXRlQ29uZmlnID0gcmVxdWlyZShgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcblxuY29uc3Qgam9pbiA9IHBhdGguam9pbjtcblxuY29uc3QgbGFuZ3VhZ2VzRmlsZSA9IGpvaW4oQ1dELCAnbGFuZ3VhZ2VzLmpzJyk7XG5jb25zdCB2ZXJzaW9uc0pTT05GaWxlID0gam9pbihDV0QsICd2ZXJzaW9ucy5qc29uJyk7XG5jb25zdCB2ZXJzaW9uc0ZpbGUgPSBqb2luKENXRCwgJ3BhZ2VzL2VuL3ZlcnNpb25zLmpzJyk7XG5cbmNsYXNzIFRyYW5zbGF0aW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5sYW5ndWFnZXMgPSBbXG4gICAgICB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIG5hbWU6ICdFbmdsaXNoJyxcbiAgICAgICAgdGFnOiAnZW4nLFxuICAgICAgfSxcbiAgICBdO1xuXG4gICAgdGhpcy5sb2FkKCk7XG4gIH1cblxuICBlbmFibGVkTGFuZ3VhZ2VzID0gKCkgPT4gdGhpcy5sYW5ndWFnZXMuZmlsdGVyKChsYW5nKSA9PiBsYW5nLmVuYWJsZWQpO1xuXG4gIGxvYWQoKSB7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmMobGFuZ3VhZ2VzRmlsZSkpIHtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLmxhbmd1YWdlcyA9IHJlcXVpcmUobGFuZ3VhZ2VzRmlsZSk7XG4gICAgfVxuICB9XG59XG5cbmNsYXNzIFZlcnNpb25pbmcge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmVuYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmxhdGVzdFZlcnNpb24gPSBudWxsO1xuICAgIHRoaXMuZGVmYXVsdFZlcnNpb24gPSBudWxsO1xuICAgIHRoaXMudmVyc2lvbnMgPSBbXTtcbiAgICB0aGlzLm1pc3NpbmdWZXJzaW9uc1BhZ2UgPSBmYWxzZTtcblxuICAgIHRoaXMubG9hZCgpO1xuICB9XG5cbiAgcHJpbnRNaXNzaW5nVmVyc2lvbnNQYWdlRXJyb3IoKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgIGAke2NoYWxrLnllbGxvdygnTm8gdmVyc2lvbnMuanMgZmlsZSBmb3VuZCEnKX1gICtcbiAgICAgICAgYFxcbllvdSBzaG91bGQgY3JlYXRlIHlvdXIgdmVyc2lvbnMuanMgZmlsZSBpbiBwYWdlcy9lbiBkaXJlY3RvcnkuYCArXG4gICAgICAgIGBcXG5QbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kb2N1c2F1cnVzLmlvL2RvY3MvZW4vdmVyc2lvbmluZy5odG1sLmAsXG4gICAgKTtcbiAgfVxuXG4gIGxvYWQoKSB7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmModmVyc2lvbnNKU09ORmlsZSkpIHtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLnZlcnNpb25zID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmModmVyc2lvbnNKU09ORmlsZSwgJ3V0ZjgnKSk7XG4gICAgICB0aGlzLmxhdGVzdFZlcnNpb24gPSB0aGlzLnZlcnNpb25zWzBdO1xuICAgICAgdGhpcy5kZWZhdWx0VmVyc2lvbiA9IHNpdGVDb25maWcuZGVmYXVsdFZlcnNpb25TaG93blxuICAgICAgICA/IHNpdGVDb25maWcuZGVmYXVsdFZlcnNpb25TaG93blxuICAgICAgICA6IHRoaXMubGF0ZXN0VmVyc2lvbjsgLy8gb3RoZXJ3aXNlIHNob3cgdGhlIGxhdGVzdCB2ZXJzaW9uIChvdGhlciB0aGFuIG5leHQvbWFzdGVyKVxuICAgIH1cblxuICAgIGlmICghZnMuZXhpc3RzU3luYyh2ZXJzaW9uc0ZpbGUpKSB7XG4gICAgICB0aGlzLm1pc3NpbmdWZXJzaW9uc1BhZ2UgPSB0cnVlO1xuICAgIH1cbiAgfVxufVxuXG5jb25zdCBlbnYgPSB7XG4gIHRyYW5zbGF0aW9uOiBuZXcgVHJhbnNsYXRpb24oKSxcbiAgdmVyc2lvbmluZzogbmV3IFZlcnNpb25pbmcoKSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW52O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "env.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "path",
        "chalk",
        "siteConfig",
        "join",
        "languagesFile",
        "versionsJSONFile",
        "versionsFile",
        "Translation",
        "languages",
        "filter",
        "lang",
        "enabled",
        "name",
        "tag",
        "load",
        "existsSync",
        "Versioning",
        "latestVersion",
        "defaultVersion",
        "versions",
        "missingVersionsPage",
        "console",
        "error",
        "yellow",
        "JSON",
        "parse",
        "readFileSync",
        "defaultVersionShown",
        "env",
        "translation",
        "versioning",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMG,UAAU,GAAGH,OAAO,WAAIJ,GAAJ,oBAA1B;;AAEA,IAAMQ,IAAI,GAAGH,IAAI,CAACG,IAAlB;AAEA,IAAMC,aAAa,GAAGD,IAAI,CAACR,GAAD,EAAM,cAAN,CAA1B;AACA,IAAMU,gBAAgB,GAAGF,IAAI,CAACR,GAAD,EAAM,eAAN,CAA7B;AACA,IAAMW,YAAY,GAAGH,IAAI,CAACR,GAAD,EAAM,sBAAN,CAAzB;;IAEMY,W;AACJ,yBAAc;AAAA;;AAAA;;AAAA,8CAaK;AAAA,aAAM,KAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,OAAf;AAAA,OAAtB,CAAN;AAAA,KAbL;;AACZ,SAAKA,OAAL,GAAe,KAAf;AACA,SAAKH,SAAL,GAAiB,CACf;AACEG,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADe,CAAjB;AAQA,SAAKC,IAAL;AACD;;;;2BAIM;AACL,UAAIhB,EAAE,CAACiB,UAAH,CAAcX,aAAd,CAAJ,EAAkC;AAChC,aAAKO,OAAL,GAAe,IAAf;AACA,aAAKH,SAAL,GAAiBT,OAAO,CAACK,aAAD,CAAxB;AACD;AACF;;;;;;IAGGY,U;AACJ,wBAAc;AAAA;;AACZ,SAAKL,OAAL,GAAe,KAAf;AACA,SAAKM,aAAL,GAAqB,IAArB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AAEA,SAAKN,IAAL;AACD;;;;oDAE+B;AAC9BO,MAAAA,OAAO,CAACC,KAAR,CACE,UAAGrB,KAAK,CAACsB,MAAN,CAAa,4BAAb,CAAH,2IADF;AAKD;;;2BAEM;AACL,UAAIzB,EAAE,CAACiB,UAAH,CAAcV,gBAAd,CAAJ,EAAqC;AACnC,aAAKM,OAAL,GAAe,IAAf;AACA,aAAKQ,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAW3B,EAAE,CAAC4B,YAAH,CAAgBrB,gBAAhB,EAAkC,MAAlC,CAAX,CAAhB;AACA,aAAKY,aAAL,GAAqB,KAAKE,QAAL,CAAc,CAAd,CAArB;AACA,aAAKD,cAAL,GAAsBhB,UAAU,CAACyB,mBAAX,GAClBzB,UAAU,CAACyB,mBADO,GAElB,KAAKV,aAFT,CAJmC,CAMX;AACzB;;AAED,UAAI,CAACnB,EAAE,CAACiB,UAAH,CAAcT,YAAd,CAAL,EAAkC;AAChC,aAAKc,mBAAL,GAA2B,IAA3B;AACD;AACF;;;;;;AAGH,IAAMQ,GAAG,GAAG;AACVC,EAAAA,WAAW,EAAE,IAAItB,WAAJ,EADH;AAEVuB,EAAAA,UAAU,EAAE,IAAId,UAAJ;AAFF,CAAZ;AAKAe,MAAM,CAACC,OAAP,GAAiBJ,GAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('chalk');\n\nconst siteConfig = require(`${CWD}/siteConfig.js`);\n\nconst join = path.join;\n\nconst languagesFile = join(CWD, 'languages.js');\nconst versionsJSONFile = join(CWD, 'versions.json');\nconst versionsFile = join(CWD, 'pages/en/versions.js');\n\nclass Translation {\n  constructor() {\n    this.enabled = false;\n    this.languages = [\n      {\n        enabled: true,\n        name: 'English',\n        tag: 'en',\n      },\n    ];\n\n    this.load();\n  }\n\n  enabledLanguages = () => this.languages.filter((lang) => lang.enabled);\n\n  load() {\n    if (fs.existsSync(languagesFile)) {\n      this.enabled = true;\n      this.languages = require(languagesFile);\n    }\n  }\n}\n\nclass Versioning {\n  constructor() {\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n\n    this.load();\n  }\n\n  printMissingVersionsPageError() {\n    console.error(\n      `${chalk.yellow('No versions.js file found!')}` +\n        `\\nYou should create your versions.js file in pages/en directory.` +\n        `\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.`,\n    );\n  }\n\n  load() {\n    if (fs.existsSync(versionsJSONFile)) {\n      this.enabled = true;\n      this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n      this.latestVersion = this.versions[0];\n      this.defaultVersion = siteConfig.defaultVersionShown\n        ? siteConfig.defaultVersionShown\n        : this.latestVersion; // otherwise show the latest version (other than next/master)\n    }\n\n    if (!fs.existsSync(versionsFile)) {\n      this.missingVersionsPage = true;\n    }\n  }\n}\n\nconst env = {\n  translation: new Translation(),\n  versioning: new Versioning(),\n};\n\nmodule.exports = env;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\start.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\start.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\start.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\start.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "start.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar program = require('commander');\n\nvar openBrowser = require('react-dev-utils/openBrowser');\n\nvar portFinder = require('portfinder');\n\nvar liveReloadServer = require('./liveReloadServer.js');\n\nvar server = require('./server.js');\n\nvar CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  var promise = portFinder.getPortPromise({\n    port: 35729\n  }).then(function (port) {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  var initialServerPort = parseInt(program.port, 10) || process.env.PORT || 3000;\n  var host = program.host || 'localhost';\n  var promise = portFinder.getPortPromise({\n    port: initialServerPort\n  }).then(function (port) {\n    server(port, host);\n\n    var _require = require(\"\".concat(CWD, \"/siteConfig.js\")),\n        baseUrl = _require.baseUrl;\n\n    var serverAddress = \"http://\".concat(host, \":\").concat(port).concat(baseUrl);\n    console.log('Docusaurus server started on port %d', port);\n    openBrowser(serverAddress);\n  });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer()[\"catch\"](function (ex) {\n      return console.warn(\"Failed to start live reload server: \".concat(ex));\n    }).then(function () {\n      return startServer();\n    });\n  }\n\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus: startDocusaurus,\n  startServer: startServer,\n  startLiveReloadServer: startLiveReloadServer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXJ0LmpzIl0sIm5hbWVzIjpbInByb2dyYW0iLCJyZXF1aXJlIiwib3BlbkJyb3dzZXIiLCJwb3J0RmluZGVyIiwibGl2ZVJlbG9hZFNlcnZlciIsInNlcnZlciIsIkNXRCIsInByb2Nlc3MiLCJjd2QiLCJzdGFydExpdmVSZWxvYWRTZXJ2ZXIiLCJwcm9taXNlIiwiZ2V0UG9ydFByb21pc2UiLCJwb3J0IiwidGhlbiIsInN0YXJ0Iiwic3RhcnRTZXJ2ZXIiLCJpbml0aWFsU2VydmVyUG9ydCIsInBhcnNlSW50IiwiZW52IiwiUE9SVCIsImhvc3QiLCJiYXNlVXJsIiwic2VydmVyQWRkcmVzcyIsImNvbnNvbGUiLCJsb2ciLCJzdGFydERvY3VzYXVydXMiLCJ3YXRjaCIsImV4Iiwid2FybiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsNkJBQUQsQ0FBM0I7O0FBQ0EsSUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFDQSxJQUFNRyxnQkFBZ0IsR0FBR0gsT0FBTyxDQUFDLHVCQUFELENBQWhDOztBQUNBLElBQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLGFBQUQsQ0FBdEI7O0FBRUEsSUFBTUssR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFFQSxTQUFTQyxxQkFBVCxHQUFpQztBQUMvQixNQUFNQyxPQUFPLEdBQUdQLFVBQVUsQ0FBQ1EsY0FBWCxDQUEwQjtBQUFDQyxJQUFBQSxJQUFJLEVBQUU7QUFBUCxHQUExQixFQUF5Q0MsSUFBekMsQ0FBOEMsVUFBQ0QsSUFBRCxFQUFVO0FBQ3RFUixJQUFBQSxnQkFBZ0IsQ0FBQ1UsS0FBakIsQ0FBdUJGLElBQXZCO0FBQ0QsR0FGZSxDQUFoQjtBQUdBLFNBQU9GLE9BQVA7QUFDRDs7QUFFRCxTQUFTSyxXQUFULEdBQXVCO0FBQ3JCLE1BQU1DLGlCQUFpQixHQUNyQkMsUUFBUSxDQUFDakIsT0FBTyxDQUFDWSxJQUFULEVBQWUsRUFBZixDQUFSLElBQThCTCxPQUFPLENBQUNXLEdBQVIsQ0FBWUMsSUFBMUMsSUFBa0QsSUFEcEQ7QUFFQSxNQUFNQyxJQUFJLEdBQUdwQixPQUFPLENBQUNvQixJQUFSLElBQWdCLFdBQTdCO0FBQ0EsTUFBTVYsT0FBTyxHQUFHUCxVQUFVLENBQ3ZCUSxjQURhLENBQ0U7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFSTtBQUFQLEdBREYsRUFFYkgsSUFGYSxDQUVSLFVBQUNELElBQUQsRUFBVTtBQUNkUCxJQUFBQSxNQUFNLENBQUNPLElBQUQsRUFBT1EsSUFBUCxDQUFOOztBQURjLG1CQUVJbkIsT0FBTyxXQUFJSyxHQUFKLG9CQUZYO0FBQUEsUUFFUGUsT0FGTyxZQUVQQSxPQUZPOztBQUdkLFFBQU1DLGFBQWEsb0JBQWFGLElBQWIsY0FBcUJSLElBQXJCLFNBQTRCUyxPQUE1QixDQUFuQjtBQUNBRSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQ0FBWixFQUFvRFosSUFBcEQ7QUFDQVYsSUFBQUEsV0FBVyxDQUFDb0IsYUFBRCxDQUFYO0FBQ0QsR0FSYSxDQUFoQjtBQVNBLFNBQU9aLE9BQVA7QUFDRDs7QUFFRCxTQUFTZSxlQUFULEdBQTJCO0FBQ3pCLE1BQUl6QixPQUFPLENBQUMwQixLQUFaLEVBQW1CO0FBQ2pCLFdBQU9qQixxQkFBcUIsV0FBckIsQ0FDRSxVQUFDa0IsRUFBRDtBQUFBLGFBQVFKLE9BQU8sQ0FBQ0ssSUFBUiwrQ0FBb0RELEVBQXBELEVBQVI7QUFBQSxLQURGLEVBRUpkLElBRkksQ0FFQztBQUFBLGFBQU1FLFdBQVcsRUFBakI7QUFBQSxLQUZELENBQVA7QUFHRDs7QUFDRCxTQUFPQSxXQUFXLEVBQWxCO0FBQ0Q7O0FBRURjLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmTCxFQUFBQSxlQUFlLEVBQWZBLGVBRGU7QUFFZlYsRUFBQUEsV0FBVyxFQUFYQSxXQUZlO0FBR2ZOLEVBQUFBLHFCQUFxQixFQUFyQkE7QUFIZSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHByb2dyYW0gPSByZXF1aXJlKCdjb21tYW5kZXInKTtcbmNvbnN0IG9wZW5Ccm93c2VyID0gcmVxdWlyZSgncmVhY3QtZGV2LXV0aWxzL29wZW5Ccm93c2VyJyk7XG5jb25zdCBwb3J0RmluZGVyID0gcmVxdWlyZSgncG9ydGZpbmRlcicpO1xuY29uc3QgbGl2ZVJlbG9hZFNlcnZlciA9IHJlcXVpcmUoJy4vbGl2ZVJlbG9hZFNlcnZlci5qcycpO1xuY29uc3Qgc2VydmVyID0gcmVxdWlyZSgnLi9zZXJ2ZXIuanMnKTtcblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcblxuZnVuY3Rpb24gc3RhcnRMaXZlUmVsb2FkU2VydmVyKCkge1xuICBjb25zdCBwcm9taXNlID0gcG9ydEZpbmRlci5nZXRQb3J0UHJvbWlzZSh7cG9ydDogMzU3Mjl9KS50aGVuKChwb3J0KSA9PiB7XG4gICAgbGl2ZVJlbG9hZFNlcnZlci5zdGFydChwb3J0KTtcbiAgfSk7XG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5mdW5jdGlvbiBzdGFydFNlcnZlcigpIHtcbiAgY29uc3QgaW5pdGlhbFNlcnZlclBvcnQgPVxuICAgIHBhcnNlSW50KHByb2dyYW0ucG9ydCwgMTApIHx8IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcbiAgY29uc3QgaG9zdCA9IHByb2dyYW0uaG9zdCB8fCAnbG9jYWxob3N0JztcbiAgY29uc3QgcHJvbWlzZSA9IHBvcnRGaW5kZXJcbiAgICAuZ2V0UG9ydFByb21pc2Uoe3BvcnQ6IGluaXRpYWxTZXJ2ZXJQb3J0fSlcbiAgICAudGhlbigocG9ydCkgPT4ge1xuICAgICAgc2VydmVyKHBvcnQsIGhvc3QpO1xuICAgICAgY29uc3Qge2Jhc2VVcmx9ID0gcmVxdWlyZShgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcbiAgICAgIGNvbnN0IHNlcnZlckFkZHJlc3MgPSBgaHR0cDovLyR7aG9zdH06JHtwb3J0fSR7YmFzZVVybH1gO1xuICAgICAgY29uc29sZS5sb2coJ0RvY3VzYXVydXMgc2VydmVyIHN0YXJ0ZWQgb24gcG9ydCAlZCcsIHBvcnQpO1xuICAgICAgb3BlbkJyb3dzZXIoc2VydmVyQWRkcmVzcyk7XG4gICAgfSk7XG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5mdW5jdGlvbiBzdGFydERvY3VzYXVydXMoKSB7XG4gIGlmIChwcm9ncmFtLndhdGNoKSB7XG4gICAgcmV0dXJuIHN0YXJ0TGl2ZVJlbG9hZFNlcnZlcigpXG4gICAgICAuY2F0Y2goKGV4KSA9PiBjb25zb2xlLndhcm4oYEZhaWxlZCB0byBzdGFydCBsaXZlIHJlbG9hZCBzZXJ2ZXI6ICR7ZXh9YCkpXG4gICAgICAudGhlbigoKSA9PiBzdGFydFNlcnZlcigpKTtcbiAgfVxuICByZXR1cm4gc3RhcnRTZXJ2ZXIoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN0YXJ0RG9jdXNhdXJ1cyxcbiAgc3RhcnRTZXJ2ZXIsXG4gIHN0YXJ0TGl2ZVJlbG9hZFNlcnZlcixcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "start.js"
      ],
      "names": [
        "program",
        "require",
        "openBrowser",
        "portFinder",
        "liveReloadServer",
        "server",
        "CWD",
        "process",
        "cwd",
        "startLiveReloadServer",
        "promise",
        "getPortPromise",
        "port",
        "then",
        "start",
        "startServer",
        "initialServerPort",
        "parseInt",
        "env",
        "PORT",
        "host",
        "baseUrl",
        "serverAddress",
        "console",
        "log",
        "startDocusaurus",
        "watch",
        "ex",
        "warn",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,uBAAD,CAAhC;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,aAAD,CAAtB;;AAEA,IAAMK,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AAEA,SAASC,qBAAT,GAAiC;AAC/B,MAAMC,OAAO,GAAGP,UAAU,CAACQ,cAAX,CAA0B;AAACC,IAAAA,IAAI,EAAE;AAAP,GAA1B,EAAyCC,IAAzC,CAA8C,UAACD,IAAD,EAAU;AACtER,IAAAA,gBAAgB,CAACU,KAAjB,CAAuBF,IAAvB;AACD,GAFe,CAAhB;AAGA,SAAOF,OAAP;AACD;;AAED,SAASK,WAAT,GAAuB;AACrB,MAAMC,iBAAiB,GACrBC,QAAQ,CAACjB,OAAO,CAACY,IAAT,EAAe,EAAf,CAAR,IAA8BL,OAAO,CAACW,GAAR,CAAYC,IAA1C,IAAkD,IADpD;AAEA,MAAMC,IAAI,GAAGpB,OAAO,CAACoB,IAAR,IAAgB,WAA7B;AACA,MAAMV,OAAO,GAAGP,UAAU,CACvBQ,cADa,CACE;AAACC,IAAAA,IAAI,EAAEI;AAAP,GADF,EAEbH,IAFa,CAER,UAACD,IAAD,EAAU;AACdP,IAAAA,MAAM,CAACO,IAAD,EAAOQ,IAAP,CAAN;;AADc,mBAEInB,OAAO,WAAIK,GAAJ,oBAFX;AAAA,QAEPe,OAFO,YAEPA,OAFO;;AAGd,QAAMC,aAAa,oBAAaF,IAAb,cAAqBR,IAArB,SAA4BS,OAA5B,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDZ,IAApD;AACAV,IAAAA,WAAW,CAACoB,aAAD,CAAX;AACD,GARa,CAAhB;AASA,SAAOZ,OAAP;AACD;;AAED,SAASe,eAAT,GAA2B;AACzB,MAAIzB,OAAO,CAAC0B,KAAZ,EAAmB;AACjB,WAAOjB,qBAAqB,WAArB,CACE,UAACkB,EAAD;AAAA,aAAQJ,OAAO,CAACK,IAAR,+CAAoDD,EAApD,EAAR;AAAA,KADF,EAEJd,IAFI,CAEC;AAAA,aAAME,WAAW,EAAjB;AAAA,KAFD,CAAP;AAGD;;AACD,SAAOA,WAAW,EAAlB;AACD;;AAEDc,MAAM,CAACC,OAAP,GAAiB;AACfL,EAAAA,eAAe,EAAfA,eADe;AAEfV,EAAAA,WAAW,EAAXA,WAFe;AAGfN,EAAAA,qBAAqB,EAArBA;AAHe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst program = require('commander');\nconst openBrowser = require('react-dev-utils/openBrowser');\nconst portFinder = require('portfinder');\nconst liveReloadServer = require('./liveReloadServer.js');\nconst server = require('./server.js');\n\nconst CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  const promise = portFinder.getPortPromise({port: 35729}).then((port) => {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  const initialServerPort =\n    parseInt(program.port, 10) || process.env.PORT || 3000;\n  const host = program.host || 'localhost';\n  const promise = portFinder\n    .getPortPromise({port: initialServerPort})\n    .then((port) => {\n      server(port, host);\n      const {baseUrl} = require(`${CWD}/siteConfig.js`);\n      const serverAddress = `http://${host}:${port}${baseUrl}`;\n      console.log('Docusaurus server started on port %d', port);\n      openBrowser(serverAddress);\n    });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer()\n      .catch((ex) => console.warn(`Failed to start live reload server: ${ex}`))\n      .then(() => startServer());\n  }\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus,\n  startServer,\n  startLiveReloadServer,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\liveReloadServer.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\liveReloadServer.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\liveReloadServer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\liveReloadServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "liveReloadServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar gaze = require('gaze');\n\nvar tinylr = require('tiny-lr');\n\nvar program = require('commander');\n\nvar readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  var server = tinylr();\n  server.listen(port, function () {\n    console.log('LiveReload server started on port %d', port);\n  });\n  gaze([\"../\".concat(readMetadata.getDocsPath(), \"/**/*\"), '**/*', '!node_modules/**/*'], function () {\n    this.on('all', function () {\n      server.notifyClients(['/']);\n    });\n  });\n}\n\nvar getReloadScriptUrl = function getReloadScriptUrl() {\n  var port = process.env.LIVERELOAD_PORT;\n  var host = program.host || 'localhost';\n  return \"http://\".concat(host, \":\").concat(port, \"/livereload.js\");\n};\n\nmodule.exports = {\n  start: start,\n  getReloadScriptUrl: getReloadScriptUrl\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpdmVSZWxvYWRTZXJ2ZXIuanMiXSwibmFtZXMiOlsiZ2F6ZSIsInJlcXVpcmUiLCJ0aW55bHIiLCJwcm9ncmFtIiwicmVhZE1ldGFkYXRhIiwic3RhcnQiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiTElWRVJFTE9BRF9QT1JUIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImdldERvY3NQYXRoIiwib24iLCJub3RpZnlDbGllbnRzIiwiZ2V0UmVsb2FkU2NyaXB0VXJsIiwiaG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLElBQU1HLFlBQVksR0FBR0gsT0FBTyxDQUFDLG1CQUFELENBQTVCOztBQUVBLFNBQVNJLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUNuQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosR0FBdUIsYUFBdkI7QUFDQUYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLGVBQVosR0FBOEJKLElBQTlCO0FBQ0EsTUFBTUssTUFBTSxHQUFHVCxNQUFNLEVBQXJCO0FBQ0FTLEVBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjTixJQUFkLEVBQW9CLFlBQU07QUFDeEJPLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNDQUFaLEVBQW9EUixJQUFwRDtBQUNELEdBRkQ7QUFJQU4sRUFBQUEsSUFBSSxDQUNGLGNBQU9JLFlBQVksQ0FBQ1csV0FBYixFQUFQLFlBQTBDLE1BQTFDLEVBQWtELG9CQUFsRCxDQURFLEVBRUYsWUFBWTtBQUNWLFNBQUtDLEVBQUwsQ0FBUSxLQUFSLEVBQWUsWUFBTTtBQUNuQkwsTUFBQUEsTUFBTSxDQUFDTSxhQUFQLENBQXFCLENBQUMsR0FBRCxDQUFyQjtBQUNELEtBRkQ7QUFHRCxHQU5DLENBQUo7QUFRRDs7QUFDRCxJQUFNQyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLEdBQU07QUFDL0IsTUFBTVosSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsZUFBekI7QUFDQSxNQUFNUyxJQUFJLEdBQUdoQixPQUFPLENBQUNnQixJQUFSLElBQWdCLFdBQTdCO0FBRUEsMEJBQWlCQSxJQUFqQixjQUF5QmIsSUFBekI7QUFDRCxDQUxEOztBQU9BYyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmhCLEVBQUFBLEtBQUssRUFBTEEsS0FEZTtBQUVmYSxFQUFBQSxrQkFBa0IsRUFBbEJBO0FBRmUsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcRGVza3RvcFxcQmxvZ1xcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBnYXplID0gcmVxdWlyZSgnZ2F6ZScpO1xuY29uc3QgdGlueWxyID0gcmVxdWlyZSgndGlueS1scicpO1xuY29uc3QgcHJvZ3JhbSA9IHJlcXVpcmUoJ2NvbW1hbmRlcicpO1xuY29uc3QgcmVhZE1ldGFkYXRhID0gcmVxdWlyZSgnLi9yZWFkTWV0YWRhdGEuanMnKTtcblxuZnVuY3Rpb24gc3RhcnQocG9ydCkge1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViA9ICdkZXZlbG9wbWVudCc7XG4gIHByb2Nlc3MuZW52LkxJVkVSRUxPQURfUE9SVCA9IHBvcnQ7XG4gIGNvbnN0IHNlcnZlciA9IHRpbnlscigpO1xuICBzZXJ2ZXIubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnTGl2ZVJlbG9hZCBzZXJ2ZXIgc3RhcnRlZCBvbiBwb3J0ICVkJywgcG9ydCk7XG4gIH0pO1xuXG4gIGdhemUoXG4gICAgW2AuLi8ke3JlYWRNZXRhZGF0YS5nZXREb2NzUGF0aCgpfS8qKi8qYCwgJyoqLyonLCAnIW5vZGVfbW9kdWxlcy8qKi8qJ10sXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5vbignYWxsJywgKCkgPT4ge1xuICAgICAgICBzZXJ2ZXIubm90aWZ5Q2xpZW50cyhbJy8nXSk7XG4gICAgICB9KTtcbiAgICB9LFxuICApO1xufVxuY29uc3QgZ2V0UmVsb2FkU2NyaXB0VXJsID0gKCkgPT4ge1xuICBjb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuTElWRVJFTE9BRF9QT1JUO1xuICBjb25zdCBob3N0ID0gcHJvZ3JhbS5ob3N0IHx8ICdsb2NhbGhvc3QnO1xuXG4gIHJldHVybiBgaHR0cDovLyR7aG9zdH06JHtwb3J0fS9saXZlcmVsb2FkLmpzYDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzdGFydCxcbiAgZ2V0UmVsb2FkU2NyaXB0VXJsLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "liveReloadServer.js"
      ],
      "names": [
        "gaze",
        "require",
        "tinylr",
        "program",
        "readMetadata",
        "start",
        "port",
        "process",
        "env",
        "NODE_ENV",
        "LIVERELOAD_PORT",
        "server",
        "listen",
        "console",
        "log",
        "getDocsPath",
        "on",
        "notifyClients",
        "getReloadScriptUrl",
        "host",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,mBAAD,CAA5B;;AAEA,SAASI,KAAT,CAAeC,IAAf,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ,GAA8BJ,IAA9B;AACA,MAAMK,MAAM,GAAGT,MAAM,EAArB;AACAS,EAAAA,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoB,YAAM;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDR,IAApD;AACD,GAFD;AAIAN,EAAAA,IAAI,CACF,cAAOI,YAAY,CAACW,WAAb,EAAP,YAA0C,MAA1C,EAAkD,oBAAlD,CADE,EAEF,YAAY;AACV,SAAKC,EAAL,CAAQ,KAAR,EAAe,YAAM;AACnBL,MAAAA,MAAM,CAACM,aAAP,CAAqB,CAAC,GAAD,CAArB;AACD,KAFD;AAGD,GANC,CAAJ;AAQD;;AACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,MAAMZ,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYE,eAAzB;AACA,MAAMS,IAAI,GAAGhB,OAAO,CAACgB,IAAR,IAAgB,WAA7B;AAEA,0BAAiBA,IAAjB,cAAyBb,IAAzB;AACD,CALD;;AAOAc,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,KAAK,EAALA,KADe;AAEfa,EAAAA,kBAAkB,EAAlBA;AAFe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst gaze = require('gaze');\nconst tinylr = require('tiny-lr');\nconst program = require('commander');\nconst readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  const server = tinylr();\n  server.listen(port, () => {\n    console.log('LiveReload server started on port %d', port);\n  });\n\n  gaze(\n    [`../${readMetadata.getDocsPath()}/**/*`, '**/*', '!node_modules/**/*'],\n    function () {\n      this.on('all', () => {\n        server.notifyClients(['/']);\n      });\n    },\n  );\n}\nconst getReloadScriptUrl = () => {\n  const port = process.env.LIVERELOAD_PORT;\n  const host = program.host || 'localhost';\n\n  return `http://${host}:${port}/livereload.js`;\n};\n\nmodule.exports = {\n  start,\n  getReloadScriptUrl,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\readMetadata.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\readMetadata.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\readMetadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\readMetadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "readMetadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar program = require('commander');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar blog = require('./blog.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar versionFallback = require('./versionFallback.js');\n\nvar utils = require('./utils.js');\n\nvar docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : ''); // Get a list of all IDs that have been deleted in any version.\n// We will assume these should not be in the current/next version.\n\nvar allDeletedIds = new Set();\n\nif (siteConfig.deletedDocs) {\n  Object.values(siteConfig.deletedDocs).forEach(function (idList) {\n    idList.forEach(function (id) {\n      return allDeletedIds.add(id);\n    });\n  });\n}\n\nvar SupportedHeaderFields = new Set(['id', 'title', 'author', 'authorURL', 'authorFBID', 'sidebar_label', 'original_id', 'hide_title', 'layout', 'custom_edit_url', 'description']);\nvar allSidebars;\n\nif (fs.existsSync(\"\".concat(CWD, \"/sidebars.json\"))) {\n  allSidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n} else {\n  allSidebars = {};\n} // Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\n\n\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n} // returns map from id to object containing sidebar ordering info\n\n\nfunction readSidebar() {\n  var sidebars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  Object.assign(sidebars, versionFallback.sidebarData());\n  var items = {};\n  Object.keys(sidebars).forEach(function (sidebar) {\n    var categories = sidebars[sidebar];\n    var sidebarItems = [];\n    Object.keys(categories).forEach(function (category) {\n      var categoryItems = categories[category];\n      categoryItems.forEach(function (categoryItem) {\n        if (_typeof(categoryItem) === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(function (subcategoryItem) {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category: category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1\n                });\n              });\n              return;\n\n            default:\n              return;\n          }\n        } // Is a regular id value.\n\n\n        sidebarItems.push({\n          id: categoryItem,\n          category: category,\n          subcategory: null,\n          order: sidebarItems.length + 1\n        });\n      });\n    });\n\n    for (var i = 0; i < sidebarItems.length; i++) {\n      var item = sidebarItems[i];\n      var previous = null;\n      var next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous: previous,\n        next: next,\n        sidebar: sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order\n      };\n    }\n  });\n  return items;\n} // process the metadata for a document found in either 'docs' or 'translated_docs'\n\n\nfunction processMetadata(file, refDir) {\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var language = utils.getLanguage(file, refDir) || 'en';\n  var metadata = {};\n  Object.keys(result.metadata).forEach(function (fieldName) {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(\"Header field \\\"\".concat(fieldName, \"\\\" in \").concat(file, \" is not supported.\"));\n    }\n  });\n  var rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  } // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n\n\n  var subDir = utils.getSubDir(file, refDir);\n\n  if (subDir) {\n    metadata.id = \"\".concat(subDir, \"/\").concat(metadata.id);\n  } // Example: `docs/projectA/test.md` source is `projectA/test.md`\n\n\n  metadata.source = subDir ? \"\".concat(subDir, \"/\").concat(path.basename(file)) : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  var langPart = env.translation.enabled || siteConfig.useEnglishUrl ? \"\".concat(language, \"/\") : '';\n  var versionPart = '';\n\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = \"\".concat(docsPart).concat(langPart).concat(versionPart).concat(metadata.id, \".html\"); // change ids previous, next\n\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n  var items = readSidebar(allSidebars);\n  var id = metadata.localized_id;\n  var item = items[id];\n\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.next;\n    }\n\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.previous;\n    }\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: rawContent\n  };\n} // process metadata for all docs and save into core/metadata.js\n\n\nfunction generateMetadataDocs() {\n  var order;\n\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n    return language.tag;\n  });\n  var metadatas = {};\n  var defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    var docsDir = path.join(CWD, '../', getDocsPath());\n    var files = glob.sync(\"\".concat(docsDir, \"/**\"));\n    files.forEach(function (file) {\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n\n        if (allDeletedIds.has(metadata.id) || metadata.original_id && allDeletedIds.has(metadata.original_id)) {\n          return;\n        }\n\n        metadatas[metadata.id] = metadata; // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n\n        enabledLanguages.filter(function (currentLanguage) {\n          return currentLanguage !== 'en';\n        }).forEach(function (currentLanguage) {\n          var baseMetadata = Object.assign({}, metadata);\n          baseMetadata.id = baseMetadata.id.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n\n          if (baseMetadata.permalink) {\n            baseMetadata.permalink = baseMetadata.permalink.toString().replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(currentLanguage, \"/\"));\n          }\n\n          if (baseMetadata.next) {\n            baseMetadata.next = baseMetadata.next.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          if (baseMetadata.previous) {\n            baseMetadata.previous = baseMetadata.previous.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          baseMetadata.language = currentLanguage;\n          defaultMetadatas[baseMetadata.id] = baseMetadata;\n        });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    }); // metadata for non-english docs\n\n    var translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(\"\".concat(CWD, \"/translated_docs/**\"));\n    files.forEach(function (file) {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, translatedDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n\n        if (allDeletedIds.has(metadata.id) || metadata.original_id && allDeletedIds.has(metadata.original_id)) {\n          return;\n        }\n\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  } // metadata for versioned docs\n\n\n  var versionData = versionFallback.docData();\n  versionData.forEach(function (metadata) {\n    var id = metadata.localized_id;\n\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.next = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].next;\n      }\n\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.previous = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].previous;\n      }\n    }\n\n    metadatas[metadata.id] = metadata;\n  }); // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n\n  Object.keys(metadatas).forEach(function (metadata) {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title = metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title = metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/metadata.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(metadatas, null, 2), \";\\n\"));\n} // process metadata for blog posts and save into core/MetadataBlog.js\n\n\nfunction generateMetadataBlog() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : siteConfig;\n  var metadatas = [];\n  var files = glob.sync(\"\".concat(CWD, \"/blog/**/*.*\"));\n  files.sort().reverse().forEach(function (file) {\n    var extension = path.extname(file);\n\n    if (extension !== '.md' && extension !== '.markdown') {\n      return;\n    }\n\n    var metadata = blog.getMetadata(file, config); // Extract, YYYY, MM, DD from the file name\n\n    var filePathDateArr = path.basename(file).split('-');\n    metadata.date = new Date(\"\".concat(filePathDateArr[0], \"-\").concat(filePathDateArr[1], \"-\").concat(filePathDateArr[2], \"T06:00:00.000Z\")); // allow easier sorting of blog by providing seconds since epoch\n\n    metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n    metadatas.push(metadata);\n  });\n  var sortedMetadatas = metadatas.sort(function (a, b) {\n    return parseInt(b.seconds, 10) - parseInt(a.seconds, 10);\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/MetadataBlog.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(sortedMetadatas, null, 2), \";\\n\"));\n}\n\nmodule.exports = {\n  getDocsPath: getDocsPath,\n  readSidebar: readSidebar,\n  processMetadata: processMetadata,\n  generateMetadataDocs: generateMetadataDocs,\n  generateMetadataBlog: generateMetadataBlog\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "readMetadata.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "path",
        "require",
        "fs",
        "glob",
        "program",
        "metadataUtils",
        "env",
        "blog",
        "loadConfig",
        "siteConfig",
        "versionFallback",
        "utils",
        "docsPart",
        "docsUrl",
        "allDeletedIds",
        "Set",
        "deletedDocs",
        "Object",
        "values",
        "forEach",
        "idList",
        "id",
        "add",
        "SupportedHeaderFields",
        "allSidebars",
        "existsSync",
        "getDocsPath",
        "customDocsPath",
        "shouldGenerateNextReleaseDocs",
        "versioning",
        "enabled",
        "skipNextRelease",
        "readSidebar",
        "sidebars",
        "assign",
        "sidebarData",
        "items",
        "keys",
        "sidebar",
        "categories",
        "sidebarItems",
        "category",
        "categoryItems",
        "categoryItem",
        "type",
        "ids",
        "subcategoryItem",
        "push",
        "subcategory",
        "label",
        "order",
        "length",
        "i",
        "item",
        "previous",
        "next",
        "processMetadata",
        "file",
        "refDir",
        "result",
        "extractMetadata",
        "readFileSync",
        "language",
        "getLanguage",
        "metadata",
        "fieldName",
        "has",
        "console",
        "warn",
        "rawContent",
        "parse",
        "name",
        "includes",
        "Error",
        "subDir",
        "getSubDir",
        "source",
        "basename",
        "title",
        "langPart",
        "translation",
        "useEnglishUrl",
        "versionPart",
        "version",
        "permalink",
        "localized_id",
        "next_id",
        "previous_id",
        "generateMetadataDocs",
        "e",
        "error",
        "exit",
        "enabledLanguages",
        "map",
        "tag",
        "metadatas",
        "defaultMetadatas",
        "docsDir",
        "join",
        "files",
        "sync",
        "extension",
        "extname",
        "res",
        "original_id",
        "filter",
        "currentLanguage",
        "baseMetadata",
        "toString",
        "replace",
        "RegExp",
        "translatedDir",
        "versionData",
        "docData",
        "previous_title",
        "next_title",
        "writeFileSync",
        "__dirname",
        "JSON",
        "stringify",
        "generateMetadataBlog",
        "config",
        "sort",
        "reverse",
        "getMetadata",
        "filePathDateArr",
        "split",
        "date",
        "Date",
        "seconds",
        "Math",
        "round",
        "getTime",
        "sortedMetadatas",
        "a",
        "b",
        "parseInt",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\n\nconst path = require('path');\nconst fs = require('fs');\nconst glob = require('glob');\nconst program = require('commander');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst blog = require('./blog.js');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\nconst versionFallback = require('./versionFallback.js');\nconst utils = require('./utils.js');\n\nconst docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n\n// Get a list of all IDs that have been deleted in any version.\n// We will assume these should not be in the current/next version.\nconst allDeletedIds = new Set();\nif (siteConfig.deletedDocs) {\n  Object.values(siteConfig.deletedDocs).forEach((idList) => {\n    idList.forEach((id) => allDeletedIds.add(id));\n  });\n}\n\nconst SupportedHeaderFields = new Set([\n  'id',\n  'title',\n  'author',\n  'authorURL',\n  'authorFBID',\n  'sidebar_label',\n  'original_id',\n  'hide_title',\n  'layout',\n  'custom_edit_url',\n  'description',\n]);\n\nlet allSidebars;\nif (fs.existsSync(`${CWD}/sidebars.json`)) {\n  allSidebars = require(`${CWD}/sidebars.json`);\n} else {\n  allSidebars = {};\n}\n\n// Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n}\n\n// returns map from id to object containing sidebar ordering info\nfunction readSidebar(sidebars = {}) {\n  Object.assign(sidebars, versionFallback.sidebarData());\n\n  const items = {};\n\n  Object.keys(sidebars).forEach((sidebar) => {\n    const categories = sidebars[sidebar];\n    const sidebarItems = [];\n\n    Object.keys(categories).forEach((category) => {\n      const categoryItems = categories[category];\n      categoryItems.forEach((categoryItem) => {\n        if (typeof categoryItem === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach((subcategoryItem) => {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1,\n                });\n              });\n              return;\n            default:\n              return;\n          }\n        }\n\n        // Is a regular id value.\n        sidebarItems.push({\n          id: categoryItem,\n          category,\n          subcategory: null,\n          order: sidebarItems.length + 1,\n        });\n      });\n    });\n\n    for (let i = 0; i < sidebarItems.length; i++) {\n      const item = sidebarItems[i];\n      let previous = null;\n      let next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous,\n        next,\n        sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order,\n      };\n    }\n  });\n\n  return items;\n}\n\n// process the metadata for a document found in either 'docs' or 'translated_docs'\nfunction processMetadata(file, refDir) {\n  const result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const language = utils.getLanguage(file, refDir) || 'en';\n\n  const metadata = {};\n  Object.keys(result.metadata).forEach((fieldName) => {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(`Header field \"${fieldName}\" in ${file} is not supported.`);\n    }\n  });\n\n  const rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  }\n\n  // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n  const subDir = utils.getSubDir(file, refDir);\n  if (subDir) {\n    metadata.id = `${subDir}/${metadata.id}`;\n  }\n\n  // Example: `docs/projectA/test.md` source is `projectA/test.md`\n  metadata.source = subDir\n    ? `${subDir}/${path.basename(file)}`\n    : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  const langPart =\n    env.translation.enabled || siteConfig.useEnglishUrl ? `${language}/` : '';\n  let versionPart = '';\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = `${docsPart}${langPart}${versionPart}${metadata.id}.html`;\n\n  // change ids previous, next\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n\n  const items = readSidebar(allSidebars);\n  const id = metadata.localized_id;\n  const item = items[id];\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next =\n        (env.translation.enabled ? `${language}-` : '') + item.next;\n    }\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous =\n        (env.translation.enabled ? `${language}-` : '') + item.previous;\n    }\n  }\n\n  return {metadata, rawContent};\n}\n\n// process metadata for all docs and save into core/metadata.js\nfunction generateMetadataDocs() {\n  let order;\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  const enabledLanguages = env.translation\n    .enabledLanguages()\n    .map((language) => language.tag);\n\n  const metadatas = {};\n  const defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    const docsDir = path.join(CWD, '../', getDocsPath());\n    let files = glob.sync(`${docsDir}/**`);\n    files.forEach((file) => {\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        if (\n          allDeletedIds.has(metadata.id) ||\n          (metadata.original_id && allDeletedIds.has(metadata.original_id))\n        ) {\n          return;\n        }\n        metadatas[metadata.id] = metadata;\n\n        // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n        enabledLanguages\n          .filter((currentLanguage) => currentLanguage !== 'en')\n          .forEach((currentLanguage) => {\n            const baseMetadata = Object.assign({}, metadata);\n            baseMetadata.id = baseMetadata.id\n              .toString()\n              .replace(/^en-/, `${currentLanguage}-`);\n            if (baseMetadata.permalink) {\n              baseMetadata.permalink = baseMetadata.permalink\n                .toString()\n                .replace(\n                  new RegExp(`^${docsPart}en/`),\n                  `${docsPart}${currentLanguage}/`,\n                );\n            }\n            if (baseMetadata.next) {\n              baseMetadata.next = baseMetadata.next\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            if (baseMetadata.previous) {\n              baseMetadata.previous = baseMetadata.previous\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            baseMetadata.language = currentLanguage;\n            defaultMetadatas[baseMetadata.id] = baseMetadata;\n          });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    });\n\n    // metadata for non-english docs\n    const translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(`${CWD}/translated_docs/**`);\n    files.forEach((file) => {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, translatedDir);\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        if (\n          allDeletedIds.has(metadata.id) ||\n          (metadata.original_id && allDeletedIds.has(metadata.original_id))\n        ) {\n          return;\n        }\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  }\n\n  // metadata for versioned docs\n  const versionData = versionFallback.docData();\n  versionData.forEach((metadata) => {\n    const id = metadata.localized_id;\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.next =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].next;\n      }\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.previous =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].previous;\n      }\n    }\n    metadatas[metadata.id] = metadata;\n  });\n\n  // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n  Object.keys(metadatas).forEach((metadata) => {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title =\n          metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title =\n          metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/metadata.js'),\n    `${\n      '/**\\n' +\n      ' * @' +\n      'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '\n    }${JSON.stringify(metadatas, null, 2)};\\n`,\n  );\n}\n\n// process metadata for blog posts and save into core/MetadataBlog.js\nfunction generateMetadataBlog(config = siteConfig) {\n  const metadatas = [];\n\n  const files = glob.sync(`${CWD}/blog/**/*.*`);\n  files\n    .sort()\n    .reverse()\n    .forEach((file) => {\n      const extension = path.extname(file);\n      if (extension !== '.md' && extension !== '.markdown') {\n        return;\n      }\n      const metadata = blog.getMetadata(file, config);\n      // Extract, YYYY, MM, DD from the file name\n      const filePathDateArr = path.basename(file).split('-');\n      metadata.date = new Date(\n        `${filePathDateArr[0]}-${filePathDateArr[1]}-${filePathDateArr[2]}T06:00:00.000Z`,\n      );\n      // allow easier sorting of blog by providing seconds since epoch\n      metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n\n      metadatas.push(metadata);\n    });\n\n  const sortedMetadatas = metadatas.sort(\n    (a, b) => parseInt(b.seconds, 10) - parseInt(a.seconds, 10),\n  );\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/MetadataBlog.js'),\n    `${\n      '/**\\n' +\n      ' * @' +\n      'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '\n    }${JSON.stringify(sortedMetadatas, null, 2)};\\n`,\n  );\n}\n\nmodule.exports = {\n  getDocsPath,\n  readSidebar,\n  processMetadata,\n  generateMetadataDocs,\n  generateMetadataBlog,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\metadataUtils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\metadataUtils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\metadataUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\metadataUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "metadataUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  var lines = content.split(/\\r?\\n/);\n\n  if (lines[0] !== '---') {\n    return {};\n  }\n\n  var i = 1;\n\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n')\n  };\n} // Extract markdown metadata header\n\n\nfunction extractMetadata(content) {\n  var metadata = {};\n  var both = splitHeader(content); // if no content returned, then that means there was no header, and both.header is the content\n\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {\n        metadata: metadata,\n        rawContent: content\n      };\n    }\n\n    return {\n      metadata: metadata,\n      rawContent: both.header\n    };\n  } // New line characters => to handle all operating systems.\n\n\n  var lines = both.header.split(/\\r?\\n/); // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n\n  for (var i = 0; i < lines.length - 1; ++i) {\n    var keyvalue = lines[i].split(':');\n    var key = keyvalue[0].trim();\n    var value = keyvalue.slice(1).join(':').trim();\n\n    try {\n      value = JSON.parse(value);\n    } catch (err) {// Ignore the error as it means it's not a JSON value.\n    }\n\n    metadata[key] = value;\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: both.content\n  };\n} // mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\n\n\nfunction mdToHtml(Metadata, siteConfig) {\n  var baseUrl = siteConfig.baseUrl,\n      docsUrl = siteConfig.docsUrl;\n  var result = {};\n  Object.keys(Metadata).forEach(function (id) {\n    var metadata = Metadata[id];\n\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n\n    var htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n    var baseDocsPart = \"\".concat(baseUrl).concat(docsUrl ? \"\".concat(docsUrl, \"/\") : '');\n    var i18nDocsRegex = new RegExp(\"^\".concat(baseDocsPart, \"en/\"));\n    var docsRegex = new RegExp(\"^\".concat(baseDocsPart));\n\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, \"\".concat(baseDocsPart, \"en/VERSION/\"));\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, \"\".concat(baseDocsPart, \"VERSION/\"));\n    }\n\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata: extractMetadata,\n  mdToHtml: mdToHtml\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "metadataUtils.js"
      ],
      "names": [
        "splitHeader",
        "content",
        "lines",
        "split",
        "i",
        "length",
        "header",
        "slice",
        "join",
        "extractMetadata",
        "metadata",
        "both",
        "rawContent",
        "keyvalue",
        "key",
        "trim",
        "value",
        "JSON",
        "parse",
        "err",
        "mdToHtml",
        "Metadata",
        "siteConfig",
        "baseUrl",
        "docsUrl",
        "result",
        "Object",
        "keys",
        "forEach",
        "id",
        "language",
        "original_id",
        "htmlLink",
        "permalink",
        "replace",
        "baseDocsPart",
        "i18nDocsRegex",
        "RegExp",
        "docsRegex",
        "test",
        "source",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  const lines = content.split(/\\r?\\n/);\n  if (lines[0] !== '---') {\n    return {};\n  }\n  let i = 1;\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n'),\n  };\n}\n\n// Extract markdown metadata header\nfunction extractMetadata(content) {\n  const metadata = {};\n  const both = splitHeader(content);\n\n  // if no content returned, then that means there was no header, and both.header is the content\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {metadata, rawContent: content};\n    }\n    return {metadata, rawContent: both.header};\n  }\n\n  // New line characters => to handle all operating systems.\n  const lines = both.header.split(/\\r?\\n/);\n\n  // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n  for (let i = 0; i < lines.length - 1; ++i) {\n    const keyvalue = lines[i].split(':');\n    const key = keyvalue[0].trim();\n    let value = keyvalue.slice(1).join(':').trim();\n    try {\n      value = JSON.parse(value);\n    } catch (err) {\n      // Ignore the error as it means it's not a JSON value.\n    }\n    metadata[key] = value;\n  }\n  return {metadata, rawContent: both.content};\n}\n\n// mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\nfunction mdToHtml(Metadata, siteConfig) {\n  const {baseUrl, docsUrl} = siteConfig;\n  const result = {};\n  Object.keys(Metadata).forEach((id) => {\n    const metadata = Metadata[id];\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n    let htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n\n    const baseDocsPart = `${baseUrl}${docsUrl ? `${docsUrl}/` : ''}`;\n\n    const i18nDocsRegex = new RegExp(`^${baseDocsPart}en/`);\n    const docsRegex = new RegExp(`^${baseDocsPart}`);\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, `${baseDocsPart}en/VERSION/`);\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, `${baseDocsPart}VERSION/`);\n    }\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata,\n  mdToHtml,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\blog.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\blog.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\blog.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\blog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "blog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar path = require('path');\n\nvar fs = require('fs-extra');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar _require = require('./utils.js'),\n    replaceAssetsLink = _require.replaceAssetsLink;\n\nvar _require2 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n\n  return path.basename(file).replace('-', '/').replace('-', '/').replace('-', '/').replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  var BlogPageLayout = require('../core/BlogPageLayout.js');\n\n  var blogPages = {};\n  var perPage = 10;\n\n  for (var page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    var metadata = {\n      page: page,\n      perPage: perPage\n    };\n    var blogPageComp = /*#__PURE__*/React.createElement(BlogPageLayout, {\n      metadata: metadata,\n      language: \"en\",\n      config: siteConfig\n    });\n    var str = renderToStaticMarkupWithDoctype(blogPageComp);\n    var pagePath = \"\".concat(page > 0 ? \"page\".concat(page + 1) : '', \"/index.html\");\n    blogPages[pagePath] = str;\n  }\n\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, {\n    encoding: 'utf8'\n  }));\n  var metadata = Object.assign({\n    path: fileToUrl(file),\n    content: replaceAssetsLink(result.rawContent, \"\".concat(siteConfig.baseUrl, \"blog\"))\n  }, result.metadata);\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  var metadata = getMetadata(file, siteConfig);\n\n  if (!metadata) {\n    return null;\n  }\n\n  var BlogPostLayout = require('../core/BlogPostLayout.js');\n\n  var blogPostComp = /*#__PURE__*/React.createElement(BlogPostLayout, {\n    metadata: metadata,\n    language: \"en\",\n    config: siteConfig\n  }, metadata.content);\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl: fileToUrl,\n  getMetadata: getMetadata,\n  getPagesMarkup: getPagesMarkup,\n  getPostMarkup: getPostMarkup,\n  urlToSource: urlToSource\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwicGF0aCIsImZzIiwibWV0YWRhdGFVdGlscyIsInJlcGxhY2VBc3NldHNMaW5rIiwicmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSIsInVybFRvU291cmNlIiwidXJsIiwicmVwbGFjZSIsImZpbGVUb1VybCIsImZpbGUiLCJleGlzdHNTeW5jIiwiYmFzZW5hbWUiLCJnZXRQYWdlc01hcmt1cCIsIm51bU9mQmxvZyIsInNpdGVDb25maWciLCJCbG9nUGFnZUxheW91dCIsImJsb2dQYWdlcyIsInBlclBhZ2UiLCJwYWdlIiwiTWF0aCIsImNlaWwiLCJtZXRhZGF0YSIsImJsb2dQYWdlQ29tcCIsInN0ciIsInBhZ2VQYXRoIiwiZ2V0TWV0YWRhdGEiLCJyZXN1bHQiLCJleHRyYWN0TWV0YWRhdGEiLCJyZWFkRmlsZVN5bmMiLCJlbmNvZGluZyIsIk9iamVjdCIsImFzc2lnbiIsImNvbnRlbnQiLCJyYXdDb250ZW50IiwiYmFzZVVybCIsImlkIiwidGl0bGUiLCJnZXRQb3N0TWFya3VwIiwiQmxvZ1Bvc3RMYXlvdXQiLCJibG9nUG9zdENvbXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsVUFBRCxDQUFsQjs7QUFDQSxJQUFNRyxhQUFhLEdBQUdILE9BQU8sQ0FBQyxpQkFBRCxDQUE3Qjs7ZUFDNEJBLE9BQU8sQ0FBQyxZQUFELEM7SUFBNUJJLGlCLFlBQUFBLGlCOztnQkFDbUNKLE9BQU8sQ0FBQyxlQUFELEM7SUFBMUNLLCtCLGFBQUFBLCtCOztBQUVQLFNBQVNDLFdBQVQsQ0FBcUJDLEdBQXJCLEVBQTBCO0FBQ3hCLE1BQUksQ0FB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Q0FBQ2hCLElBQUQsRUFBT0ssVUFBUCxDQUE1Qjs7QUFDQSxNQUFJLENBQUNPLFFBQUwsRUFBZTtBQUNiLFdBQU8sSUFBUDtBQUNEOztBQUNELE1BQU1pQixjQUFjLEdBQUd2QyxPQUFPLENBQUMsMkJBQUQsQ0FBOUI7O0FBQ0EsTUFBTXdDLFlBQVksZ0JBQ2hCLG9CQUFDLGNBQUQ7QUFBZ0IsSUFBQSxRQUFRLEVBQUVsQixRQUExQjtBQUFvQyxJQUFBLFFBQVEsRUFBQyxJQUE3QztBQUFrRCxJQUFBLE1BQU0sRUFBRVA7QUFBMUQsS0FDR08sUUFBUSxDQUFDVyxPQURaLENBREY7QUFLQSxTQUFPNUIsK0JBQStCLENBQUNtQyxZQUFELENBQXRDO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmakMsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZpQixFQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZmIsRUFBQUEsY0FBYyxFQUFkQSxjQUhlO0FBSWZ5QixFQUFBQSxhQUFhLEVBQWJBLGFBSmU7QUFLZmhDLEVBQUFBLFdBQVcsRUFBWEE7QUFMZSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBtZXRhZGF0YVV0aWxzID0gcmVxdWlyZSgnLi9tZXRhZGF0YVV0aWxzJyk7XG5jb25zdCB7cmVwbGFjZUFzc2V0c0xpbmt9ID0gcmVxdWlyZSgnLi91dGlscy5qcycpO1xuY29uc3Qge3JlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGV9ID0gcmVxdWlyZSgnLi9yZW5kZXJVdGlscycpO1xuXG5mdW5jdGlvbiB1cmxUb1NvdXJjZSh1cmwpIHtcbiAgaWYgKCF1cmwgfHwgdHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gdXJsLnJlcGxhY2UoLyhcXC9pbmRleCk/XFwuaHRtbCQvLCAnLm1kJykucmVwbGFjZSgvXFwvL2csICctJyk7XG59XG5cbmZ1bmN0aW9uIGZpbGVUb1VybChmaWxlKSB7XG4gIGlmICghZmlsZSB8fCAhZnMuZXhpc3RzU3luYyhmaWxlKSB8fCB0eXBlb2YgZmlsZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gcGF0aFxuICAgIC5iYXNlbmFtZShmaWxlKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKC9cXC5tZCQvLCAnLmh0bWwnKTtcbn1cblxuZnVuY3Rpb24gZ2V0UGFnZXNNYXJrdXAobnVtT2ZCbG9nLCBzaXRlQ29uZmlnKSB7XG4gIGNvbnN0IEJsb2dQYWdlTGF5b3V0ID0gcmVxdWlyZSgnLi4vY29yZS9CbG9nUGFnZUxheW91dC5qcycpO1xuICBjb25zdCBibG9nUGFnZXMgPSB7fTtcbiAgY29uc3QgcGVyUGFnZSA9IDEwO1xuICBmb3IgKGxldCBwYWdlID0gMDsgcGFnZSA8IE1hdGguY2VpbChudW1PZkJsb2cgLyBwZXJQYWdlKTsgcGFnZSsrKSB7XG4gICAgY29uc3QgbWV0YWRhdGEgPSB7cGFnZSwgcGVyUGFnZX07XG4gICAgY29uc3QgYmxvZ1BhZ2VDb21wID0gKFxuICAgICAgPEJsb2dQYWdlTGF5b3V0IG1ldGFkYXRhPXttZXRhZGF0YX0gbGFuZ3VhZ2U9XCJlblwiIGNvbmZpZz17c2l0ZUNvbmZpZ30gLz5cbiAgICApO1xuICAgIGNvbnN0IHN0ciA9IHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoYmxvZ1BhZ2VDb21wKTtcbiAgICBjb25zdCBwYWdlUGF0aCA9IGAke3BhZ2UgPiAwID8gYHBhZ2Uke3BhZ2UgKyAxfWAgOiAnJ30vaW5kZXguaHRtbGA7XG4gICAgYmxvZ1BhZ2VzW3BhZ2VQYXRoXSA9IHN0cjtcbiAgfVxuICByZXR1cm4gYmxvZ1BhZ2VzO1xufVxuXG5mdW5jdGlvbiBnZXRNZXRhZGF0YShmaWxlLCBzaXRlQ29uZmlnKSB7XG4gIGlmICghZmlsZSB8fCAhZnMuZXhpc3RzU3luYyhmaWxlKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IG1ldGFkYXRhVXRpbHMuZXh0cmFjdE1ldGFkYXRhKFxuICAgIGZzLnJlYWRGaWxlU3luYyhmaWxlLCB7ZW5jb2Rpbmc6ICd1dGY4J30pLFxuICApO1xuICBjb25zdCBtZXRhZGF0YSA9IE9iamVjdC5hc3NpZ24oXG4gICAge1xuICAgICAgcGF0aDogZmlsZVRvVXJsKGZpbGUpLFxuICAgICAgY29udGVudDogcmVwbGFjZUFzc2V0c0xpbmsoXG4gICAgICAgIHJlc3VsdC5yYXdDb250ZW50LFxuICAgICAgICBgJHtzaXRlQ29uZmlnLmJhc2VVcmx9YmxvZ2AsXG4gICAgICApLFxuICAgIH0sXG4gICAgcmVzdWx0Lm1ldGFkYXRhLFxuICApO1xuICBtZXRhZGF0YS5pZCA9IG1ldGFkYXRhLnRpdGxlO1xuICByZXR1cm4gbWV0YWRhdGE7XG59XG5cbmZ1bmN0aW9uIGdldFBvc3RNYXJrdXAoZmlsZSwgc2l0ZUNvbmZpZykge1xuICBjb25zdCBtZXRhZGF0YSA9IGdldE1ldGFkYXRhKGZpbGUsIHNpdGVDb25maWcpO1xuICBpZiAoIW1ldGFkYXRhKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgQmxvZ1Bvc3RMYXlvdXQgPSByZXF1aXJlKCcuLi9jb3JlL0Jsb2dQb3N0TGF5b3V0LmpzJyk7XG4gIGNvbnN0IGJsb2dQb3N0Q29tcCA9IChcbiAgICA8QmxvZ1Bvc3RMYXlvdXQgbWV0YWRhdGE9e21ldGFkYXRhfSBsYW5ndWFnZT1cImVuXCIgY29uZmlnPXtzaXRlQ29uZmlnfT5cbiAgICAgIHttZXRhZGF0YS5jb250ZW50fVxuICAgIDwvQmxvZ1Bvc3RMYXlvdXQ+XG4gICk7XG4gIHJldHVybiByZW5kZXJUb1N0YXRpY01hcmt1cFdpdGhEb2N0eXBlKGJsb2dQb3N0Q29tcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBmaWxlVG9VcmwsXG4gIGdldE1ldGFkYXRhLFxuICBnZXRQYWdlc01hcmt1cCxcbiAgZ2V0UG9zdE1hcmt1cCxcbiAgdXJsVG9Tb3VyY2UsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "blog.js"
      ],
      "names": [
        "React",
        "require",
        "path",
        "fs",
        "metadataUtils",
        "replaceAssetsLink",
        "renderToStaticMarkupWithDoctype",
        "urlToSource",
        "url",
        "replace",
        "fileToUrl",
        "file",
        "existsSync",
        "basename",
        "getPagesMarkup",
        "numOfBlog",
        "siteConfig",
        "BlogPageLayout",
        "blogPages",
        "perPage",
        "page",
        "Math",
        "ceil",
        "metadata",
        "blogPageComp",
        "str",
        "pagePath",
        "getMetadata",
        "result",
        "extractMetadata",
        "readFileSync",
        "encoding",
        "Object",
        "assign",
        "content",
        "rawContent",
        "baseUrl",
        "id",
        "title",
        "getPostMarkup",
        "BlogPostLayout",
        "blogPostComp",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst metadataUtils = require('./metadataUtils');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n  return path\n    .basename(file)\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  const BlogPageLayout = require('../core/BlogPageLayout.js');\n  const blogPages = {};\n  const perPage = 10;\n  for (let page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    const metadata = {page, perPage};\n    const blogPageComp = (\n      <BlogPageLayout metadata={metadata} language=\"en\" config={siteConfig} />\n    );\n    const str = renderToStaticMarkupWithDoctype(blogPageComp);\n    const pagePath = `${page > 0 ? `page${page + 1}` : ''}/index.html`;\n    blogPages[pagePath] = str;\n  }\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n  const result = metadataUtils.extractMetadata(\n    fs.readFileSync(file, {encoding: 'utf8'}),\n  );\n  const metadata = Object.assign(\n    {\n      path: fileToUrl(file),\n      content: replaceAssetsLink(\n        result.rawContent,\n        `${siteConfig.baseUrl}blog`,\n      ),\n    },\n    result.metadata,\n  );\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  const metadata = getMetadata(file, siteConfig);\n  if (!metadata) {\n    return null;\n  }\n  const BlogPostLayout = require('../core/BlogPostLayout.js');\n  const blogPostComp = (\n    <BlogPostLayout metadata={metadata} language=\"en\" config={siteConfig}>\n      {metadata.content}\n    </BlogPostLayout>\n  );\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl,\n  getMetadata,\n  getPagesMarkup,\n  getPostMarkup,\n  urlToSource,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\utils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\utils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar cssnano = require('cssnano');\n\nvar autoprefixer = require('autoprefixer');\n\nvar postcss = require('postcss');\n\nvar path = require('path');\n\nvar escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  var subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  var separator = escapeStringRegexp(path.sep);\n  var baseDir = escapeStringRegexp(path.basename(refDir));\n  var regexSubFolder = new RegExp(\"\".concat(baseDir).concat(separator, \"(.*?)\").concat(separator, \".*\"));\n  var match = regexSubFolder.exec(file); // Avoid misinterpreting subdirectory as language\n\n  var env = require('./env.js');\n\n  if (match && env.translation.enabled) {\n    var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n      return language.tag;\n    });\n\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n\n  for (var i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano.process(cssContent, {\n    preset: 'default',\n    zindex: false,\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer]).process(cssContent, {\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  var fencedBlock = false;\n  var lines = oldContent.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    return fencedBlock ? line : line.replace(/\\]\\(assets\\//g, \"](\".concat(location, \"/assets/\"));\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir: getSubDir,\n  getLanguage: getLanguage,\n  isSeparateCss: isSeparateCss,\n  minifyCss: minifyCss,\n  autoPrefixCss: autoPrefixCss,\n  replaceAssetsLink: replaceAssetsLink\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNzc25hbm8iLCJyZXF1aXJlIiwiYXV0b3ByZWZpeGVyIiwicG9zdGNzcyIsInBhdGgiLCJlc2NhcGVTdHJpbmdSZWdleHAiLCJnZXRTdWJEaXIiLCJmaWxlIiwicmVmRGlyIiwic3ViRGlyIiwiZGlybmFtZSIsInJlbGF0aXZlIiwicmVwbGFjZSIsImluY2x1ZGVzIiwiZ2V0TGFuZ3VhZ2UiLCJzZXBhcmF0b3IiLCJzZXAiLCJiYXNlRGlyIiwiYmFzZW5hbWUiLCJyZWdleFN1YkZvbGRlciIsIlJlZ0V4cCIsIm1hdGNoIiwiZXhlYyIsImVudiIsInRyYW5zbGF0aW9uIiwiZW5hYmxlZCIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJsYW5ndWFnZSIsInRhZyIsImluZGV4T2YiLCJpc1NlcGFyYXRlQ3NzIiwic2VwYXJhdGVEaXJzIiwiaSIsImxlbmd0aCIsIm1pbmlmeUNzcyIsImNzc0NvbnRlbnQiLCJwcm9jZXNzIiwicHJlc2V0IiwiemluZGV4IiwiZnJvbSIsInVuZGVmaW5lZCIsInRoZW4iLCJyZXN1bHQiLCJjc3MiLCJhdXRvUHJlZml4Q3NzIiwicmVwbGFjZUFzc2V0c0xpbmsiLCJvbGRDb250ZW50IiwibG9jYXRpb24iLCJmZW5jZWRCbG9jayIsImxpbmVzIiwic3BsaXQiLCJsaW5lIiwidHJpbSIsInN0YXJ0c1dpdGgiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBTUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTVCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSSxrQkFBa0IsR0FBR0osT0FBTyxDQUFDLHNCQUFELENBQWxD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QUF2QyxFQUFpRDtBQUMvQyxNQUFJQyxXQUFXLEdBQUcsS0FBbEI7QUFDQSxNQUFNQyxLQUFLLEdBQUdILFVBQVUsQ0FBQ0ksS0FBWCxDQUFpQixJQUFqQixFQUF1QnhCLEdBQXZCLENBQTJCLFVBQUN5QixJQUFELEVBQVU7QUFDakQsUUFBSUEsSUFBSSxDQUFDQyxJQUFMLEdBQVlDLFVBQVosQ0FBdUIsS0FBdkIsQ0FBSixFQUFtQztBQUNqQ0wsTUFBQUEsV0FBVyxHQUFHLENBQUNBLFdBQWY7QUFDRDs7QUFDRCxXQUFPQSxXQUFXLEdBQ2RHLElBRGMsR0FFZEEsSUFBSSxDQUFDeEMsT0FBTCxDQUFhLGVBQWIsY0FBbUNvQyxRQUFuQyxjQUZKO0FBR0QsR0FQYSxDQUFkO0FBUUEsU0FBT0UsS0FBSyxDQUFDSyxJQUFOLENBQVcsSUFBWCxDQUFQO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmbkQsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZRLEVBQUFBLFdBQVcsRUFBWEEsV0FGZTtBQUdmaUIsRUFBQUEsYUFBYSxFQUFiQSxhQUhlO0FBSWZJLEVBQUFBLFNBQVMsRUFBVEEsU0FKZTtBQUtmVSxFQUFBQSxhQUFhLEVBQWJBLGFBTGU7QUFNZkMsRUFBQUEsaUJBQWlCLEVBQWpCQTtBQU5lLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXERlc2t0b3BcXEJsb2dcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxzZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmNvbnN0IGNzc25hbm8gPSByZXF1aXJlKCdjc3NuYW5vJyk7XG5jb25zdCBhdXRvcHJlZml4ZXIgPSByZXF1aXJlKCdhdXRvcHJlZml4ZXInKTtcbmNvbnN0IHBvc3Rjc3MgPSByZXF1aXJlKCdwb3N0Y3NzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgZXNjYXBlU3RyaW5nUmVnZXhwID0gcmVxdWlyZSgnZXNjYXBlLXN0cmluZy1yZWdleHAnKTtcblxuZnVuY3Rpb24gZ2V0U3ViRGlyKGZpbGUsIHJlZkRpcikge1xuICBjb25zdCBzdWJEaXIgPSBwYXRoLmRpcm5hbWUocGF0aC5yZWxhdGl2ZShyZWZEaXIsIGZpbGUpKS5yZXBsYWNlKC9cXFxcL2csICcvJyk7XG4gIHJldHVybiBzdWJEaXIgIT09ICcuJyAmJiAhc3ViRGlyLmluY2x1ZGVzKCcuLicpID8gc3ViRGlyIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gZ2V0TGFuZ3VhZ2UoZmlsZSwgcmVmRGlyKSB7XG4gIGNvbnN0IHNlcGFyYXRvciA9IGVzY2FwZVN0cmluZ1JlZ2V4cChwYXRoLnNlcCk7XG4gIGNvbnN0IGJhc2VEaXIgPSBlc2NhcGVTdHJpbmdSZWdleHAocGF0aC5iYXNlbmFtZShyZWZEaXIpKTtcbiAgY29uc3QgcmVnZXhTdWJGb2xkZXIgPSBuZXcgUmVnRXhwKFxuICAgIGAke2Jhc2VEaXJ9JHtzZXBhcmF0b3J9KC4qPykke3NlcGFyYXRvcn0uKmAsXG4gICk7XG4gIGNvbnN0IG1hdGNoID0gcmVnZXhTdWJGb2xkZXIuZXhlYyhmaWxlKTtcblxuICAvLyBBdm9pZCBtaXNpbnRlcnByZXRpbmcgc3ViZGlyZWN0b3J5IGFzIGxhbmd1YWdlXG4gIGNvbnN0IGVudiA9IHJlcXVpcmUoJy4vZW52LmpzJyk7XG4gIGlmIChtYXRjaCAmJiBlbnYudHJhbnNsYXRpb24uZW5hYmxlZCkge1xuICAgIGNvbnN0IGVuYWJsZWRMYW5ndWFnZXMgPSBlbnYudHJhbnNsYXRpb25cbiAgICAgIC5lbmFibGVkTGFuZ3VhZ2VzKClcbiAgICAgIC5tYXAoKGxhbmd1YWdlKSA9PiBsYW5ndWFnZS50YWcpO1xuICAgIGlmIChlbmFibGVkTGFuZ3VhZ2VzLmluZGV4T2YobWF0Y2hbMV0pICE9PSAtMSkge1xuICAgICAgcmV0dXJuIG1hdGNoWzFdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNTZXBhcmF0ZUNzcyhmaWxlLCBzZXBhcmF0ZURpcnMpIHtcbiAgaWYgKCFzZXBhcmF0ZURpcnMpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZXBhcmF0ZURpcnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZmlsZS5pbmNsdWRlcyhzZXBhcmF0ZURpcnNbaV0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBtaW5pZnlDc3MoY3NzQ29udGVudCkge1xuICByZXR1cm4gY3NzbmFub1xuICAgIC5wcm9jZXNzKGNzc0NvbnRlbnQsIHtcbiAgICAgIHByZXNldDogJ2RlZmF1bHQnLFxuICAgICAgemluZGV4OiBmYWxzZSxcbiAgICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICB9KVxuICAgIC50aGVuKChyZXN1bHQpID0+IHJlc3VsdC5jc3MpO1xufVxuXG5mdW5jdGlvbiBhdXRvUHJlZml4Q3NzKGNzc0NvbnRlbnQpIHtcbiAgcmV0dXJuIHBvc3Rjc3MoW2F1dG9wcmVmaXhlcl0pXG4gICAgLnByb2Nlc3MoY3NzQ29udGVudCwge1xuICAgICAgZnJvbTogdW5kZWZpbmVkLFxuICAgIH0pXG4gICAgLnRoZW4oKHJlc3VsdCkgPT4gcmVzdWx0LmNzcyk7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VBc3NldHNMaW5rKG9sZENvbnRlbnQsIGxvY2F0aW9uKSB7XG4gIGxldCBmZW5jZWRCbG9jayA9IGZhbHNlO1xuICBjb25zdCBsaW5lcyA9IG9sZENvbnRlbnQuc3BsaXQoJ1xcbicpLm1hcCgobGluZSkgPT4ge1xuICAgIGlmIChsaW5lLnRyaW0oKS5zdGFydHNXaXRoKCdgYGAnKSkge1xuICAgICAgZmVuY2VkQmxvY2sgPSAhZmVuY2VkQmxvY2s7XG4gICAgfVxuICAgIHJldHVybiBmZW5jZWRCbG9ja1xuICAgICAgPyBsaW5lXG4gICAgICA6IGxpbmUucmVwbGFjZSgvXFxdXFwoYXNzZXRzXFwvL2csIGBdKCR7bG9jYXRpb259L2Fzc2V0cy9gKTtcbiAgfSk7XG4gIHJldHVybiBsaW5lcy5qb2luKCdcXG4nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldFN1YkRpcixcbiAgZ2V0TGFuZ3VhZ2UsXG4gIGlzU2VwYXJhdGVDc3MsXG4gIG1pbmlmeUNzcyxcbiAgYXV0b1ByZWZpeENzcyxcbiAgcmVwbGFjZUFzc2V0c0xpbmssXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "cssnano",
        "require",
        "autoprefixer",
        "postcss",
        "path",
        "escapeStringRegexp",
        "getSubDir",
        "file",
        "refDir",
        "subDir",
        "dirname",
        "relative",
        "replace",
        "includes",
        "getLanguage",
        "separator",
        "sep",
        "baseDir",
        "basename",
        "regexSubFolder",
        "RegExp",
        "match",
        "exec",
        "env",
        "translation",
        "enabled",
        "enabledLanguages",
        "map",
        "language",
        "tag",
        "indexOf",
        "isSeparateCss",
        "separateDirs",
        "i",
        "length",
        "minifyCss",
        "cssContent",
        "process",
        "preset",
        "zindex",
        "from",
        "undefined",
        "then",
        "result",
        "css",
        "autoPrefixCss",
        "replaceAssetsLink",
        "oldContent",
        "location",
        "fencedBlock",
        "lines",
        "split",
        "line",
        "trim",
        "startsWith",
        "join",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst cssnano = require('cssnano');\nconst autoprefixer = require('autoprefixer');\nconst postcss = require('postcss');\nconst path = require('path');\nconst escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  const subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  const separator = escapeStringRegexp(path.sep);\n  const baseDir = escapeStringRegexp(path.basename(refDir));\n  const regexSubFolder = new RegExp(\n    `${baseDir}${separator}(.*?)${separator}.*`,\n  );\n  const match = regexSubFolder.exec(file);\n\n  // Avoid misinterpreting subdirectory as language\n  const env = require('./env.js');\n  if (match && env.translation.enabled) {\n    const enabledLanguages = env.translation\n      .enabledLanguages()\n      .map((language) => language.tag);\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n  for (let i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano\n    .process(cssContent, {\n      preset: 'default',\n      zindex: false,\n      from: undefined,\n    })\n    .then((result) => result.css);\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer])\n    .process(cssContent, {\n      from: undefined,\n    })\n    .then((result) => result.css);\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  let fencedBlock = false;\n  const lines = oldContent.split('\\n').map((line) => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    return fencedBlock\n      ? line\n      : line.replace(/\\]\\(assets\\//g, `](${location}/assets/`);\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir,\n  getLanguage,\n  isSeparateCss,\n  minifyCss,\n  autoPrefixCss,\n  replaceAssetsLink,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\renderUtils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\renderUtils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\renderUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\renderUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "renderUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\n\n\nfunction renderToStaticMarkupWithDoctype() {\n  return \"<!DOCTYPE html>\".concat(renderToStaticMarkup.apply(void 0, arguments));\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype: renderToStaticMarkupWithDoctype\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbmRlclV0aWxzLmpzIl0sIm5hbWVzIjpbInJlbmRlclRvU3RhdGljTWFya3VwIiwicmVxdWlyZSIsInJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxvQkFBb0IsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQVAsQ0FBNEJELG9CQUF6RDtBQUVBOzs7Ozs7O0FBS0EsU0FBU0UsK0JBQVQsR0FBa0Q7QUFDaEQsa0NBQXlCRixvQkFBb0IsTUFBcEIsbUJBQXpCO0FBQ0Q7O0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmRixFQUFBQSwrQkFBK0IsRUFBL0JBO0FBRGUsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcRGVza3RvcFxcQmxvZ1xcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCByZW5kZXJUb1N0YXRpY01hcmt1cCA9IHJlcXVpcmUoJ3JlYWN0LWRvbS9zZXJ2ZXInKS5yZW5kZXJUb1N0YXRpY01hcmt1cDtcblxuLyoqXG4gKiBDdXN0b20gZnVuY3Rpb24gdGhhdCB3cmFwcyByZW5kZXJUb1N0YXRpY01hcmt1cCBzbyB0aGF0IHdlIGNhbiBpbmplY3RcbiAqIGRvY3R5cGUgYmVmb3JlIFJlYWN0IHJlbmRlcnMgdGhlIGNvbnRlbnRzLiBBbGwgaW5zdGFuY2Ugb2YgZnVsbC1wYWdlXG4gKiByZW5kZXJpbmcgd2l0aGluIERvY3VzYXVydXMgc2hvdWxkIHVzZSB0aGlzIGZ1bmN0aW9uIGluc3RlYWQuXG4gKi9cbmZ1bmN0aW9uIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoLi4uYXJncykge1xuICByZXR1cm4gYDwhRE9DVFlQRSBodG1sPiR7cmVuZGVyVG9TdGF0aWNNYXJrdXAoLi4uYXJncyl9YDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "renderUtils.js"
      ],
      "names": [
        "renderToStaticMarkup",
        "require",
        "renderToStaticMarkupWithDoctype",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BD,oBAAzD;AAEA;;;;;;;AAKA,SAASE,+BAAT,GAAkD;AAChD,kCAAyBF,oBAAoB,MAApB,mBAAzB;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA,+BAA+B,EAA/BA;AADe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\nfunction renderToStaticMarkupWithDoctype(...args) {\n  return `<!DOCTYPE html>${renderToStaticMarkup(...args)}`;\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\config.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\config.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath) {\n  var deleteCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n\n  var config = {};\n\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n  /* Fill default value */\n\n\n  var defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs'\n  };\n  Object.keys(defaultConfig).forEach(function (field) {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n  return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9hZENvbmZpZyIsImNvbmZpZ1BhdGgiLCJkZWxldGVDYWNoZSIsImNhY2hlIiwiY29uZmlnIiwiZXhpc3RzU3luYyIsImRlZmF1bHRDb25maWciLCJjdXN0b21Eb2NzUGF0aCIsImRvY3NVcmwiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImZpZWxkIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsVUFBVCxDQUFvQkMsVUFBcEIsRUFBb0Q7QUFBQSxNQUFwQkMsV0FBb0IsdUVBQU4sSUFBTTs7QUFDbkUsTUFBSUEsV0FBSixFQUFpQjtBQUNmLFdBQU9MLE9BQU8sQ0FBQ00sS0FBUixDQUFjRixVQUFkLENBQVA7QUFDRDs7QUFDRCxNQUFJRyxNQUFNLEdBQUcsRUFBYjs7QUFDQSxNQUFJUixFQUFFLENBQUNTLFVBQUgsQ0FBY0osVUFBZCxDQUFKLEVBQStCO0FBQzdCRyxJQUFBQSxNQUFNLEdBQUdQLE9BQU8sQ0FBQ0ksVUFBRCxDQUFoQixDQUQ2QixDQUNDO0FBQy9CO0FBRUQ7OztBQUNBLE1BQU1LLGFBQWEsR0FBRztBQUNwQkMsSUFBQUEsY0FBYyxFQUFFLE1BREk7QUFFcEJDLElBQUFBLE9BQU8sRUFBRTtBQUZXLEdBQXRCO0FBSUFDLEVBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixhQUFaLEVBQTJCSyxPQUEzQixDQUFtQyxVQUFDQyxLQUFELEVBQVc7QUFDNUMsUUFBSSxFQUFFQSxLQUFLLElBQUlSLE1BQVgsQ0FBSixFQUF3QjtBQUN0QkEsTUFBQUEsTUFBTSxDQUFDUSxLQUFELENBQU4sR0FBZ0JOLGFBQWEsQ0FBQ00sS0FBRCxDQUE3QjtBQUNEO0FBQ0YsR0FKRDtBQU1BLFNBQU9SLE1BQVA7QUFDRCxDQXJCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsb2FkQ29uZmlnKGNvbmZpZ1BhdGgsIGRlbGV0ZUNhY2hlID0gdHJ1ZSkge1xuICBpZiAoZGVsZXRlQ2FjaGUpIHtcbiAgICBkZWxldGUgcmVxdWlyZS5jYWNoZVtjb25maWdQYXRoXTtcbiAgfVxuICBsZXQgY29uZmlnID0ge307XG4gIGlmIChmcy5leGlzdHNTeW5jKGNvbmZpZ1BhdGgpKSB7XG4gICAgY29uZmlnID0gcmVxdWlyZShjb25maWdQYXRoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICB9XG5cbiAgLyogRmlsbCBkZWZhdWx0IHZhbHVlICovXG4gIGNvbnN0IGRlZmF1bHRDb25maWcgPSB7XG4gICAgY3VzdG9tRG9jc1BhdGg6ICdkb2NzJyxcbiAgICBkb2NzVXJsOiAnZG9jcycsXG4gIH07XG4gIE9iamVjdC5rZXlzKGRlZmF1bHRDb25maWcpLmZvckVhY2goKGZpZWxkKSA9PiB7XG4gICAgaWYgKCEoZmllbGQgaW4gY29uZmlnKSkge1xuICAgICAgY29uZmlnW2ZpZWxkXSA9IGRlZmF1bHRDb25maWdbZmllbGRdO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "loadConfig",
        "configPath",
        "deleteCache",
        "cache",
        "config",
        "existsSync",
        "defaultConfig",
        "customDocsPath",
        "docsUrl",
        "Object",
        "keys",
        "forEach",
        "field"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,UAApB,EAAoD;AAAA,MAApBC,WAAoB,uEAAN,IAAM;;AACnE,MAAIA,WAAJ,EAAiB;AACf,WAAOL,OAAO,CAACM,KAAR,CAAcF,UAAd,CAAP;AACD;;AACD,MAAIG,MAAM,GAAG,EAAb;;AACA,MAAIR,EAAE,CAACS,UAAH,CAAcJ,UAAd,CAAJ,EAA+B;AAC7BG,IAAAA,MAAM,GAAGP,OAAO,CAACI,UAAD,CAAhB,CAD6B,CACC;AAC/B;AAED;;;AACA,MAAMK,aAAa,GAAG;AACpBC,IAAAA,cAAc,EAAE,MADI;AAEpBC,IAAAA,OAAO,EAAE;AAFW,GAAtB;AAIAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC,UAACC,KAAD,EAAW;AAC5C,QAAI,EAAEA,KAAK,IAAIR,MAAX,CAAJ,EAAwB;AACtBA,MAAAA,MAAM,CAACQ,KAAD,CAAN,GAAgBN,aAAa,CAACM,KAAD,CAA7B;AACD;AACF,GAJD;AAMA,SAAOR,MAAP;AACD,CArBD",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath, deleteCache = true) {\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n  let config = {};\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n\n  /* Fill default value */\n  const defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs',\n  };\n  Object.keys(defaultConfig).forEach((field) => {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n\n  return config;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\versionFallback.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\versionFallback.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\versionFallback.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\versionFallback.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "versionFallback.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar glob = require('glob');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar utils = require('./utils.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\nvar ENABLE_TRANSLATION = fs.existsSync(\"\".concat(CWD, \"/languages.js\"));\nvar versions;\n\nif (fs.existsSync(\"\".concat(CWD, \"/versions.json\"))) {\n  versions = require(\"\".concat(CWD, \"/versions.json\"));\n} else {\n  versions = [];\n}\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar versionFolder = \"\".concat(CWD, \"/versioned_docs/\"); // available stores doc ids of documents that are available for\n// each version\n\nvar available = {}; // versionFiles is used to keep track of what file to use with a\n// given version/id of a document\n\nvar versionFiles = {};\nvar files = glob.sync(\"\".concat(versionFolder, \"**\"));\nfiles.forEach(function (file) {\n  var ext = path.extname(file);\n\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n\n  var res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  }\n\n  if (!metadata.id) {\n    console.error(\"No 'id' field found in \".concat(file, \".\"));\n    throw new Error(\"No 'id' field found in \".concat(file, \".\"));\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  } // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n\n\n  var version = metadata.id.substring(metadata.id.indexOf('version-') + 8, // version- is 8 characters\n  metadata.id.lastIndexOf(\"-\".concat(metadata.original_id))); // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n\n  var subDir = utils.getSubDir(file, path.join(versionFolder, \"version-\".concat(version)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n\n  versionFiles[version][metadata.original_id] = file;\n}); // returns the version to use for a document based on its id and\n// what the requested version is\n\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  } // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n\n\n  var requestedFound = false;\n  var availableVersion = null;\n  var deletedDocs = null;\n\n  if (siteConfig.deletedDocs) {\n    // Config file may have either Array or Set for each version. Convert\n    // all to Set to make the check faster in the versions loop below.\n    deletedDocs = {};\n    Object.keys(siteConfig.deletedDocs).forEach(function (deletedDocVersion) {\n      deletedDocs[deletedDocVersion] = new Set(siteConfig.deletedDocs[deletedDocVersion]);\n    });\n  }\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound) {\n      // If this ID is deleted as of any version equal to or prior to\n      // the requested, return null.\n      if (deletedDocs && deletedDocs[versions[i]] && deletedDocs[versions[i]].has(id)) {\n        return null;\n      }\n\n      if (!availableVersion && available[id].has(versions[i])) {\n        availableVersion = versions[i]; // Note the fallback version but keep looping in case this ID\n        // was deleted as of a previous version.\n        //\n        // If `deletedDocs` config isn't used, we can return immediately\n        // and avoid unnecessary looping.\n\n        if (!deletedDocs) {\n          break;\n        }\n      }\n    }\n  }\n\n  return availableVersion;\n} // returns whether a given file has content that differ from the\n// document with the given id\n\n\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version;\n\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  if (!version) {\n    return true;\n  }\n\n  var latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return metadataUtils.extractMetadata(fs.readFileSync(latestFile, 'utf8')).rawContent.trim() !== metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).rawContent.trim();\n} // return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\n\n\nfunction processVersionMetadata(file, version, useVersion, language) {\n  var metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).metadata; // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n\n  var subDir = utils.getSubDir(file, path.join(CWD, 'versioned_docs', \"version-\".concat(useVersion)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n    metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(useVersion, \"-\").concat(subDir, \"/\"));\n  }\n\n  metadata.source = subDir ? \"version-\".concat(useVersion, \"/\").concat(subDir, \"/\").concat(path.basename(file)) : \"version-\".concat(useVersion, \"/\").concat(path.basename(file));\n  var latestVersion = versions[0];\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n  var versionPart = \"\".concat(version !== latestVersion ? \"\".concat(version, \"/\") : '');\n\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = \"\".concat(docsPart).concat(versionPart).concat(metadata.original_id, \".html\");\n  } else {\n    metadata.permalink = \"\".concat(docsPart).concat(language, \"/\").concat(versionPart).concat(metadata.original_id, \".html\");\n  }\n\n  metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(version, \"-\"));\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n  return metadata;\n} // return all metadata of versioned documents\n\n\nfunction docData() {\n  var allIds = new Set();\n  Object.keys(versionFiles).forEach(function (version) {\n    Object.keys(versionFiles[version]).forEach(function (id) {\n      allIds.add(id);\n    });\n  });\n  var metadatas = [];\n  languages.filter(function (language) {\n    return language.enabled;\n  }).forEach(function (language) {\n    versions.forEach(function (version) {\n      allIds.forEach(function (id) {\n        var useVersion;\n\n        try {\n          useVersion = docVersion(id, version);\n        } catch (e) {\n          console.log(e);\n          process.exit(1);\n        }\n\n        if (!useVersion) {\n          return;\n        }\n\n        var file = versionFiles[useVersion][id];\n        metadatas.push(processVersionMetadata(file, version, useVersion, language.tag));\n      });\n    });\n  });\n  return metadatas;\n} // return the version of the sidebar to use given a requested version\n\n\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && fs.existsSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(versions[i], \"-sidebars.json\"))) {\n      return versions[i];\n    }\n  }\n\n  throw new Error(\"No sidebar file available to use for version \".concat(reqVersion, \". Verify that 'version-\").concat(reqVersion, \"-sidebars.json' exists.\"));\n} // return whether or not the current sidebars.json file differs from the\n// latest versioned one\n\n\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version = sidebarVersion(latest);\n  var latestSidebar = \"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\");\n\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n\n  var currentSidebar = \"\".concat(CWD, \"/sidebars.json\"); // if no current sidebar file, return false so no sidebar file gets copied\n\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  } // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n\n\n  return JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), '') !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')));\n} // return all versioned sidebar data\n\n\nfunction sidebarData() {\n  var allSidebars = {};\n\n  for (var i = 0; i < versions.length; i++) {\n    var version = sidebarVersion(versions[i]);\n    var sidebar = JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\"), 'utf8').replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), \"version-\".concat(versions[i], \"-\")));\n    Object.assign(allSidebars, sidebar);\n  }\n\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion: docVersion,\n  diffLatestDoc: diffLatestDoc,\n  processVersionMetadata: processVersionMetadata,\n  docData: docData,\n  sidebarVersion: sidebarVersion,\n  diffLatestSidebar: diffLatestSidebar,\n  sidebarData: sidebarData\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "versionFallback.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "glob",
        "require",
        "fs",
        "path",
        "metadataUtils",
        "env",
        "utils",
        "loadConfig",
        "siteConfig",
        "ENABLE_TRANSLATION",
        "existsSync",
        "versions",
        "languages",
        "enabled",
        "name",
        "tag",
        "versionFolder",
        "available",
        "versionFiles",
        "files",
        "sync",
        "forEach",
        "file",
        "ext",
        "extname",
        "res",
        "extractMetadata",
        "readFileSync",
        "metadata",
        "original_id",
        "console",
        "error",
        "Error",
        "id",
        "indexOf",
        "version",
        "substring",
        "lastIndexOf",
        "subDir",
        "getSubDir",
        "join",
        "Set",
        "add",
        "docVersion",
        "reqVersion",
        "requestedFound",
        "availableVersion",
        "deletedDocs",
        "Object",
        "keys",
        "deletedDocVersion",
        "i",
        "length",
        "has",
        "diffLatestDoc",
        "latest",
        "e",
        "exit",
        "latestFile",
        "rawContent",
        "trim",
        "processVersionMetadata",
        "useVersion",
        "language",
        "replace",
        "source",
        "basename",
        "latestVersion",
        "docsPart",
        "docsUrl",
        "versionPart",
        "useEnglishUrl",
        "permalink",
        "localized_id",
        "translation",
        "docData",
        "allIds",
        "metadatas",
        "filter",
        "log",
        "push",
        "sidebarVersion",
        "diffLatestSidebar",
        "latestSidebar",
        "currentSidebar",
        "JSON",
        "stringify",
        "parse",
        "RegExp",
        "sidebarData",
        "allSidebars",
        "sidebar",
        "assign",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst utils = require('./utils.js');\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst ENABLE_TRANSLATION = fs.existsSync(`${CWD}/languages.js`);\n\nlet versions;\nif (fs.existsSync(`${CWD}/versions.json`)) {\n  versions = require(`${CWD}/versions.json`);\n} else {\n  versions = [];\n}\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst versionFolder = `${CWD}/versioned_docs/`;\n\n// available stores doc ids of documents that are available for\n// each version\nconst available = {};\n// versionFiles is used to keep track of what file to use with a\n// given version/id of a document\nconst versionFiles = {};\nconst files = glob.sync(`${versionFolder}**`);\nfiles.forEach((file) => {\n  const ext = path.extname(file);\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n  const res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n  if (!metadata.id) {\n    console.error(`No 'id' field found in ${file}.`);\n    throw new Error(`No 'id' field found in ${file}.`);\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n\n  // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n  const version = metadata.id.substring(\n    metadata.id.indexOf('version-') + 8, // version- is 8 characters\n    metadata.id.lastIndexOf(`-${metadata.original_id}`),\n  );\n\n  // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n  const subDir = utils.getSubDir(\n    file,\n    path.join(versionFolder, `version-${version}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n  versionFiles[version][metadata.original_id] = file;\n});\n\n// returns the version to use for a document based on its id and\n// what the requested version is\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  }\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  let availableVersion = null;\n  let deletedDocs = null;\n  if (siteConfig.deletedDocs) {\n    // Config file may have either Array or Set for each version. Convert\n    // all to Set to make the check faster in the versions loop below.\n    deletedDocs = {};\n    Object.keys(siteConfig.deletedDocs).forEach((deletedDocVersion) => {\n      deletedDocs[deletedDocVersion] = new Set(\n        siteConfig.deletedDocs[deletedDocVersion],\n      );\n    });\n  }\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (requestedFound) {\n      // If this ID is deleted as of any version equal to or prior to\n      // the requested, return null.\n      if (\n        deletedDocs &&\n        deletedDocs[versions[i]] &&\n        deletedDocs[versions[i]].has(id)\n      ) {\n        return null;\n      }\n      if (!availableVersion && available[id].has(versions[i])) {\n        availableVersion = versions[i];\n        // Note the fallback version but keep looping in case this ID\n        // was deleted as of a previous version.\n        //\n        // If `deletedDocs` config isn't used, we can return immediately\n        // and avoid unnecessary looping.\n        if (!deletedDocs) {\n          break;\n        }\n      }\n    }\n  }\n  return availableVersion;\n}\n\n// returns whether a given file has content that differ from the\n// document with the given id\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  const latest = versions[0];\n\n  let version;\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n  if (!version) {\n    return true;\n  }\n  const latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return (\n    metadataUtils\n      .extractMetadata(fs.readFileSync(latestFile, 'utf8'))\n      .rawContent.trim() !==\n    metadataUtils\n      .extractMetadata(fs.readFileSync(file, 'utf8'))\n      .rawContent.trim()\n  );\n}\n\n// return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\nfunction processVersionMetadata(file, version, useVersion, language) {\n  const metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'))\n    .metadata;\n\n  // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n  const subDir = utils.getSubDir(\n    file,\n    path.join(CWD, 'versioned_docs', `version-${useVersion}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n    metadata.id = metadata.id.replace(\n      `version-${useVersion}-`,\n      `version-${useVersion}-${subDir}/`,\n    );\n  }\n\n  metadata.source = subDir\n    ? `version-${useVersion}/${subDir}/${path.basename(file)}`\n    : `version-${useVersion}/${path.basename(file)}`;\n\n  const latestVersion = versions[0];\n\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  const versionPart = `${version !== latestVersion ? `${version}/` : ''}`;\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = `${docsPart}${versionPart}${metadata.original_id}.html`;\n  } else {\n    metadata.permalink = `${docsPart}${language}/${versionPart}${metadata.original_id}.html`;\n  }\n  metadata.id = metadata.id.replace(\n    `version-${useVersion}-`,\n    `version-${version}-`,\n  );\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n\n  return metadata;\n}\n\n// return all metadata of versioned documents\nfunction docData() {\n  const allIds = new Set();\n  Object.keys(versionFiles).forEach((version) => {\n    Object.keys(versionFiles[version]).forEach((id) => {\n      allIds.add(id);\n    });\n  });\n\n  const metadatas = [];\n\n  languages\n    .filter((language) => language.enabled)\n    .forEach((language) => {\n      versions.forEach((version) => {\n        allIds.forEach((id) => {\n          let useVersion;\n          try {\n            useVersion = docVersion(id, version);\n          } catch (e) {\n            console.log(e);\n            process.exit(1);\n          }\n          if (!useVersion) {\n            return;\n          }\n          const file = versionFiles[useVersion][id];\n\n          metadatas.push(\n            processVersionMetadata(file, version, useVersion, language.tag),\n          );\n        });\n      });\n    });\n\n  return metadatas;\n}\n\n// return the version of the sidebar to use given a requested version\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (\n      requestedFound &&\n      fs.existsSync(\n        `${CWD}/versioned_sidebars/version-${versions[i]}-sidebars.json`,\n      )\n    ) {\n      return versions[i];\n    }\n  }\n  throw new Error(\n    `No sidebar file available to use for version ${reqVersion}. Verify that 'version-${reqVersion}-sidebars.json' exists.`,\n  );\n}\n\n// return whether or not the current sidebars.json file differs from the\n// latest versioned one\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n  const latest = versions[0];\n\n  const version = sidebarVersion(latest);\n  const latestSidebar = `${CWD}/versioned_sidebars/version-${version}-sidebars.json`;\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n  const currentSidebar = `${CWD}/sidebars.json`;\n  // if no current sidebar file, return false so no sidebar file gets copied\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  }\n\n  // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n  return (\n    JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(\n      new RegExp(`version-${version}-`, 'g'),\n      '',\n    ) !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')))\n  );\n}\n\n// return all versioned sidebar data\nfunction sidebarData() {\n  const allSidebars = {};\n\n  for (let i = 0; i < versions.length; i++) {\n    const version = sidebarVersion(versions[i]);\n    const sidebar = JSON.parse(\n      fs\n        .readFileSync(\n          `${CWD}/versioned_sidebars/version-${version}-sidebars.json`,\n          'utf8',\n        )\n        .replace(\n          new RegExp(`version-${version}-`, 'g'),\n          `version-${versions[i]}-`,\n        ),\n    );\n    Object.assign(allSidebars, sidebar);\n  }\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion,\n  diffLatestDoc,\n  processVersionMetadata,\n  docData,\n  sidebarVersion,\n  diffLatestSidebar,\n  sidebarData,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\server.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\server.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\nfunction execute(port, host) {\n  var extractTranslations = require('../write-translations');\n\n  var metadataUtils = require('./metadataUtils');\n\n  var blog = require('./blog');\n\n  var docs = require('./docs');\n\n  var env = require('./env.js');\n\n  var express = require('express');\n\n  var React = require('react');\n\n  var request = require('request');\n\n  var fs = require('fs-extra');\n\n  var path = require('path');\n\n  var _require = require('./utils'),\n      isSeparateCss = _require.isSeparateCss;\n\n  var mkdirp = require('mkdirp');\n\n  var glob = require('glob');\n\n  var chalk = require('chalk');\n\n  var translate = require('./translate');\n\n  var _require2 = require('./renderUtils'),\n      renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\n  var feed = require('./feed');\n\n  var sitemap = require('./sitemap');\n\n  var routing = require('./routing');\n\n  var loadConfig = require('./config');\n\n  var CWD = process.cwd();\n  var join = path.join;\n  var sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach(function (cacheKey) {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  } // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n\n\n  function removeModuleAndChildrenFromCache(moduleName) {\n    var mod = require.resolve(moduleName);\n\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach(function (child) {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  var readMetadata = require('./readMetadata.js');\n\n  var Metadata;\n  var MetadataBlog;\n  var siteConfig;\n\n  function reloadSiteConfig() {\n    var siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    var oldBaseUrl = siteConfig && siteConfig.baseUrl;\n    siteConfig = loadConfig(siteConfigPath);\n\n    if (oldBaseUrl && oldBaseUrl !== siteConfig.baseUrl) {\n      console.log('Base url has changed. Please restart server ...');\n      process.exit();\n    }\n  }\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n\n    reloadSiteConfig();\n    readMetadata.generateMetadataBlog(siteConfig);\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadTranslations() {\n    removeModuleAndChildrenFromCache('./translation.js');\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, function (error, response, body) {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n  var app = express();\n  app.get(routing.docs(siteConfig), function (req, res, next) {\n    var url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    var metakey = Object.keys(Metadata).find(function (id) {\n      return Metadata[id].permalink === url;\n    });\n    var metadata = Metadata[metakey];\n    var file = docs.getFile(metadata);\n\n    if (!file) {\n      next();\n      return;\n    }\n\n    var _metadataUtils$extrac = metadataUtils.extractMetadata(file),\n        rawContent = _metadataUtils$extrac.rawContent,\n        rawMetadata = _metadataUtils$extrac.metadata; // if any of the followings is changed, reload the metadata\n\n\n    var reloadTriggers = ['sidebar_label', 'hide_title', 'title'];\n\n    if (reloadTriggers.some(function (key) {\n      return metadata[key] !== rawMetadata[key];\n    })) {\n      reloadMetadata();\n      extractTranslations();\n      reloadTranslations();\n      metadata = Metadata[metakey];\n    }\n\n    reloadSiteConfig();\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    var mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig));\n  });\n  app.get(routing.sitemap(siteConfig), function (req, res) {\n    sitemap(function (err, xml) {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n  app.get(routing.feed(siteConfig), function (req, res, next) {\n    res.set('Content-Type', 'application/rss+xml');\n    var file = req.path.toString().split('blog/')[1].toLowerCase();\n\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n\n    next();\n  });\n  app.get(routing.blog(siteConfig), function (req, res, next) {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    var blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    var urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[\"\".concat(urlPath.replace(/\\/$/, ''), \"/index.html\")]);\n    } else {\n      var file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      var blogPost = blog.getPostMarkup(file, siteConfig);\n\n      if (!blogPost) {\n        next();\n        return;\n      }\n\n      res.send(blogPost);\n    }\n  });\n  app.get(routing.page(siteConfig), function (req, res, next) {\n    reloadSiteConfig(); // Look for user-provided HTML file first.\n\n    var htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n\n    if (fs.existsSync(htmlFile) || fs.existsSync(htmlFile = htmlFile.replace(path.basename(htmlFile), join('en', path.basename(htmlFile))))) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n        var Site = require(join('..', 'core', 'Site.js'));\n\n        var str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Site, {\n          language: \"en\",\n          config: siteConfig,\n          metadata: {\n            id: path.basename(htmlFile, '.html')\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: fs.readFileSync(htmlFile, {\n              encoding: 'utf8'\n            })\n          }\n        })));\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {\n          encoding: 'utf8'\n        }));\n      }\n\n      next();\n      return;\n    } // look for user provided react file either in specified path or in path for english files\n\n\n    var file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    var userFile = join(CWD, 'pages', file);\n    var language = env.translation.enabled ? 'en' : '';\n    var regexLang = /(.*)\\/.*\\.html$/;\n    var match = regexLang.exec(req.path);\n    var parts = match[1].split('/');\n    var enabledLangTags = env.translation.enabledLanguages().map(function (lang) {\n      return lang.tag;\n    });\n\n    for (var i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    var englishFile = join(CWD, 'pages', file);\n\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, \"\".concat(sep, \"en\").concat(sep));\n    } // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n\n\n    if (fs.existsSync(userFile) || fs.existsSync(userFile = userFile.replace(path.basename(userFile), \"en\".concat(sep).concat(path.basename(userFile)))) || fs.existsSync(userFile = englishFile)) {\n      // copy into docusaurus so require paths work\n      var userFileParts = userFile.split(join(CWD, \"pages\".concat(sep)));\n      var tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(path.basename(file), \"temp\".concat(path.basename(file)));\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile); // render into a string\n\n      removeModuleAndChildrenFromCache(tempFile);\n\n      var ReactComp = require(tempFile);\n\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n      var _Site = require(join('..', 'core', 'Site.js'));\n\n      translate.setLanguage(language);\n\n      var _str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(_Site, {\n        language: language,\n        config: siteConfig,\n        title: ReactComp.title,\n        description: ReactComp.description,\n        metadata: {\n          id: path.basename(userFile, '.js')\n        }\n      }, /*#__PURE__*/React.createElement(ReactComp, {\n        config: siteConfig,\n        language: language\n      })));\n\n      fs.removeSync(tempFile);\n      res.send(_str);\n    } else {\n      next();\n    }\n  });\n  app.get(\"\".concat(siteConfig.baseUrl, \"css/main.css\"), function (req, res) {\n    var mainCssPath = join(__dirname, '..', 'static', req.path.toString().replace(siteConfig.baseUrl, '/'));\n    var cssContent = fs.readFileSync(mainCssPath, {\n      encoding: 'utf8'\n    });\n    var files = glob.sync(join(CWD, 'static', '**', '*.css'));\n    files.forEach(function (file) {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n\n      cssContent = \"\".concat(cssContent, \"\\n\").concat(fs.readFileSync(file, {\n        encoding: 'utf8'\n      }));\n    });\n\n    if (!siteConfig.colors || !siteConfig.colors.primaryColor || !siteConfig.colors.secondaryColor) {\n      console.error(\"\".concat(chalk.yellow('Missing color configuration.'), \" Make sure siteConfig.colors includes primaryColor and secondaryColor fields.\"));\n    }\n\n    Object.keys(siteConfig.colors).forEach(function (key) {\n      var color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach(function (key) {\n        var fontString = siteConfig.fonts[key].map(function (font) {\n          return \"\\\"\".concat(font, \"\\\"\");\n        }).join(', ');\n        cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), fontString);\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  }); // serve static assets from these locations\n\n  app.use(\"\".concat(siteConfig.baseUrl).concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '', \"assets\"), express[\"static\"](join(CWD, '..', readMetadata.getDocsPath(), 'assets')));\n  app.use(\"\".concat(siteConfig.baseUrl, \"blog/assets\"), express[\"static\"](join(CWD, 'blog', 'assets')));\n  app.use(siteConfig.baseUrl, express[\"static\"](join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express[\"static\"](join(__dirname, '..', 'static'))); // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n\n  app.get(routing.noExtension(), function (req, res, next) {\n    var slash = req.path.toString().endsWith('/') ? '' : '/';\n    var requestUrl = \"http://\".concat(host, \":\").concat(port).concat(req.path);\n    requestFile(\"\".concat(requestUrl + slash, \"index.html\"), res, function () {\n      requestFile(slash === '/' ? \"\".concat(requestUrl, \".html\") : requestUrl.replace(/\\/$/, '.html'), res, next);\n    });\n  }); // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n\n  app.get(routing.dotfiles(), function (req, res, next) {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n\n    requestFile(\"http://\".concat(host, \":\").concat(port).concat(req.path, \".html\"), res, next);\n  });\n  app.listen(port);\n}\n\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "execute",
        "port",
        "host",
        "extractTranslations",
        "require",
        "metadataUtils",
        "blog",
        "docs",
        "env",
        "express",
        "React",
        "request",
        "fs",
        "path",
        "isSeparateCss",
        "mkdirp",
        "glob",
        "chalk",
        "translate",
        "renderToStaticMarkupWithDoctype",
        "feed",
        "sitemap",
        "routing",
        "loadConfig",
        "CWD",
        "process",
        "cwd",
        "join",
        "sep",
        "removeModulePathFromCache",
        "moduleName",
        "Object",
        "keys",
        "module",
        "constructor",
        "_pathCache",
        "forEach",
        "cacheKey",
        "indexOf",
        "removeModuleAndChildrenFromCache",
        "mod",
        "resolve",
        "cache",
        "children",
        "child",
        "id",
        "readMetadata",
        "Metadata",
        "MetadataBlog",
        "siteConfig",
        "reloadSiteConfig",
        "siteConfigPath",
        "oldBaseUrl",
        "baseUrl",
        "console",
        "log",
        "exit",
        "reloadMetadata",
        "generateMetadataDocs",
        "reloadMetadataBlog",
        "existsSync",
        "__dirname",
        "removeSync",
        "generateMetadataBlog",
        "reloadTranslations",
        "requestFile",
        "url",
        "res",
        "notFoundCallback",
        "get",
        "error",
        "response",
        "body",
        "statusCode",
        "status",
        "send",
        "app",
        "req",
        "next",
        "decodeURI",
        "toString",
        "replace",
        "metakey",
        "find",
        "permalink",
        "metadata",
        "file",
        "getFile",
        "extractMetadata",
        "rawContent",
        "rawMetadata",
        "reloadTriggers",
        "some",
        "key",
        "mdToHtml",
        "getMarkup",
        "err",
        "xml",
        "set",
        "split",
        "toLowerCase",
        "blogPages",
        "getPagesMarkup",
        "length",
        "urlPath",
        "endsWith",
        "match",
        "urlToSource",
        "blogPost",
        "getPostMarkup",
        "page",
        "htmlFile",
        "basename",
        "wrapPagesHTML",
        "Site",
        "str",
        "__html",
        "readFileSync",
        "encoding",
        "userFile",
        "language",
        "translation",
        "enabled",
        "regexLang",
        "exec",
        "parts",
        "enabledLangTags",
        "enabledLanguages",
        "map",
        "lang",
        "tag",
        "i",
        "englishFile",
        "userFileParts",
        "tempFile",
        "sync",
        "dirname",
        "copySync",
        "ReactComp",
        "setLanguage",
        "title",
        "description",
        "mainCssPath",
        "cssContent",
        "files",
        "separateCss",
        "colors",
        "primaryColor",
        "secondaryColor",
        "yellow",
        "color",
        "RegExp",
        "fonts",
        "fontString",
        "font",
        "header",
        "use",
        "docsUrl",
        "getDocsPath",
        "noExtension",
        "slash",
        "requestUrl",
        "dotfiles",
        "cleanUrl",
        "listen",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\n\nfunction execute(port, host) {\n  const extractTranslations = require('../write-translations');\n  const metadataUtils = require('./metadataUtils');\n  const blog = require('./blog');\n  const docs = require('./docs');\n  const env = require('./env.js');\n  const express = require('express');\n  const React = require('react');\n  const request = require('request');\n  const fs = require('fs-extra');\n  const path = require('path');\n  const {isSeparateCss} = require('./utils');\n  const mkdirp = require('mkdirp');\n  const glob = require('glob');\n  const chalk = require('chalk');\n  const translate = require('./translate');\n  const {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n  const feed = require('./feed');\n  const sitemap = require('./sitemap');\n  const routing = require('./routing');\n  const loadConfig = require('./config');\n  const CWD = process.cwd();\n  const join = path.join;\n  const sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach((cacheKey) => {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  }\n\n  // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n  function removeModuleAndChildrenFromCache(moduleName) {\n    let mod = require.resolve(moduleName);\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach((child) => {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  const readMetadata = require('./readMetadata.js');\n  let Metadata;\n  let MetadataBlog;\n  let siteConfig;\n\n  function reloadSiteConfig() {\n    const siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    const oldBaseUrl = siteConfig && siteConfig.baseUrl;\n    siteConfig = loadConfig(siteConfigPath);\n\n    if (oldBaseUrl && oldBaseUrl !== siteConfig.baseUrl) {\n      console.log('Base url has changed. Please restart server ...');\n      process.exit();\n    }\n  }\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n    reloadSiteConfig();\n    readMetadata.generateMetadataBlog(siteConfig);\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadTranslations() {\n    removeModuleAndChildrenFromCache('./translation.js');\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, (error, response, body) => {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n\n  const app = express();\n\n  app.get(routing.docs(siteConfig), (req, res, next) => {\n    const url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    const metakey = Object.keys(Metadata).find(\n      (id) => Metadata[id].permalink === url,\n    );\n\n    let metadata = Metadata[metakey];\n\n    const file = docs.getFile(metadata);\n    if (!file) {\n      next();\n      return;\n    }\n    const {rawContent, metadata: rawMetadata} = metadataUtils.extractMetadata(\n      file,\n    );\n\n    // if any of the followings is changed, reload the metadata\n    const reloadTriggers = ['sidebar_label', 'hide_title', 'title'];\n    if (reloadTriggers.some((key) => metadata[key] !== rawMetadata[key])) {\n      reloadMetadata();\n      extractTranslations();\n      reloadTranslations();\n      metadata = Metadata[metakey];\n    }\n\n    reloadSiteConfig();\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    const mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig));\n  });\n\n  app.get(routing.sitemap(siteConfig), (req, res) => {\n    sitemap((err, xml) => {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n\n  app.get(routing.feed(siteConfig), (req, res, next) => {\n    res.set('Content-Type', 'application/rss+xml');\n    const file = req.path.toString().split('blog/')[1].toLowerCase();\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n    next();\n  });\n\n  app.get(routing.blog(siteConfig), (req, res, next) => {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    const blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    const urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[`${urlPath.replace(/\\/$/, '')}/index.html`]);\n    } else {\n      const file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      const blogPost = blog.getPostMarkup(file, siteConfig);\n      if (!blogPost) {\n        next();\n        return;\n      }\n      res.send(blogPost);\n    }\n  });\n\n  app.get(routing.page(siteConfig), (req, res, next) => {\n    reloadSiteConfig();\n    // Look for user-provided HTML file first.\n    let htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n    if (\n      fs.existsSync(htmlFile) ||\n      fs.existsSync(\n        (htmlFile = htmlFile.replace(\n          path.basename(htmlFile),\n          join('en', path.basename(htmlFile)),\n        )),\n      )\n    ) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n        const Site = require(join('..', 'core', 'Site.js'));\n        const str = renderToStaticMarkupWithDoctype(\n          <Site\n            language=\"en\"\n            config={siteConfig}\n            metadata={{id: path.basename(htmlFile, '.html')}}>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: fs.readFileSync(htmlFile, {encoding: 'utf8'}),\n              }}\n            />\n          </Site>,\n        );\n\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {encoding: 'utf8'}));\n      }\n      next();\n      return;\n    }\n\n    // look for user provided react file either in specified path or in path for english files\n    let file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    let userFile = join(CWD, 'pages', file);\n\n    let language = env.translation.enabled ? 'en' : '';\n    const regexLang = /(.*)\\/.*\\.html$/;\n    const match = regexLang.exec(req.path);\n    const parts = match[1].split('/');\n    const enabledLangTags = env.translation\n      .enabledLanguages()\n      .map((lang) => lang.tag);\n\n    for (let i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    let englishFile = join(CWD, 'pages', file);\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, `${sep}en${sep}`);\n    }\n\n    // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n    if (\n      fs.existsSync(userFile) ||\n      fs.existsSync(\n        (userFile = userFile.replace(\n          path.basename(userFile),\n          `en${sep}${path.basename(userFile)}`,\n        )),\n      ) ||\n      fs.existsSync((userFile = englishFile))\n    ) {\n      // copy into docusaurus so require paths work\n      const userFileParts = userFile.split(join(CWD, `pages${sep}`));\n      let tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(\n        path.basename(file),\n        `temp${path.basename(file)}`,\n      );\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile);\n\n      // render into a string\n      removeModuleAndChildrenFromCache(tempFile);\n      const ReactComp = require(tempFile);\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n      const Site = require(join('..', 'core', 'Site.js'));\n      translate.setLanguage(language);\n      const str = renderToStaticMarkupWithDoctype(\n        <Site\n          language={language}\n          config={siteConfig}\n          title={ReactComp.title}\n          description={ReactComp.description}\n          metadata={{id: path.basename(userFile, '.js')}}>\n          <ReactComp config={siteConfig} language={language} />\n        </Site>,\n      );\n\n      fs.removeSync(tempFile);\n\n      res.send(str);\n    } else {\n      next();\n    }\n  });\n\n  app.get(`${siteConfig.baseUrl}css/main.css`, (req, res) => {\n    const mainCssPath = join(\n      __dirname,\n      '..',\n      'static',\n      req.path.toString().replace(siteConfig.baseUrl, '/'),\n    );\n    let cssContent = fs.readFileSync(mainCssPath, {encoding: 'utf8'});\n\n    const files = glob.sync(join(CWD, 'static', '**', '*.css'));\n\n    files.forEach((file) => {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n      cssContent = `${cssContent}\\n${fs.readFileSync(file, {\n        encoding: 'utf8',\n      })}`;\n    });\n\n    if (\n      !siteConfig.colors ||\n      !siteConfig.colors.primaryColor ||\n      !siteConfig.colors.secondaryColor\n    ) {\n      console.error(\n        `${chalk.yellow(\n          'Missing color configuration.',\n        )} Make sure siteConfig.colors includes primaryColor and secondaryColor fields.`,\n      );\n    }\n\n    Object.keys(siteConfig.colors).forEach((key) => {\n      const color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(`\\\\$${key}`, 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach((key) => {\n        const fontString = siteConfig.fonts[key]\n          .map((font) => `\"${font}\"`)\n          .join(', ');\n        cssContent = cssContent.replace(\n          new RegExp(`\\\\$${key}`, 'g'),\n          fontString,\n        );\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  });\n\n  // serve static assets from these locations\n  app.use(\n    `${siteConfig.baseUrl}${\n      siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''\n    }assets`,\n    express.static(join(CWD, '..', readMetadata.getDocsPath(), 'assets')),\n  );\n  app.use(\n    `${siteConfig.baseUrl}blog/assets`,\n    express.static(join(CWD, 'blog', 'assets')),\n  );\n  app.use(siteConfig.baseUrl, express.static(join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express.static(join(__dirname, '..', 'static')));\n\n  // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n  app.get(routing.noExtension(), (req, res, next) => {\n    const slash = req.path.toString().endsWith('/') ? '' : '/';\n    const requestUrl = `http://${host}:${port}${req.path}`;\n    requestFile(`${requestUrl + slash}index.html`, res, () => {\n      requestFile(\n        slash === '/'\n          ? `${requestUrl}.html`\n          : requestUrl.replace(/\\/$/, '.html'),\n        res,\n        next,\n      );\n    });\n  });\n\n  // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n  app.get(routing.dotfiles(), (req, res, next) => {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n    requestFile(`http://${host}:${port}${req.path}.html`, res, next);\n  });\n\n  app.listen(port);\n}\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\write-translations.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\write-translations.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\write-translations.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\write-translations.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\",
        "sourceFileName": "write-translations.js"
      }
    },
    "ast": null,
    "code": "#!/usr/bin/env node\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* generate the i18n/en.json file */\n\"use strict\";\n\nrequire('@babel/register')({\n  babelrc: false,\n  only: [__dirname, \"\".concat(process.cwd(), \"/core\")],\n  plugins: [require('./server/translate-plugin.js'), require('@babel/plugin-proposal-class-properties')[\"default\"], require('@babel/plugin-proposal-object-rest-spread')[\"default\"]],\n  presets: [require('@babel/preset-react')[\"default\"], require('@babel/preset-env')[\"default\"]]\n});\n\nvar traverse = require('@babel/traverse')[\"default\"];\n\nvar babylon = require('babylon');\n\nvar fs = require('fs-extra');\n\nvar glob = require('glob');\n\nvar mkdirp = require('mkdirp');\n\nvar nodePath = require('path');\n\nvar _ = require('lodash');\n\nvar readMetadata = require('./server/readMetadata.js');\n\nvar CWD = process.cwd();\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar sidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n\nvar customTranslations = {\n  'localized-strings': {\n    docs: {},\n    links: {},\n    categories: {}\n  },\n  'pages-strings': {}\n};\n\nif (fs.existsSync(\"\".concat(CWD, \"/data/custom-translation-strings.json\"))) {\n  customTranslations = _.merge({}, JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/data/custom-translation-strings.json\"), 'utf8')), customTranslations);\n}\n\nfunction parseJSXFile(file) {\n  try {\n    return babylon.parse(fs.readFileSync(file, 'utf8'), {\n      plugins: ['jsx']\n    });\n  } catch (e) {\n    throw new Error(\"Babylon parsing failure for file=\".concat(file, \": \").concat(e.message, \"\\n    \\nNote: Docusaurus v1 currently uses Babylon v6, and <> fragment syntax is not supported\"));\n  }\n}\n\nfunction writeFileAndCreateFolder(file, content) {\n  mkdirp.sync(file.replace(new RegExp('/[^/]*$'), ''));\n  fs.writeFileSync(file, content);\n}\n\nfunction execute() {\n  var translations = {\n    'localized-strings': {\n      next: 'Next',\n      previous: 'Previous',\n      tagline: siteConfig.tagline,\n      docs: {},\n      links: {},\n      categories: {}\n    },\n    'pages-strings': {}\n  }; // look through markdown headers of docs for titles and categories to translate\n\n  var docsDir = nodePath.join(CWD, '../', readMetadata.getDocsPath());\n  var versionedDocsDir = nodePath.join(CWD, 'versioned_docs');\n\n  var translateDoc = function translateDoc(file, refDir) {\n    var extension = nodePath.extname(file);\n\n    if (extension === '.md' || extension === '.markdown') {\n      var res;\n\n      try {\n        res = readMetadata.processMetadata(file, refDir);\n      } catch (e) {\n        console.error(e);\n        process.exit(1);\n      }\n\n      if (!res) {\n        return;\n      }\n\n      var metadata = res.metadata;\n      var id = metadata.localized_id;\n      translations['localized-strings'].docs[id] = {};\n      translations['localized-strings'].docs[id].title = metadata.title;\n\n      if (metadata.sidebar_label) {\n        translations['localized-strings'].docs[id].sidebar_label = metadata.sidebar_label;\n      }\n    }\n  };\n\n  glob.sync(\"\".concat(docsDir, \"/**\")).forEach(function (file) {\n    return translateDoc(file, docsDir);\n  });\n  glob.sync(\"\".concat(versionedDocsDir, \"/**\")).forEach(function (file) {\n    return translateDoc(file, versionedDocsDir);\n  }); // look through header links for text to translate\n\n  siteConfig.headerLinks.forEach(function (link) {\n    if (link.label) {\n      translations['localized-strings'].links[link.label] = link.label;\n    }\n  }); // find sidebar category titles to translate\n\n  Object.keys(sidebars).forEach(function (sb) {\n    var categories = sidebars[sb];\n    Object.keys(categories).forEach(function (category) {\n      translations['localized-strings'].categories[category] = category;\n    });\n  });\n  glob.sync(\"\".concat(CWD, \"/versioned_sidebars/*\")).forEach(function (file) {\n    if (!file.endsWith('-sidebars.json')) {\n      if (file.endsWith('-sidebar.json')) {\n        console.warn(\"Skipping \".concat(file, \". Make sure your sidebar filenames follow this format: 'version-VERSION-sidebars.json'.\"));\n      }\n\n      return;\n    }\n\n    var sidebarContent;\n\n    try {\n      sidebarContent = JSON.parse(fs.readFileSync(file, 'utf8'));\n    } catch (e) {\n      console.error(\"Could not parse \".concat(file, \" into json. \").concat(e));\n      process.exit(1);\n    }\n\n    Object.keys(sidebarContent).forEach(function (sb) {\n      var categories = sidebarContent[sb];\n      Object.keys(categories).forEach(function (category) {\n        translations['localized-strings'].categories[category] = category;\n      });\n    });\n  }); // go through pages to look for text inside translate tags\n\n  glob.sync(\"\".concat(CWD, \"/pages/en/**\")).forEach(function (file) {\n    var extension = nodePath.extname(file);\n\n    if (extension === '.js') {\n      var ast = parseJSXFile(file);\n      traverse(ast, {\n        enter: function enter(path) {\n          if (path.node.type === 'JSXElement' && path.node.openingElement.name.name === 'translate') {\n            var text = path.node.children[0].value.trim().replace(/\\s+/g, ' ');\n            var description = 'no description given';\n            var attributes = path.node.openingElement.attributes;\n\n            for (var i = 0; i < attributes.length; i++) {\n              if (attributes[i].name.name === 'desc') {\n                description = attributes[i].value.value;\n              }\n            }\n\n            translations['pages-strings'][\"\".concat(text, \"|\").concat(description)] = text;\n          }\n        }\n      });\n    }\n  }); // Manually add 'Help Translate' to en.json\n\n  translations['pages-strings']['Help Translate|recruit community translators for your project'] = 'Help Translate';\n  translations['pages-strings']['Edit this Doc|recruitment message asking to edit the doc source'] = 'Edit';\n  translations['pages-strings']['Translate this Doc|recruitment message asking to translate the docs'] = 'Translate';\n  translations['pages-strings'] = Object.assign(translations['pages-strings'], customTranslations['pages-strings']);\n  translations['localized-strings'] = _.merge({}, translations['localized-strings'], customTranslations['localized-strings']);\n  writeFileAndCreateFolder(\"\".concat(CWD, \"/i18n/en.json\"), \"\".concat(JSON.stringify(Object.assign({\n    _comment: 'This file is auto-generated by write-translations.js'\n  }, translations), null, 2), \"\\n\"));\n}\n\nexecute();\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyaXRlLXRyYW5zbGF0aW9ucy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiYmFiZWxyYyIsIm9ubHkiLCJfX2Rpcm5hbWUiLCJwcm9jZXNzIiwiY3dkIiwicGx1Z2lucyIsInByZXNldHMiLCJ0cmF2ZXJzZSIsImJhYnlsb24iLCJmcyIsImdsb2IiLCJta2RpcnAiLCJub2RlUGF0aCIsIl8iLCJyZWFkTWV0YWRhdGEiLCJDV0QiLCJzaXRlQ29uZmlnIiwic2lkZWJhcnMiLCJjdXN0b21UcmFuc2xhdGlvbnMiLCJkb2NzIiwibGlua3MiLCJjYXRlZ29yaWVzIiwiZXhpc3RzU3luYyIsIm1lcmdlIiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwicGFyc2VKU1hGaWxlIiwiZmlsZSIsImUiLCJFcnJvciIsIm1lc3NhZ2UiLCJ3cml0ZUZpbGVBbmRDcmVhdGVGb2xkZXIiLCJjb250ZW50Iiwic3luYyIsInJlcGxhY2UiLCJSZWdFeHAiLCJ3cml0ZUZpbGVTeW5jIiwiZXhlY3V0ZSIsInRyYW5zbGF0aW9ucyIsIm5leHQiLCJwcmV2aW91cyIsInRhZ2xpbmUiLCJkb2NzRGlyIiwiam9pbiIsImdldERvY3NQYXRoIiwidmVyc2lvbmVkRG9jc0RpciIsInRyYW5zbGF0ZURvYyIsInJlZkRpciIsImV4dGVuc2lvbiIsImV4dG5hbWUiLCJyZXMiLCJwcm9jZXNzTWV0YWRhdGEiLCJjb25zb2xlIiwiZXJyb3IiLCJleGl0IiwibWV0YWRhdGEiLCJpZCIsImxvY2FsaXplZF9pZCIsInRpdGxlIiwic2lkZWJhcl9sYWJlbCIsImZvckVhY2giLCJoZWFkZXJMaW5rcyIsImxpbmsiLCJsYWJlbCIsIk9iamVjdCIsImtleXMiLCJzYiIsImNhdGVnb3J5IiwiZW5kc1dpdGgiLCJ3YXJuIiwic2lkZWJhckNvbnRlbnQiLCJhc3QiLCJlbnRlciIsInBhdGgiLCJub2RlIiwidHlwZSIsIm9wZW5pbmdFbGVtZW50IiwibmFtZSIsInRleHQiLCJjaGlsZHJlbiIsInZhbHVlIiwidHJpbSIsImRlc2NyaXB0aW9uIiwiYXR0cmlidXRlcyIsImkiLCJsZW5ndGgiLCJhc3NpZ24iLCJzdHJpbmdpZnkiLCJfY29tbWVudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOzs7Ozs7O0FBT0E7OztBQUVBQSxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQjtBQUN6QkMsRUFBQUEsT0FBTyxFQUFFLEtBRGdCO0FBRXpCQyxFQUFBQSxJQUFJLEVBQUUsQ0FBQ0MsU0FBRCxZQUFlQyxPQUFPLENBQUNDLEdBQVIsRUFBZixXQUZtQjtBQUd6QkMsRUFBQUEsT0FBTyxFQUFFLENBQ1BOLE9BQU8sQ0FBQyw4QkFBRCxDQURBLEVBRVBBLE9BQU8sQ0FBQyx5Q0FBRCxDQUFQLFdBRk8sRUFHUEEsT0FBTyxDQUFDLDJDQUFELENBQVAsV0FITyxDQUhnQjtBQVF6Qk8sRUFBQUEsT0FBTyxFQUFFLENBQ1BQLE9BQU8sQ0FBQyxxQkFBRCxDQUFQLFdBRE8sRUFFUEEsT0FBTyxDQUFDLG1CQUFELENBQVAsV0FGTztBQVJnQixDQUEzQjs7QUFjQSxJQUFNUSxRQUFRLEdBQUdSLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLFdBQWpCOztBQUNBLElBQU1TLE9BQU8sR0FBR1QsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTVUsRUFBRSxHQUFHVixPQUFPLENBQUMsVUFBRCxDQUFsQjs7QUFDQSxJQUFNVyxJQUFJLEdBQUdYLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1ZLE1BQU0sR0FBR1osT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTWEsUUFBUSxHQUFHYixPQUFPLENBQUMsTUFBRCxDQUF4Qjs7QUFDQSxJQUFNYyxDQUFDLEdBQUdkLE9BQU8sQ0FBQyxRQUFELENBQWpCOztBQUVBLElBQU1lLFlBQVksR0FBR2YsT0FBTyxDQUFDLDBCQUFELENBQTVCOztBQUVBLElBQU1nQixHQUFHLEdBQUdaLE9BQU8sQ0FBQ0MsR0FBUixFQUFaOztBQUNBLElBQU1ZLFVBQVUsR0FBR2pCLE9BQU8sV0FBSWdCLEdBQUosb0JBQTFCOztBQUNBLElBQU1FLFFBQVEsR0FBR2xCLE9BQU8sV0FBSWdCLEdBQUosb0JBQXhCOztBQUVBLElBQUlHLGtCQUFrQixHQUFHO0FBQ3ZCLHVCQUFxQjtBQUNuQkMsSUFBQUEsSUFBSSxFQUFFLEVBRGE7QUFFbkJDLElBQUFBLEtBQUssRUFBRSxFQUZZO0FBR25CQyxJQUFBQSxVQUFVLEVBQUU7QUFITyxHQURFO0FBTXZCLG1CQUFpQjtBQU5NLENBQXpCOztBQVFBLElBQUlaLEVBQUUsQ0FBQ2EsVUFBSCxXQUFpQlAsR0FBakIsMkNBQUosRUFBa0U7QUFDaEVHLEVBQUFBLGtCQUFrQixHQUFHTCxDQUFDLENBQUNVLEtBQUYsQ0FDbkIsRUFEbUIsRUFFbkJDLElBQUksQ0FBQ0MsS0FBTCxDQUNFaEIsRUFBRSxDQUFDaUIsWUFBSCxXQUFtQlgsR0FBbkIsNENBQStELE1BQS9ELENBREYsQ0FGbUIsRUFLbkJHLGtCQUxtQixDQUFyQjtBQU9EOztBQUVELFNBQVNTLFlBQVQsQ0FBc0JDLElBQXRCLEVBQTRCO0FBQzFCLE1BQUk7QUFDRixXQUFPcEIsT0FBTyxDQUFDaUIsS0FBUixDQUFjaEIsRUFBRSxDQUFDaUIsWUFBSCxDQUFnQkUsSUFBaEIsRUFBc0IsTUFBdEIsQ0FBZCxFQUE2QztBQUNsRHZCLE1BQUFBLE9BQU8sRUFBRSxDQUFDLEtBQUQ7QUFEeUMsS0FBN0MsQ0FBUDtBQUdELEdBSkQsQ0FJRSxPQUFPd0IsQ0FBUCxFQUFVO0FBQ1YsVUFBTSxJQUFJQyxLQUFKLDRDQUE4Q0YsSUFBOUMsZUFBdURDLENBQUMsQ0FBQ0UsT0FBekQsb0dBQU47QUFFRDtBQUNGOztBQUVELFNBQVNDLHdCQUFULENBQWtDSixJQUFsQyxFQUF3Q0ssT0FBeEMsRUFBaUQ7QUFDL0N0QixFQUFBQSxNQUFNLENBQUN1QixJQUFQLENBQVlOLElBQUksQ0FBQ08sT0FBTCxDQUFhLElBQUlDLE1BQUosQ0FBVyxTQUFYLENBQWIsRUFBb0MsRUFBcEMsQ0FBWjtBQUNBM0IsRUFBQUEsRUFBRSxDQUFDNEIsYUFBSCxDQUFpQlQsSUFBakIsRUFBdUJLLE9BQXZCO0FBQ0Q7O0FBRUQsU0FBU0ssT0FBVCxHQUFtQjtBQUNqQixNQUFNQyxZQUFZLEdBQUc7QUFDbkIseUJBQXFCO0FBQ25CQyxNQUFBQSxJQUFJLEVBQUUsTUFEYTtBQUVuQkMsTUFBQUEsUUFBUSxFQUFFLFVBRlM7QUFHbkJDLE1BQUFBLE9BQU8sRUFBRTFCLFVBQVUsQ0FBQzBCLE9BSEQ7QUFJbkJ2QixNQUFBQSxJQUFJLEVBQUUsRUFKYTtBQUtuQkMsTUFBQUEsS0FBSyxFQUFFLEVBTFk7QUFNbkJDLE1BQUFBLFVBQVUsRUFBRTtBQU5PLEtBREY7QUFTbkIscUJBQWlCO0FBVEUsR0FBckIsQ0FEaUIsQ0FhakI7O0FBQ0EsTUFBTXNCLE9BQU8sR0FBRy9CLFFBQVEsQ0FBQ2dDLElBQVQsQ0FBYzdCLEdBQWQsRUFBbUIsS0FBbkIsRUFBMEJELFlBQVksQ0FBQytCLFdBQWIsRUFBMUIsQ0FBaEI7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBR2xDLFFBQVEsQ0FBQ2dDLElBQVQsQ0FBYzdCLEdBQWQsRUFBbUIsZ0JBQW5CLENBQXpCOztBQUVBLE1BQU1nQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDbkIsSUFBRCxFQUFPb0IsTUFBUCxFQUFrQjtBQUNyQyxRQUFNQyxTQUFTLEdBQUdyQyxRQUFRLENBQUNzQyxPQUFULENBQWlCdEIsSUFBakIsQ0FBbEI7O0FBQ0EsUUFBSXFCLFNBQVMsS0FBSyxLQUFkLElBQXVCQSxTQUFTLEtBQUssV0FBekMsRUFBc0Q7QUFDcEQsVUFBSUUsR0FBSjs7QUFDQSxVQUFJO0FBQ0ZBLFFBQUFBLEdBQUcsR0FBR3JDLFlBQVksQ0FBQ3NDLGVBQWIsQ0FBNkJ4QixJQUE3QixFQUFtQ29CLE1BQW5DLENBQU47QUFDRCxPQUZELENBRUUsT0FBT25CLENBQVAsRUFBVTtBQUNWd0IsUUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWN6QixDQUFkO0FBQ0ExQixRQUFBQSxPQUFPLENBQUNvRCxJQUFSLENBQWEsQ0FBYjtBQUNEOztBQUNELFVBQUksQ0FBQ0osR0FBTCxFQUFVO0FBQ1I7QUFDRDs7QUFDRCxVQUFNSyxRQUFRLEdBQUdMLEdBQUcsQ0FBQ0ssUUFBckI7QUFDQSxVQUFNQyxFQUFFLEdBQUdELFFBQVEsQ0FBQ0UsWUFBcEI7QUFFQW5CLE1BQUFBLFlBQVksQ0FBQyxtQkFBRCxDQUFaLENBQWtDcEIsSUFBbEMsQ0FBdUNzQyxFQUF2QyxJQUE2QyxFQUE3QztBQUNBbEIsTUFBQUEsWUFBWSxDQUFDLG1CQUFELENBQVosQ0FBa0NwQixJQUFsQyxDQUF1Q3NDLEVBQXZDLEVBQTJDRSxLQUEzQyxHQUFtREgsUUFBUSxDQUFDRyxLQUE1RDs7QUFFQSxVQUFJSCxRQUFRLENBQUNJLGFBQWIsRUFBNEI7QUFDMUJyQixRQUFBQSxZQUFZLENBQUMsbUJBQUQsQ0FBWixDQUFrQ3BCLElBQWxDLENBQXVDc0MsRUFBdkMsRUFBMkNHLGFBQTNDLEdBQ0VKLFFBQVEsQ0FBQ0ksYUFEWDtBQUVEO0FBQ0Y7QUFDRixHQXhCRDs7QUF5QkFsRCxFQUFBQSxJQUFJLENBQUN3QixJQUFMLFdBQWFTLE9BQWIsVUFBMkJrQixPQUEzQixDQUFtQyxVQUFDakMsSUFBRDtBQUFBLFdBQVVtQixZQUFZLENBQUNuQixJQUFELEVBQU9lLE9BQVAsQ0FBdEI7QUFBQSxHQUFuQztBQUNBakMsRUFBQUEsSUFBSSxDQUNEd0IsSUFESCxXQUNXWSxnQkFEWCxVQUVHZSxPQUZILENBRVcsVUFBQ2pDLElBQUQ7QUFBQSxXQUFVbUIsWUFBWSxDQUFDbkIsSUFBRCxFQUFPa0IsZ0JBQVAsQ0FBdEI7QUFBQSxHQUZYLEVBM0NpQixDQStDakI7O0FBQ0E5QixFQUFBQSxVQUFVLENBQUM4QyxXQUFYLENBQXVCRCxPQUF2QixDQUErQixVQUFDRSxJQUFELEVBQVU7QUFDdkMsUUFBSUEsSUFBSSxDQUFDQyxLQUFULEVBQWdCO0FBQ2R6QixNQUFBQSxZQUFZLENBQUMsbUJBQUQsQ0FBWixDQUFrQ25CLEtBQWxDLENBQXdDMkMsSUFBSSxDQUFDQyxLQUE3QyxJQUFzREQsSUFBSSxDQUFDQyxLQUEzRDtBQUNEO0FBQ0YsR0FKRCxFQWhEaUIsQ0FzRGpCOztBQUNBQyxFQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWWpELFFBQVosRUFBc0I0QyxPQUF0QixDQUE4QixVQUFDTSxFQUFELEVBQVE7QUFDcEMsUUFBTTlDLFVBQVUsR0FBR0osUUFBUSxDQUFDa0QsRUFBRCxDQUEzQjtBQUNBRixJQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWTdDLFVBQVosRUFBd0J3QyxPQUF4QixDQUFnQyxVQUFDTyxRQUFELEVBQWM7QUFDNUM3QixNQUFBQSxZQUFZLENBQUMsbUJBQUQsQ0FBWixDQUFrQ2xCLFVBQWxDLENBQTZDK0MsUUFBN0MsSUFBeURBLFFBQXpEO0FBQ0QsS0FGRDtBQUdELEdBTEQ7QUFPQTFELEVBQUFBLElBQUksQ0FBQ3dCLElBQUwsV0FBYW5CLEdBQWIsNEJBQXlDOEMsT0FBekMsQ0FBaUQsVUFBQ2pDLElBQUQsRUFBVTtBQUN6RCxRQUFJLENBQUNBLElBQUksQ0FBQ3lDLFFBQUwsQ0FBYyxnQkFBZCxDQUFMLEVBQXNDO0FBQ3BDLFVBQUl6QyxJQUFJLENBQUN5QyxRQUFMLENBQWMsZUFBZCxDQUFKLEVBQW9DO0FBQ2xDaEIsUUFBQUEsT0FBTyxDQUFDaUIsSUFBUixvQkFDYzFDLElBRGQ7QUFHRDs7QUFDRDtBQUNEOztBQUNELFFBQUkyQyxjQUFKOztBQUNBLFFBQUk7QUFDRkEsTUFBQUEsY0FBYyxHQUFHL0MsSUFBSSxDQUFDQyxLQUFMLENBQVdoQixFQUFFLENBQUNpQixZQUFILENBQWdCRSxJQUFoQixFQUFzQixNQUF0QixDQUFYLENBQWpCO0FBQ0QsS0FGRCxDQUVFLE9BQU9DLENBQVAsRUFBVTtBQUNWd0IsTUFBQUEsT0FBTyxDQUFDQyxLQUFSLDJCQUFpQzFCLElBQWpDLHlCQUFvREMsQ0FBcEQ7QUFDQTFCLE1BQUFBLE9BQU8sQ0FBQ29ELElBQVIsQ0FBYSxDQUFiO0FBQ0Q7O0FBRURVLElBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSyxjQUFaLEVBQTRCVixPQUE1QixDQUFvQyxVQUFDTSxFQUFELEVBQVE7QUFDMUMsVUFBTTlDLFVBQVUsR0FBR2tELGNBQWMsQ0FBQ0osRUFBRCxDQUFqQztBQUNBRixNQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWTdDLFVBQVosRUFBd0J3QyxPQUF4QixDQUFnQyxVQUFDTyxRQUFELEVBQWM7QUFDNUM3QixRQUFBQSxZQUFZLENBQUMsbUJBQUQsQ0FBWixDQUFrQ2xCLFVBQWxDLENBQTZDK0MsUUFBN0MsSUFBeURBLFFBQXpEO0FBQ0QsT0FGRDtBQUdELEtBTEQ7QUFNRCxHQXZCRCxFQTlEaUIsQ0F1RmpCOztBQUNBMUQsRUFBQUEsSUFBSSxDQUFDd0IsSUFBTCxXQUFhbkIsR0FBYixtQkFBZ0M4QyxPQUFoQyxDQUF3QyxVQUFDakMsSUFBRCxFQUFVO0FBQ2hELFFBQU1xQixTQUFTLEdBQUdyQyxRQUFRLENBQUNzQyxPQUFULENBQWlCdEIsSUFBakIsQ0FBbEI7O0FBQ0EsUUFBSXFCLFNBQVMsS0FBSyxLQUFsQixFQUF5QjtBQUN2QixVQUFNdUIsR0FBRyxHQUFHN0MsWUFBWSxDQUFDQyxJQUFELENBQXhCO0FBQ0FyQixNQUFBQSxRQUFRLENBQUNpRSxHQUFELEVBQU07QUFDWkMsUUFBQUEsS0FEWSxpQkFDTkMsSUFETSxFQUNBO0FBQ1YsY0FDRUEsSUFBSSxDQUFDQyxJQUFMLENBQVVDLElBQVYsS0FBbUIsWUFBbkIsSUFDQUYsSUFBSSxDQUFDQyxJQUFMLENBQVVFLGNBQVYsQ0FBeUJDLElBQXpCLENBQThCQSxJQUE5QixLQUF1QyxXQUZ6QyxFQUdFO0FBQ0EsZ0JBQU1DLElBQUksR0FBR0wsSUFBSSxDQUFDQyxJQUFMLENBQVVLLFFBQVYsQ0FBbUIsQ0FBbkIsRUFBc0JDLEtBQXRCLENBQ1ZDLElBRFUsR0FFVi9DLE9BRlUsQ0FFRixNQUZFLEVBRU0sR0FGTixDQUFiO0FBR0EsZ0JBQUlnRCxXQUFXLEdBQUcsc0JBQWxCO0FBQ0EsZ0JBQU1DLFVBQVUsR0FBR1YsSUFBSSxDQUFDQyxJQUFMLENBQVVFLGNBQVYsQ0FBeUJPLFVBQTVDOztBQUNBLGlCQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdELFVBQVUsQ0FBQ0UsTUFBL0IsRUFBdUNELENBQUMsRUFBeEMsRUFBNEM7QUFDMUMsa0JBQUlELFVBQVUsQ0FBQ0MsQ0FBRCxDQUFWLENBQWNQLElBQWQsQ0FBbUJBLElBQW5CLEtBQTRCLE1BQWhDLEVBQXdDO0FBQ3RDSyxnQkFBQUEsV0FBVyxHQUFHQyxVQUFVLENBQUNDLENBQUQsQ0FBVixDQUFjSixLQUFkLENBQW9CQSxLQUFsQztBQUNEO0FBQ0Y7O0FBQ0QxQyxZQUFBQSxZQUFZLENBQUMsZUFBRCxDQUFaLFdBQWlDd0MsSUFBakMsY0FBeUNJLFdBQXpDLEtBQTBESixJQUExRDtBQUNEO0FBQ0Y7QUFsQlcsT0FBTixDQUFSO0FBb0JEO0FBQ0YsR0F6QkQsRUF4RmlCLENBbUhqQjs7QUFDQXhDLEVBQUFBLFlBQVksQ0FBQyxlQUFELENBQVosQ0FDRSwrREFERixJQUVJLGdCQUZKO0FBR0FBLEVBQUFBLFlBQVksQ0FBQyxlQUFELENBQVosQ0FDRSxpRUFERixJQUVJLE1BRko7QUFHQUEsRUFBQUEsWUFBWSxDQUFDLGVBQUQsQ0FBWixDQUNFLHFFQURGLElBRUksV0FGSjtBQUdBQSxFQUFBQSxZQUFZLENBQUMsZUFBRCxDQUFaLEdBQWdDMEIsTUFBTSxDQUFDc0IsTUFBUCxDQUM5QmhELFlBQVksQ0FBQyxlQUFELENBRGtCLEVBRTlCckIsa0JBQWtCLENBQUMsZUFBRCxDQUZZLENBQWhDO0FBSUFxQixFQUFBQSxZQUFZLENBQUMsbUJBQUQsQ0FBWixHQUFvQzFCLENBQUMsQ0FBQ1UsS0FBRixDQUNsQyxFQURrQyxFQUVsQ2dCLFlBQVksQ0FBQyxtQkFBRCxDQUZzQixFQUdsQ3JCLGtCQUFrQixDQUFDLG1CQUFELENBSGdCLENBQXBDO0FBS0FjLEVBQUFBLHdCQUF3QixXQUNuQmpCLEdBRG1CLDhCQUVuQlMsSUFBSSxDQUFDZ0UsU0FBTCxDQUNEdkIsTUFBTSxDQUFDc0IsTUFBUCxDQUNFO0FBQ0VFLElBQUFBLFFBQVEsRUFBRTtBQURaLEdBREYsRUFJRWxELFlBSkYsQ0FEQyxFQU9ELElBUEMsRUFRRCxDQVJDLENBRm1CLFFBQXhCO0FBYUQ7O0FBRURELE9BQU87QUFFUG9ELE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJELE9BQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXERlc2t0b3BcXEJsb2dcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFwiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLyogZ2VuZXJhdGUgdGhlIGkxOG4vZW4uanNvbiBmaWxlICovXG5cbnJlcXVpcmUoJ0BiYWJlbC9yZWdpc3RlcicpKHtcbiAgYmFiZWxyYzogZmFsc2UsXG4gIG9ubHk6IFtfX2Rpcm5hbWUsIGAke3Byb2Nlc3MuY3dkKCl9L2NvcmVgXSxcbiAgcGx1Z2luczogW1xuICAgIHJlcXVpcmUoJy4vc2VydmVyL3RyYW5zbGF0ZS1wbHVnaW4uanMnKSxcbiAgICByZXF1aXJlKCdAYmFiZWwvcGx1Z2luLXByb3Bvc2FsLWNsYXNzLXByb3BlcnRpZXMnKS5kZWZhdWx0LFxuICAgIHJlcXVpcmUoJ0BiYWJlbC9wbHVnaW4tcHJvcG9zYWwtb2JqZWN0LXJlc3Qtc3ByZWFkJykuZGVmYXVsdCxcbiAgXSxcbiAgcHJlc2V0czogW1xuICAgIHJlcXVpcmUoJ0BiYWJlbC9wcmVzZXQtcmVhY3QnKS5kZWZhdWx0LFxuICAgIHJlcXVpcmUoJ0BiYWJlbC9wcmVzZXQtZW52JykuZGVmYXVsdCxcbiAgXSxcbn0pO1xuXG5jb25zdCB0cmF2ZXJzZSA9IHJlcXVpcmUoJ0BiYWJlbC90cmF2ZXJzZScpLmRlZmF1bHQ7XG5jb25zdCBiYWJ5bG9uID0gcmVxdWlyZSgnYmFieWxvbicpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcy1leHRyYScpO1xuY29uc3QgZ2xvYiA9IHJlcXVpcmUoJ2dsb2InKTtcbmNvbnN0IG1rZGlycCA9IHJlcXVpcmUoJ21rZGlycCcpO1xuY29uc3Qgbm9kZVBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbmNvbnN0IHJlYWRNZXRhZGF0YSA9IHJlcXVpcmUoJy4vc2VydmVyL3JlYWRNZXRhZGF0YS5qcycpO1xuXG5jb25zdCBDV0QgPSBwcm9jZXNzLmN3ZCgpO1xuY29uc3Qgc2l0ZUNvbmZpZyA9IHJlcXVpcmUoYCR7Q1dEfS9zaXRlQ29uZmlnLmpzYCk7XG5jb25zdCBzaWRlYmFycyA9IHJlcXVpcmUoYCR7Q1dEfS9zaWRlYmFycy5qc29uYCk7XG5cbmxldCBjdXN0b21UcmFuc2xhdGlvbnMgPSB7XG4gICdsb2NhbGl6ZWQtc3RyaW5ncyc6IHtcbiAgICBkb2NzOiB7fSxcbiAgICBsaW5rczoge30sXG4gICAgY2F0ZWdvcmllczoge30sXG4gIH0sXG4gICdwYWdlcy1zdHJpbmdzJzoge30sXG59O1xuaWYgKGZzLmV4aXN0c1N5bmMoYCR7Q1dEfS9kYXRhL2N1c3RvbS10cmFuc2xhdGlvbi1zdHJpbmdzLmpzb25gKSkge1xuICBjdXN0b21UcmFuc2xhdGlvbnMgPSBfLm1lcmdlKFxuICAgIHt9LFxuICAgIEpTT04ucGFyc2UoXG4gICAgICBmcy5yZWFkRmlsZVN5bmMoYCR7Q1dEfS9kYXRhL2N1c3RvbS10cmFuc2xhdGlvbi1zdHJpbmdzLmpzb25gLCAndXRmOCcpLFxuICAgICksXG4gICAgY3VzdG9tVHJhbnNsYXRpb25zLFxuICApO1xufVxuXG5mdW5jdGlvbiBwYXJzZUpTWEZpbGUoZmlsZSkge1xuICB0cnkge1xuICAgIHJldHVybiBiYWJ5bG9uLnBhcnNlKGZzLnJlYWRGaWxlU3luYyhmaWxlLCAndXRmOCcpLCB7XG4gICAgICBwbHVnaW5zOiBbJ2pzeCddLFxuICAgIH0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBCYWJ5bG9uIHBhcnNpbmcgZmFpbHVyZSBmb3IgZmlsZT0ke2ZpbGV9OiAke2UubWVzc2FnZX1cbiAgICBcXG5Ob3RlOiBEb2N1c2F1cnVzIHYxIGN1cnJlbnRseSB1c2VzIEJhYnlsb24gdjYsIGFuZCA8PiBmcmFnbWVudCBzeW50YXggaXMgbm90IHN1cHBvcnRlZGApO1xuICB9XG59XG5cbmZ1bmN0aW9uIHdyaXRlRmlsZUFuZENyZWF0ZUZvbGRlcihmaWxlLCBjb250ZW50KSB7XG4gIG1rZGlycC5zeW5jKGZpbGUucmVwbGFjZShuZXcgUmVnRXhwKCcvW14vXSokJyksICcnKSk7XG4gIGZzLndyaXRlRmlsZVN5bmMoZmlsZSwgY29udGVudCk7XG59XG5cbmZ1bmN0aW9uIGV4ZWN1dGUoKSB7XG4gIGNvbnN0IHRyYW5zbGF0aW9ucyA9IHtcbiAgICAnbG9jYWxpemVkLXN0cmluZ3MnOiB7XG4gICAgICBuZXh0OiAnTmV4dCcsXG4gICAgICBwcmV2aW91czogJ1ByZXZpb3VzJyxcbiAgICAgIHRhZ2xpbmU6IHNpdGVDb25maWcudGFnbGluZSxcbiAgICAgIGRvY3M6IHt9LFxuICAgICAgbGlua3M6IHt9LFxuICAgICAgY2F0ZWdvcmllczoge30sXG4gICAgfSxcbiAgICAncGFnZXMtc3RyaW5ncyc6IHt9LFxuICB9O1xuXG4gIC8vIGxvb2sgdGhyb3VnaCBtYXJrZG93biBoZWFkZXJzIG9mIGRvY3MgZm9yIHRpdGxlcyBhbmQgY2F0ZWdvcmllcyB0byB0cmFuc2xhdGVcbiAgY29uc3QgZG9jc0RpciA9IG5vZGVQYXRoLmpvaW4oQ1dELCAnLi4vJywgcmVhZE1ldGFkYXRhLmdldERvY3NQYXRoKCkpO1xuICBjb25zdCB2ZXJzaW9uZWREb2NzRGlyID0gbm9kZVBhdGguam9pbihDV0QsICd2ZXJzaW9uZWRfZG9jcycpO1xuXG4gIGNvbnN0IHRyYW5zbGF0ZURvYyA9IChmaWxlLCByZWZEaXIpID0+IHtcbiAgICBjb25zdCBleHRlbnNpb24gPSBub2RlUGF0aC5leHRuYW1lKGZpbGUpO1xuICAgIGlmIChleHRlbnNpb24gPT09ICcubWQnIHx8IGV4dGVuc2lvbiA9PT0gJy5tYXJrZG93bicpIHtcbiAgICAgIGxldCByZXM7XG4gICAgICB0cnkge1xuICAgICAgICByZXMgPSByZWFkTWV0YWRhdGEucHJvY2Vzc01ldGFkYXRhKGZpbGUsIHJlZkRpcik7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgICAgIH1cbiAgICAgIGlmICghcmVzKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG1ldGFkYXRhID0gcmVzLm1ldGFkYXRhO1xuICAgICAgY29uc3QgaWQgPSBtZXRhZGF0YS5sb2NhbGl6ZWRfaWQ7XG5cbiAgICAgIHRyYW5zbGF0aW9uc1snbG9jYWxpemVkLXN0cmluZ3MnXS5kb2NzW2lkXSA9IHt9O1xuICAgICAgdHJhbnNsYXRpb25zWydsb2NhbGl6ZWQtc3RyaW5ncyddLmRvY3NbaWRdLnRpdGxlID0gbWV0YWRhdGEudGl0bGU7XG5cbiAgICAgIGlmIChtZXRhZGF0YS5zaWRlYmFyX2xhYmVsKSB7XG4gICAgICAgIHRyYW5zbGF0aW9uc1snbG9jYWxpemVkLXN0cmluZ3MnXS5kb2NzW2lkXS5zaWRlYmFyX2xhYmVsID1cbiAgICAgICAgICBtZXRhZGF0YS5zaWRlYmFyX2xhYmVsO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgZ2xvYi5zeW5jKGAke2RvY3NEaXJ9LyoqYCkuZm9yRWFjaCgoZmlsZSkgPT4gdHJhbnNsYXRlRG9jKGZpbGUsIGRvY3NEaXIpKTtcbiAgZ2xvYlxuICAgIC5zeW5jKGAke3ZlcnNpb25lZERvY3NEaXJ9LyoqYClcbiAgICAuZm9yRWFjaCgoZmlsZSkgPT4gdHJhbnNsYXRlRG9jKGZpbGUsIHZlcnNpb25lZERvY3NEaXIpKTtcblxuICAvLyBsb29rIHRocm91Z2ggaGVhZGVyIGxpbmtzIGZvciB0ZXh0IHRvIHRyYW5zbGF0ZVxuICBzaXRlQ29uZmlnLmhlYWRlckxpbmtzLmZvckVhY2goKGxpbmspID0+IHtcbiAgICBpZiAobGluay5sYWJlbCkge1xuICAgICAgdHJhbnNsYXRpb25zWydsb2NhbGl6ZWQtc3RyaW5ncyddLmxpbmtzW2xpbmsubGFiZWxdID0gbGluay5sYWJlbDtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIGZpbmQgc2lkZWJhciBjYXRlZ29yeSB0aXRsZXMgdG8gdHJhbnNsYXRlXG4gIE9iamVjdC5rZXlzKHNpZGViYXJzKS5mb3JFYWNoKChzYikgPT4ge1xuICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBzaWRlYmFyc1tzYl07XG4gICAgT2JqZWN0LmtleXMoY2F0ZWdvcmllcykuZm9yRWFjaCgoY2F0ZWdvcnkpID0+IHtcbiAgICAgIHRyYW5zbGF0aW9uc1snbG9jYWxpemVkLXN0cmluZ3MnXS5jYXRlZ29yaWVzW2NhdGVnb3J5XSA9IGNhdGVnb3J5O1xuICAgIH0pO1xuICB9KTtcblxuICBnbG9iLnN5bmMoYCR7Q1dEfS92ZXJzaW9uZWRfc2lkZWJhcnMvKmApLmZvckVhY2goKGZpbGUpID0+IHtcbiAgICBpZiAoIWZpbGUuZW5kc1dpdGgoJy1zaWRlYmFycy5qc29uJykpIHtcbiAgICAgIGlmIChmaWxlLmVuZHNXaXRoKCctc2lkZWJhci5qc29uJykpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgIGBTa2lwcGluZyAke2ZpbGV9LiBNYWtlIHN1cmUgeW91ciBzaWRlYmFyIGZpbGVuYW1lcyBmb2xsb3cgdGhpcyBmb3JtYXQ6ICd2ZXJzaW9uLVZFUlNJT04tc2lkZWJhcnMuanNvbicuYCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHNpZGViYXJDb250ZW50O1xuICAgIHRyeSB7XG4gICAgICBzaWRlYmFyQ29udGVudCA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKGZpbGUsICd1dGY4JykpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYENvdWxkIG5vdCBwYXJzZSAke2ZpbGV9IGludG8ganNvbi4gJHtlfWApO1xuICAgICAgcHJvY2Vzcy5leGl0KDEpO1xuICAgIH1cblxuICAgIE9iamVjdC5rZXlzKHNpZGViYXJDb250ZW50KS5mb3JFYWNoKChzYikgPT4ge1xuICAgICAgY29uc3QgY2F0ZWdvcmllcyA9IHNpZGViYXJDb250ZW50W3NiXTtcbiAgICAgIE9iamVjdC5rZXlzKGNhdGVnb3JpZXMpLmZvckVhY2goKGNhdGVnb3J5KSA9PiB7XG4gICAgICAgIHRyYW5zbGF0aW9uc1snbG9jYWxpemVkLXN0cmluZ3MnXS5jYXRlZ29yaWVzW2NhdGVnb3J5XSA9IGNhdGVnb3J5O1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8vIGdvIHRocm91Z2ggcGFnZXMgdG8gbG9vayBmb3IgdGV4dCBpbnNpZGUgdHJhbnNsYXRlIHRhZ3NcbiAgZ2xvYi5zeW5jKGAke0NXRH0vcGFnZXMvZW4vKipgKS5mb3JFYWNoKChmaWxlKSA9PiB7XG4gICAgY29uc3QgZXh0ZW5zaW9uID0gbm9kZVBhdGguZXh0bmFtZShmaWxlKTtcbiAgICBpZiAoZXh0ZW5zaW9uID09PSAnLmpzJykge1xuICAgICAgY29uc3QgYXN0ID0gcGFyc2VKU1hGaWxlKGZpbGUpO1xuICAgICAgdHJhdmVyc2UoYXN0LCB7XG4gICAgICAgIGVudGVyKHBhdGgpIHtcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICBwYXRoLm5vZGUudHlwZSA9PT0gJ0pTWEVsZW1lbnQnICYmXG4gICAgICAgICAgICBwYXRoLm5vZGUub3BlbmluZ0VsZW1lbnQubmFtZS5uYW1lID09PSAndHJhbnNsYXRlJ1xuICAgICAgICAgICkge1xuICAgICAgICAgICAgY29uc3QgdGV4dCA9IHBhdGgubm9kZS5jaGlsZHJlblswXS52YWx1ZVxuICAgICAgICAgICAgICAudHJpbSgpXG4gICAgICAgICAgICAgIC5yZXBsYWNlKC9cXHMrL2csICcgJyk7XG4gICAgICAgICAgICBsZXQgZGVzY3JpcHRpb24gPSAnbm8gZGVzY3JpcHRpb24gZ2l2ZW4nO1xuICAgICAgICAgICAgY29uc3QgYXR0cmlidXRlcyA9IHBhdGgubm9kZS5vcGVuaW5nRWxlbWVudC5hdHRyaWJ1dGVzO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmIChhdHRyaWJ1dGVzW2ldLm5hbWUubmFtZSA9PT0gJ2Rlc2MnKSB7XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBhdHRyaWJ1dGVzW2ldLnZhbHVlLnZhbHVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmFuc2xhdGlvbnNbJ3BhZ2VzLXN0cmluZ3MnXVtgJHt0ZXh0fXwke2Rlc2NyaXB0aW9ufWBdID0gdGV4dDtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIE1hbnVhbGx5IGFkZCAnSGVscCBUcmFuc2xhdGUnIHRvIGVuLmpzb25cbiAgdHJhbnNsYXRpb25zWydwYWdlcy1zdHJpbmdzJ11bXG4gICAgJ0hlbHAgVHJhbnNsYXRlfHJlY3J1aXQgY29tbXVuaXR5IHRyYW5zbGF0b3JzIGZvciB5b3VyIHByb2plY3QnXG4gIF0gPSAnSGVscCBUcmFuc2xhdGUnO1xuICB0cmFuc2xhdGlvbnNbJ3BhZ2VzLXN0cmluZ3MnXVtcbiAgICAnRWRpdCB0aGlzIERvY3xyZWNydWl0bWVudCBtZXNzYWdlIGFza2luZyB0byBlZGl0IHRoZSBkb2Mgc291cmNlJ1xuICBdID0gJ0VkaXQnO1xuICB0cmFuc2xhdGlvbnNbJ3BhZ2VzLXN0cmluZ3MnXVtcbiAgICAnVHJhbnNsYXRlIHRoaXMgRG9jfHJlY3J1aXRtZW50IG1lc3NhZ2UgYXNraW5nIHRvIHRyYW5zbGF0ZSB0aGUgZG9jcydcbiAgXSA9ICdUcmFuc2xhdGUnO1xuICB0cmFuc2xhdGlvbnNbJ3BhZ2VzLXN0cmluZ3MnXSA9IE9iamVjdC5hc3NpZ24oXG4gICAgdHJhbnNsYXRpb25zWydwYWdlcy1zdHJpbmdzJ10sXG4gICAgY3VzdG9tVHJhbnNsYXRpb25zWydwYWdlcy1zdHJpbmdzJ10sXG4gICk7XG4gIHRyYW5zbGF0aW9uc1snbG9jYWxpemVkLXN0cmluZ3MnXSA9IF8ubWVyZ2UoXG4gICAge30sXG4gICAgdHJhbnNsYXRpb25zWydsb2NhbGl6ZWQtc3RyaW5ncyddLFxuICAgIGN1c3RvbVRyYW5zbGF0aW9uc1snbG9jYWxpemVkLXN0cmluZ3MnXSxcbiAgKTtcbiAgd3JpdGVGaWxlQW5kQ3JlYXRlRm9sZGVyKFxuICAgIGAke0NXRH0vaTE4bi9lbi5qc29uYCxcbiAgICBgJHtKU09OLnN0cmluZ2lmeShcbiAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgIHtcbiAgICAgICAgICBfY29tbWVudDogJ1RoaXMgZmlsZSBpcyBhdXRvLWdlbmVyYXRlZCBieSB3cml0ZS10cmFuc2xhdGlvbnMuanMnLFxuICAgICAgICB9LFxuICAgICAgICB0cmFuc2xhdGlvbnMsXG4gICAgICApLFxuICAgICAgbnVsbCxcbiAgICAgIDIsXG4gICAgKX1cXG5gLFxuICApO1xufVxuXG5leGVjdXRlKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZXhlY3V0ZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "write-translations.js"
      ],
      "names": [
        "require",
        "babelrc",
        "only",
        "__dirname",
        "process",
        "cwd",
        "plugins",
        "presets",
        "traverse",
        "babylon",
        "fs",
        "glob",
        "mkdirp",
        "nodePath",
        "_",
        "readMetadata",
        "CWD",
        "siteConfig",
        "sidebars",
        "customTranslations",
        "docs",
        "links",
        "categories",
        "existsSync",
        "merge",
        "JSON",
        "parse",
        "readFileSync",
        "parseJSXFile",
        "file",
        "e",
        "Error",
        "message",
        "writeFileAndCreateFolder",
        "content",
        "sync",
        "replace",
        "RegExp",
        "writeFileSync",
        "execute",
        "translations",
        "next",
        "previous",
        "tagline",
        "docsDir",
        "join",
        "getDocsPath",
        "versionedDocsDir",
        "translateDoc",
        "refDir",
        "extension",
        "extname",
        "res",
        "processMetadata",
        "console",
        "error",
        "exit",
        "metadata",
        "id",
        "localized_id",
        "title",
        "sidebar_label",
        "forEach",
        "headerLinks",
        "link",
        "label",
        "Object",
        "keys",
        "sb",
        "category",
        "endsWith",
        "warn",
        "sidebarContent",
        "ast",
        "enter",
        "path",
        "node",
        "type",
        "openingElement",
        "name",
        "text",
        "children",
        "value",
        "trim",
        "description",
        "attributes",
        "i",
        "length",
        "assign",
        "stringify",
        "_comment",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA;;;;;;;AAOA;;;AAEAA,OAAO,CAAC,iBAAD,CAAP,CAA2B;AACzBC,EAAAA,OAAO,EAAE,KADgB;AAEzBC,EAAAA,IAAI,EAAE,CAACC,SAAD,YAAeC,OAAO,CAACC,GAAR,EAAf,WAFmB;AAGzBC,EAAAA,OAAO,EAAE,CACPN,OAAO,CAAC,8BAAD,CADA,EAEPA,OAAO,CAAC,yCAAD,CAAP,WAFO,EAGPA,OAAO,CAAC,2CAAD,CAAP,WAHO,CAHgB;AAQzBO,EAAAA,OAAO,EAAE,CACPP,OAAO,CAAC,qBAAD,CAAP,WADO,EAEPA,OAAO,CAAC,mBAAD,CAAP,WAFO;AARgB,CAA3B;;AAcA,IAAMQ,QAAQ,GAAGR,OAAO,CAAC,iBAAD,CAAP,WAAjB;;AACA,IAAMS,OAAO,GAAGT,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMU,EAAE,GAAGV,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMW,IAAI,GAAGX,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMY,MAAM,GAAGZ,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMa,QAAQ,GAAGb,OAAO,CAAC,MAAD,CAAxB;;AACA,IAAMc,CAAC,GAAGd,OAAO,CAAC,QAAD,CAAjB;;AAEA,IAAMe,YAAY,GAAGf,OAAO,CAAC,0BAAD,CAA5B;;AAEA,IAAMgB,GAAG,GAAGZ,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMY,UAAU,GAAGjB,OAAO,WAAIgB,GAAJ,oBAA1B;;AACA,IAAME,QAAQ,GAAGlB,OAAO,WAAIgB,GAAJ,oBAAxB;;AAEA,IAAIG,kBAAkB,GAAG;AACvB,uBAAqB;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,UAAU,EAAE;AAHO,GADE;AAMvB,mBAAiB;AANM,CAAzB;;AAQA,IAAIZ,EAAE,CAACa,UAAH,WAAiBP,GAAjB,2CAAJ,EAAkE;AAChEG,EAAAA,kBAAkB,GAAGL,CAAC,CAACU,KAAF,CACnB,EADmB,EAEnBC,IAAI,CAACC,KAAL,CACEhB,EAAE,CAACiB,YAAH,WAAmBX,GAAnB,4CAA+D,MAA/D,CADF,CAFmB,EAKnBG,kBALmB,CAArB;AAOD;;AAED,SAASS,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAI;AACF,WAAOpB,OAAO,CAACiB,KAAR,CAAchB,EAAE,CAACiB,YAAH,CAAgBE,IAAhB,EAAsB,MAAtB,CAAd,EAA6C;AAClDvB,MAAAA,OAAO,EAAE,CAAC,KAAD;AADyC,KAA7C,CAAP;AAGD,GAJD,CAIE,OAAOwB,CAAP,EAAU;AACV,UAAM,IAAIC,KAAJ,4CAA8CF,IAA9C,eAAuDC,CAAC,CAACE,OAAzD,oGAAN;AAED;AACF;;AAED,SAASC,wBAAT,CAAkCJ,IAAlC,EAAwCK,OAAxC,EAAiD;AAC/CtB,EAAAA,MAAM,CAACuB,IAAP,CAAYN,IAAI,CAACO,OAAL,CAAa,IAAIC,MAAJ,CAAW,SAAX,CAAb,EAAoC,EAApC,CAAZ;AACA3B,EAAAA,EAAE,CAAC4B,aAAH,CAAiBT,IAAjB,EAAuBK,OAAvB;AACD;;AAED,SAASK,OAAT,GAAmB;AACjB,MAAMC,YAAY,GAAG;AACnB,yBAAqB;AACnBC,MAAAA,IAAI,EAAE,MADa;AAEnBC,MAAAA,QAAQ,EAAE,UAFS;AAGnBC,MAAAA,OAAO,EAAE1B,UAAU,CAAC0B,OAHD;AAInBvB,MAAAA,IAAI,EAAE,EAJa;AAKnBC,MAAAA,KAAK,EAAE,EALY;AAMnBC,MAAAA,UAAU,EAAE;AANO,KADF;AASnB,qBAAiB;AATE,GAArB,CADiB,CAajB;;AACA,MAAMsB,OAAO,GAAG/B,QAAQ,CAACgC,IAAT,CAAc7B,GAAd,EAAmB,KAAnB,EAA0BD,YAAY,CAAC+B,WAAb,EAA1B,CAAhB;AACA,MAAMC,gBAAgB,GAAGlC,QAAQ,CAACgC,IAAT,CAAc7B,GAAd,EAAmB,gBAAnB,CAAzB;;AAEA,MAAMgC,YAAY,GAAG,SAAfA,YAAe,CAACnB,IAAD,EAAOoB,MAAP,EAAkB;AACrC,QAAMC,SAAS,GAAGrC,QAAQ,CAACsC,OAAT,CAAiBtB,IAAjB,CAAlB;;AACA,QAAIqB,SAAS,KAAK,KAAd,IAAuBA,SAAS,KAAK,WAAzC,EAAsD;AACpD,UAAIE,GAAJ;;AACA,UAAI;AACFA,QAAAA,GAAG,GAAGrC,YAAY,CAACsC,eAAb,CAA6BxB,IAA7B,EAAmCoB,MAAnC,CAAN;AACD,OAFD,CAEE,OAAOnB,CAAP,EAAU;AACVwB,QAAAA,OAAO,CAACC,KAAR,CAAczB,CAAd;AACA1B,QAAAA,OAAO,CAACoD,IAAR,CAAa,CAAb;AACD;;AACD,UAAI,CAACJ,GAAL,EAAU;AACR;AACD;;AACD,UAAMK,QAAQ,GAAGL,GAAG,CAACK,QAArB;AACA,UAAMC,EAAE,GAAGD,QAAQ,CAACE,YAApB;AAEAnB,MAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkCpB,IAAlC,CAAuCsC,EAAvC,IAA6C,EAA7C;AACAlB,MAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkCpB,IAAlC,CAAuCsC,EAAvC,EAA2CE,KAA3C,GAAmDH,QAAQ,CAACG,KAA5D;;AAEA,UAAIH,QAAQ,CAACI,aAAb,EAA4B;AAC1BrB,QAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkCpB,IAAlC,CAAuCsC,EAAvC,EAA2CG,aAA3C,GACEJ,QAAQ,CAACI,aADX;AAED;AACF;AACF,GAxBD;;AAyBAlD,EAAAA,IAAI,CAACwB,IAAL,WAAaS,OAAb,UAA2BkB,OAA3B,CAAmC,UAACjC,IAAD;AAAA,WAAUmB,YAAY,CAACnB,IAAD,EAAOe,OAAP,CAAtB;AAAA,GAAnC;AACAjC,EAAAA,IAAI,CACDwB,IADH,WACWY,gBADX,UAEGe,OAFH,CAEW,UAACjC,IAAD;AAAA,WAAUmB,YAAY,CAACnB,IAAD,EAAOkB,gBAAP,CAAtB;AAAA,GAFX,EA3CiB,CA+CjB;;AACA9B,EAAAA,UAAU,CAAC8C,WAAX,CAAuBD,OAAvB,CAA+B,UAACE,IAAD,EAAU;AACvC,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdzB,MAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkCnB,KAAlC,CAAwC2C,IAAI,CAACC,KAA7C,IAAsDD,IAAI,CAACC,KAA3D;AACD;AACF,GAJD,EAhDiB,CAsDjB;;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYjD,QAAZ,EAAsB4C,OAAtB,CAA8B,UAACM,EAAD,EAAQ;AACpC,QAAM9C,UAAU,GAAGJ,QAAQ,CAACkD,EAAD,CAA3B;AACAF,IAAAA,MAAM,CAACC,IAAP,CAAY7C,UAAZ,EAAwBwC,OAAxB,CAAgC,UAACO,QAAD,EAAc;AAC5C7B,MAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkClB,UAAlC,CAA6C+C,QAA7C,IAAyDA,QAAzD;AACD,KAFD;AAGD,GALD;AAOA1D,EAAAA,IAAI,CAACwB,IAAL,WAAanB,GAAb,4BAAyC8C,OAAzC,CAAiD,UAACjC,IAAD,EAAU;AACzD,QAAI,CAACA,IAAI,CAACyC,QAAL,CAAc,gBAAd,CAAL,EAAsC;AACpC,UAAIzC,IAAI,CAACyC,QAAL,CAAc,eAAd,CAAJ,EAAoC;AAClChB,QAAAA,OAAO,CAACiB,IAAR,oBACc1C,IADd;AAGD;;AACD;AACD;;AACD,QAAI2C,cAAJ;;AACA,QAAI;AACFA,MAAAA,cAAc,GAAG/C,IAAI,CAACC,KAAL,CAAWhB,EAAE,CAACiB,YAAH,CAAgBE,IAAhB,EAAsB,MAAtB,CAAX,CAAjB;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVwB,MAAAA,OAAO,CAACC,KAAR,2BAAiC1B,IAAjC,yBAAoDC,CAApD;AACA1B,MAAAA,OAAO,CAACoD,IAAR,CAAa,CAAb;AACD;;AAEDU,IAAAA,MAAM,CAACC,IAAP,CAAYK,cAAZ,EAA4BV,OAA5B,CAAoC,UAACM,EAAD,EAAQ;AAC1C,UAAM9C,UAAU,GAAGkD,cAAc,CAACJ,EAAD,CAAjC;AACAF,MAAAA,MAAM,CAACC,IAAP,CAAY7C,UAAZ,EAAwBwC,OAAxB,CAAgC,UAACO,QAAD,EAAc;AAC5C7B,QAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkClB,UAAlC,CAA6C+C,QAA7C,IAAyDA,QAAzD;AACD,OAFD;AAGD,KALD;AAMD,GAvBD,EA9DiB,CAuFjB;;AACA1D,EAAAA,IAAI,CAACwB,IAAL,WAAanB,GAAb,mBAAgC8C,OAAhC,CAAwC,UAACjC,IAAD,EAAU;AAChD,QAAMqB,SAAS,GAAGrC,QAAQ,CAACsC,OAAT,CAAiBtB,IAAjB,CAAlB;;AACA,QAAIqB,SAAS,KAAK,KAAlB,EAAyB;AACvB,UAAMuB,GAAG,GAAG7C,YAAY,CAACC,IAAD,CAAxB;AACArB,MAAAA,QAAQ,CAACiE,GAAD,EAAM;AACZC,QAAAA,KADY,iBACNC,IADM,EACA;AACV,cACEA,IAAI,CAACC,IAAL,CAAUC,IAAV,KAAmB,YAAnB,IACAF,IAAI,CAACC,IAAL,CAAUE,cAAV,CAAyBC,IAAzB,CAA8BA,IAA9B,KAAuC,WAFzC,EAGE;AACA,gBAAMC,IAAI,GAAGL,IAAI,CAACC,IAAL,CAAUK,QAAV,CAAmB,CAAnB,EAAsBC,KAAtB,CACVC,IADU,GAEV/C,OAFU,CAEF,MAFE,EAEM,GAFN,CAAb;AAGA,gBAAIgD,WAAW,GAAG,sBAAlB;AACA,gBAAMC,UAAU,GAAGV,IAAI,CAACC,IAAL,CAAUE,cAAV,CAAyBO,UAA5C;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,kBAAID,UAAU,CAACC,CAAD,CAAV,CAAcP,IAAd,CAAmBA,IAAnB,KAA4B,MAAhC,EAAwC;AACtCK,gBAAAA,WAAW,GAAGC,UAAU,CAACC,CAAD,CAAV,CAAcJ,KAAd,CAAoBA,KAAlC;AACD;AACF;;AACD1C,YAAAA,YAAY,CAAC,eAAD,CAAZ,WAAiCwC,IAAjC,cAAyCI,WAAzC,KAA0DJ,IAA1D;AACD;AACF;AAlBW,OAAN,CAAR;AAoBD;AACF,GAzBD,EAxFiB,CAmHjB;;AACAxC,EAAAA,YAAY,CAAC,eAAD,CAAZ,CACE,+DADF,IAEI,gBAFJ;AAGAA,EAAAA,YAAY,CAAC,eAAD,CAAZ,CACE,iEADF,IAEI,MAFJ;AAGAA,EAAAA,YAAY,CAAC,eAAD,CAAZ,CACE,qEADF,IAEI,WAFJ;AAGAA,EAAAA,YAAY,CAAC,eAAD,CAAZ,GAAgC0B,MAAM,CAACsB,MAAP,CAC9BhD,YAAY,CAAC,eAAD,CADkB,EAE9BrB,kBAAkB,CAAC,eAAD,CAFY,CAAhC;AAIAqB,EAAAA,YAAY,CAAC,mBAAD,CAAZ,GAAoC1B,CAAC,CAACU,KAAF,CAClC,EADkC,EAElCgB,YAAY,CAAC,mBAAD,CAFsB,EAGlCrB,kBAAkB,CAAC,mBAAD,CAHgB,CAApC;AAKAc,EAAAA,wBAAwB,WACnBjB,GADmB,8BAEnBS,IAAI,CAACgE,SAAL,CACDvB,MAAM,CAACsB,MAAP,CACE;AACEE,IAAAA,QAAQ,EAAE;AADZ,GADF,EAIElD,YAJF,CADC,EAOD,IAPC,EAQD,CARC,CAFmB,QAAxB;AAaD;;AAEDD,OAAO;AAEPoD,MAAM,CAACC,OAAP,GAAiBrD,OAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\",
      "sourcesContent": [
        "#!/usr/bin/env node\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* generate the i18n/en.json file */\n\nrequire('@babel/register')({\n  babelrc: false,\n  only: [__dirname, `${process.cwd()}/core`],\n  plugins: [\n    require('./server/translate-plugin.js'),\n    require('@babel/plugin-proposal-class-properties').default,\n    require('@babel/plugin-proposal-object-rest-spread').default,\n  ],\n  presets: [\n    require('@babel/preset-react').default,\n    require('@babel/preset-env').default,\n  ],\n});\n\nconst traverse = require('@babel/traverse').default;\nconst babylon = require('babylon');\nconst fs = require('fs-extra');\nconst glob = require('glob');\nconst mkdirp = require('mkdirp');\nconst nodePath = require('path');\nconst _ = require('lodash');\n\nconst readMetadata = require('./server/readMetadata.js');\n\nconst CWD = process.cwd();\nconst siteConfig = require(`${CWD}/siteConfig.js`);\nconst sidebars = require(`${CWD}/sidebars.json`);\n\nlet customTranslations = {\n  'localized-strings': {\n    docs: {},\n    links: {},\n    categories: {},\n  },\n  'pages-strings': {},\n};\nif (fs.existsSync(`${CWD}/data/custom-translation-strings.json`)) {\n  customTranslations = _.merge(\n    {},\n    JSON.parse(\n      fs.readFileSync(`${CWD}/data/custom-translation-strings.json`, 'utf8'),\n    ),\n    customTranslations,\n  );\n}\n\nfunction parseJSXFile(file) {\n  try {\n    return babylon.parse(fs.readFileSync(file, 'utf8'), {\n      plugins: ['jsx'],\n    });\n  } catch (e) {\n    throw new Error(`Babylon parsing failure for file=${file}: ${e.message}\n    \\nNote: Docusaurus v1 currently uses Babylon v6, and <> fragment syntax is not supported`);\n  }\n}\n\nfunction writeFileAndCreateFolder(file, content) {\n  mkdirp.sync(file.replace(new RegExp('/[^/]*$'), ''));\n  fs.writeFileSync(file, content);\n}\n\nfunction execute() {\n  const translations = {\n    'localized-strings': {\n      next: 'Next',\n      previous: 'Previous',\n      tagline: siteConfig.tagline,\n      docs: {},\n      links: {},\n      categories: {},\n    },\n    'pages-strings': {},\n  };\n\n  // look through markdown headers of docs for titles and categories to translate\n  const docsDir = nodePath.join(CWD, '../', readMetadata.getDocsPath());\n  const versionedDocsDir = nodePath.join(CWD, 'versioned_docs');\n\n  const translateDoc = (file, refDir) => {\n    const extension = nodePath.extname(file);\n    if (extension === '.md' || extension === '.markdown') {\n      let res;\n      try {\n        res = readMetadata.processMetadata(file, refDir);\n      } catch (e) {\n        console.error(e);\n        process.exit(1);\n      }\n      if (!res) {\n        return;\n      }\n      const metadata = res.metadata;\n      const id = metadata.localized_id;\n\n      translations['localized-strings'].docs[id] = {};\n      translations['localized-strings'].docs[id].title = metadata.title;\n\n      if (metadata.sidebar_label) {\n        translations['localized-strings'].docs[id].sidebar_label =\n          metadata.sidebar_label;\n      }\n    }\n  };\n  glob.sync(`${docsDir}/**`).forEach((file) => translateDoc(file, docsDir));\n  glob\n    .sync(`${versionedDocsDir}/**`)\n    .forEach((file) => translateDoc(file, versionedDocsDir));\n\n  // look through header links for text to translate\n  siteConfig.headerLinks.forEach((link) => {\n    if (link.label) {\n      translations['localized-strings'].links[link.label] = link.label;\n    }\n  });\n\n  // find sidebar category titles to translate\n  Object.keys(sidebars).forEach((sb) => {\n    const categories = sidebars[sb];\n    Object.keys(categories).forEach((category) => {\n      translations['localized-strings'].categories[category] = category;\n    });\n  });\n\n  glob.sync(`${CWD}/versioned_sidebars/*`).forEach((file) => {\n    if (!file.endsWith('-sidebars.json')) {\n      if (file.endsWith('-sidebar.json')) {\n        console.warn(\n          `Skipping ${file}. Make sure your sidebar filenames follow this format: 'version-VERSION-sidebars.json'.`,\n        );\n      }\n      return;\n    }\n    let sidebarContent;\n    try {\n      sidebarContent = JSON.parse(fs.readFileSync(file, 'utf8'));\n    } catch (e) {\n      console.error(`Could not parse ${file} into json. ${e}`);\n      process.exit(1);\n    }\n\n    Object.keys(sidebarContent).forEach((sb) => {\n      const categories = sidebarContent[sb];\n      Object.keys(categories).forEach((category) => {\n        translations['localized-strings'].categories[category] = category;\n      });\n    });\n  });\n\n  // go through pages to look for text inside translate tags\n  glob.sync(`${CWD}/pages/en/**`).forEach((file) => {\n    const extension = nodePath.extname(file);\n    if (extension === '.js') {\n      const ast = parseJSXFile(file);\n      traverse(ast, {\n        enter(path) {\n          if (\n            path.node.type === 'JSXElement' &&\n            path.node.openingElement.name.name === 'translate'\n          ) {\n            const text = path.node.children[0].value\n              .trim()\n              .replace(/\\s+/g, ' ');\n            let description = 'no description given';\n            const attributes = path.node.openingElement.attributes;\n            for (let i = 0; i < attributes.length; i++) {\n              if (attributes[i].name.name === 'desc') {\n                description = attributes[i].value.value;\n              }\n            }\n            translations['pages-strings'][`${text}|${description}`] = text;\n          }\n        },\n      });\n    }\n  });\n\n  // Manually add 'Help Translate' to en.json\n  translations['pages-strings'][\n    'Help Translate|recruit community translators for your project'\n  ] = 'Help Translate';\n  translations['pages-strings'][\n    'Edit this Doc|recruitment message asking to edit the doc source'\n  ] = 'Edit';\n  translations['pages-strings'][\n    'Translate this Doc|recruitment message asking to translate the docs'\n  ] = 'Translate';\n  translations['pages-strings'] = Object.assign(\n    translations['pages-strings'],\n    customTranslations['pages-strings'],\n  );\n  translations['localized-strings'] = _.merge(\n    {},\n    translations['localized-strings'],\n    customTranslations['localized-strings'],\n  );\n  writeFileAndCreateFolder(\n    `${CWD}/i18n/en.json`,\n    `${JSON.stringify(\n      Object.assign(\n        {\n          _comment: 'This file is auto-generated by write-translations.js',\n        },\n        translations,\n      ),\n      null,\n      2,\n    )}\\n`,\n  );\n}\n\nexecute();\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\docs.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\docs.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\docs.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\docs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "docs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar _require = require('path'),\n    join = _require.join;\n\nvar _require2 = require('url'),\n    resolve = _require2.resolve;\n\nvar fs = require('fs-extra');\n\nvar React = require('react');\n\nvar env = require('./env.js');\n\nvar _require3 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require3.renderToStaticMarkupWithDoctype;\n\nvar readMetadata = require('./readMetadata.js');\n\nvar _require4 = require('../core/toc.js'),\n    insertTOC = _require4.insertTOC;\n\nvar _require5 = require('./utils.js'),\n    replaceAssetsLink = _require5.replaceAssetsLink;\n\nvar _require6 = require('../core/utils.js'),\n    getPath = _require6.getPath;\n\nfunction getFilePath(metadata) {\n  if (!metadata) {\n    return null;\n  }\n\n  var file;\n\n  if (env.versioning.enabled && metadata.original_id) {\n    if (env.translation.enabled && metadata.language !== 'en') {\n      file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n    } else {\n      file = join(CWD, 'versioned_docs', metadata.source);\n    }\n  } else if (env.translation.enabled && metadata.language !== 'en') {\n    file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n  } else {\n    file = join(CWD, '..', readMetadata.getDocsPath(), metadata.source);\n  }\n\n  return file;\n}\n\nfunction getFile(metadata) {\n  if (!metadata) {\n    return null;\n  }\n\n  var file = getFilePath(metadata);\n\n  if (!fs.existsSync(file)) {\n    return null;\n  }\n\n  return fs.readFileSync(file, 'utf8');\n}\n\nfunction mdToHtmlify(oldContent, mdToHtml, metadata, siteConfig) {\n  /* Store broken links */\n  var mdBrokenLinks = [];\n  var content = oldContent;\n  /* Replace internal markdown linking (except in fenced blocks) */\n\n  var fencedBlock = false;\n  var lines = content.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    if (fencedBlock) return line;\n    var modifiedLine = line;\n    /* Replace inline-style links or reference-style links e.g:\n    This is [Document 1](doc1.md) -> we replace this doc1.md with correct link\n    [doc1]: doc1.md -> we replace this doc1.md with correct link\n    */\n\n    var mdRegex = /(?:(?:\\]\\()|(?:\\]:\\s?))(?!https)([^'\")\\]\\s>]+\\.md)/g;\n    var mdMatch = mdRegex.exec(modifiedLine);\n\n    while (mdMatch !== null) {\n      /* Replace it to correct html link */\n      var docsSource = metadata.version ? metadata.source.replace(/version-.*?\\//, '') : metadata.source;\n      var htmlLink = mdToHtml[resolve(docsSource, mdMatch[1])] || mdToHtml[mdMatch[1]];\n\n      if (htmlLink) {\n        htmlLink = getPath(htmlLink, siteConfig.cleanUrl);\n        htmlLink = htmlLink.replace('/en/', \"/\".concat(metadata.language, \"/\"));\n        htmlLink = htmlLink.replace('/VERSION/', metadata.version && metadata.version !== env.versioning.latestVersion ? \"/\".concat(metadata.version, \"/\") : '/');\n        modifiedLine = modifiedLine.replace(mdMatch[1], htmlLink);\n      } else {\n        mdBrokenLinks.push(mdMatch[1]);\n      }\n\n      mdMatch = mdRegex.exec(modifiedLine);\n    }\n\n    return modifiedLine;\n  });\n  content = lines.join('\\n');\n\n  if (mdBrokenLinks.length) {\n    console.log(\"[WARN] unresolved links in file '\".concat(metadata.source, \"' >\"), mdBrokenLinks);\n  }\n\n  return content;\n}\n\nfunction getMarkup(rawContent, mdToHtml, metadata, siteConfig) {\n  // generate table of contents\n  var content = insertTOC(rawContent, siteConfig.slugPreprocessor); // replace any links to markdown files to their website html links\n\n  content = mdToHtmlify(content, mdToHtml, metadata, siteConfig); // replace any relative links to static assets (not in fenced code blocks) to absolute links\n\n  var docsAssetsLocation = siteConfig.docsUrl ? \"\".concat(siteConfig.baseUrl).concat(siteConfig.docsUrl) : siteConfig.baseUrl.substring(0, siteConfig.baseUrl.length - 1);\n  content = replaceAssetsLink(content, docsAssetsLocation);\n\n  var DocsLayout = require('../core/DocsLayout.js');\n\n  return renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(DocsLayout, {\n    metadata: metadata,\n    language: metadata.language,\n    config: siteConfig\n  }, content));\n}\n\nfunction getRedirectMarkup(metadata, siteConfig) {\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n\n  if (!env.translation.enabled || !metadata.permalink.includes(\"\".concat(docsPart, \"en\"))) {\n    return null;\n  }\n\n  var Redirect = require('../core/Redirect.js');\n\n  var redirectlink = getPath(metadata.permalink, siteConfig.cleanUrl);\n  return renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Redirect, {\n    metadata: metadata,\n    language: metadata.language,\n    config: siteConfig,\n    redirect: siteConfig.baseUrl + redirectlink\n  }));\n}\n\nmodule.exports = {\n  getMarkup: getMarkup,\n  getFile: getFile,\n  getFilePath: getFilePath,\n  getRedirectMarkup: getRedirectMarkup,\n  mdToHtmlify: mdToHtmlify\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "docs.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "require",
        "join",
        "resolve",
        "fs",
        "React",
        "env",
        "renderToStaticMarkupWithDoctype",
        "readMetadata",
        "insertTOC",
        "replaceAssetsLink",
        "getPath",
        "getFilePath",
        "metadata",
        "file",
        "versioning",
        "enabled",
        "original_id",
        "translation",
        "language",
        "source",
        "getDocsPath",
        "getFile",
        "existsSync",
        "readFileSync",
        "mdToHtmlify",
        "oldContent",
        "mdToHtml",
        "siteConfig",
        "mdBrokenLinks",
        "content",
        "fencedBlock",
        "lines",
        "split",
        "map",
        "line",
        "trim",
        "startsWith",
        "modifiedLine",
        "mdRegex",
        "mdMatch",
        "exec",
        "docsSource",
        "version",
        "replace",
        "htmlLink",
        "cleanUrl",
        "latestVersion",
        "push",
        "length",
        "console",
        "log",
        "getMarkup",
        "rawContent",
        "slugPreprocessor",
        "docsAssetsLocation",
        "docsUrl",
        "baseUrl",
        "substring",
        "DocsLayout",
        "getRedirectMarkup",
        "docsPart",
        "permalink",
        "includes",
        "Redirect",
        "redirectlink",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAMA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;eACeC,OAAO,CAAC,MAAD,C;IAAfC,I,YAAAA,I;;gBACWD,OAAO,CAAC,KAAD,C;IAAlBE,O,aAAAA,O;;AACP,IAAMC,EAAE,GAAGH,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMK,GAAG,GAAGL,OAAO,CAAC,UAAD,CAAnB;;gBAC0CA,OAAO,CAAC,eAAD,C;IAA1CM,+B,aAAAA,+B;;AACP,IAAMC,YAAY,GAAGP,OAAO,CAAC,mBAAD,CAA5B;;gBACoBA,OAAO,CAAC,gBAAD,C;IAApBQ,S,aAAAA,S;;gBACqBR,OAAO,CAAC,YAAD,C;IAA5BS,iB,aAAAA,iB;;gBACWT,OAAO,CAAC,kBAAD,C;IAAlBU,O,aAAAA,O;;AAEP,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AACD,MAAIC,IAAJ;;AACA,MAAIR,GAAG,CAACS,UAAJ,CAAeC,OAAf,IAA0BH,QAAQ,CAACI,WAAvC,EAAoD;AAClD,QAAIX,GAAG,CAACY,WAAJ,CAAgBF,OAAhB,IAA2BH,QAAQ,CAACM,QAAT,KAAsB,IAArD,EAA2D;AACzDL,MAAAA,IAAI,GAAGZ,IAAI,CAACJ,GAAD,EAAM,iBAAN,EAAyBe,QAAQ,CAACM,QAAlC,EAA4CN,QAAQ,CAACO,MAArD,CAAX;AACD,KAFD,MAEO;AACLN,MAAAA,IAAI,GAAGZ,IAAI,CAACJ,GAAD,EAAM,gBAAN,EAAwBe,QAAQ,CAACO,MAAjC,CAAX;AACD;AACF,GAND,MAMO,IAAId,GAAG,CAACY,WAAJ,CAAgBF,OAAhB,IAA2BH,QAAQ,CAACM,QAAT,KAAsB,IAArD,EAA2D;AAChEL,IAAAA,IAAI,GAAGZ,IAAI,CAACJ,GAAD,EAAM,iBAAN,EAAyBe,QAAQ,CAACM,QAAlC,EAA4CN,QAAQ,CAACO,MAArD,CAAX;AACD,GAFM,MAEA;AACLN,IAAAA,IAAI,GAAGZ,IAAI,CAACJ,GAAD,EAAM,IAAN,EAAYU,YAAY,CAACa,WAAb,EAAZ,EAAwCR,QAAQ,CAACO,MAAjD,CAAX;AACD;;AACD,SAAON,IAAP;AACD;;AAED,SAASQ,OAAT,CAAiBT,QAAjB,EAA2B;AACzB,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AACD,MAAMC,IAAI,GAAGF,WAAW,CAACC,QAAD,CAAxB;;AACA,MAAI,CAACT,EAAE,CAACmB,UAAH,CAAcT,IAAd,CAAL,EAA0B;AACxB,WAAO,IAAP;AACD;;AACD,SAAOV,EAAE,CAACoB,YAAH,CAAgBV,IAAhB,EAAsB,MAAtB,CAAP;AACD;;AAED,SAASW,WAAT,CAAqBC,UAArB,EAAiCC,QAAjC,EAA2Cd,QAA3C,EAAqDe,UAArD,EAAiE;AAC/D;AACA,MAAMC,aAAa,GAAG,EAAtB;AAEA,MAAIC,OAAO,GAAGJ,UAAd;AACA;;AACA,MAAIK,WAAW,GAAG,KAAlB;AACA,MAAMC,KAAK,GAAGF,OAAO,CAACG,KAAR,CAAc,IAAd,EAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAU;AAC9C,QAAIA,IAAI,CAACC,IAAL,GAAYC,UAAZ,CAAuB,KAAvB,CAAJ,EAAmC;AACjCN,MAAAA,WAAW,GAAG,CAACA,WAAf;AACD;;AACD,QAAIA,WAAJ,EAAiB,OAAOI,IAAP;AAEjB,QAAIG,YAAY,GAAGH,IAAnB;AACA;;;;;AAIA,QAAMI,OAAO,GAAG,qDAAhB;AACA,QAAIC,OAAO,GAAGD,OAAO,CAACE,IAAR,CAAaH,YAAb,CAAd;;AACA,WAAOE,OAAO,KAAK,IAAnB,EAAyB;AACvB;AACA,UAAME,UAAU,GAAG7B,QAAQ,CAAC8B,OAAT,GACf9B,QAAQ,CAACO,MAAT,CAAgBwB,OAAhB,CAAwB,eAAxB,EAAyC,EAAzC,CADe,GAEf/B,QAAQ,CAACO,MAFb;AAGA,UAAIyB,QAAQ,GACVlB,QAAQ,CAACxB,OAAO,CAACuC,UAAD,EAAaF,OAAO,CAAC,CAAD,CAApB,CAAR,CAAR,IAA6Cb,QAAQ,CAACa,OAAO,CAAC,CAAD,CAAR,CADvD;;AAEA,UAAIK,QAAJ,EAAc;AACZA,QAAAA,QAAQ,GAAGlC,OAAO,CAACkC,QAAD,EAAWjB,UAAU,CAACkB,QAAtB,CAAlB;AACAD,QAAAA,QAAQ,GAAGA,QAAQ,CAACD,OAAT,CAAiB,MAAjB,aAA6B/B,QAAQ,CAACM,QAAtC,OAAX;AACA0B,QAAAA,QAAQ,GAAGA,QAAQ,CAACD,OAAT,CACT,WADS,EAET/B,QAAQ,CAAC8B,OAAT,IAAoB9B,QAAQ,CAAC8B,OAAT,KAAqBrC,GAAG,CAACS,UAAJ,CAAegC,aAAxD,cACQlC,QAAQ,CAAC8B,OADjB,SAEI,GAJK,CAAX;AAMAL,QAAAA,YAAY,GAAGA,YAAY,CAACM,OAAb,CAAqBJ,OAAO,CAAC,CAAD,CAA5B,EAAiCK,QAAjC,CAAf;AACD,OAVD,MAUO;AACLhB,QAAAA,aAAa,CAACmB,IAAd,CAAmBR,OAAO,CAAC,CAAD,CAA1B;AACD;;AACDA,MAAAA,OAAO,GAAGD,OAAO,CAACE,IAAR,CAAaH,YAAb,CAAV;AACD;;AACD,WAAOA,YAAP;AACD,GApCa,CAAd;AAqCAR,EAAAA,OAAO,GAAGE,KAAK,CAAC9B,IAAN,CAAW,IAAX,CAAV;;AAEA,MAAI2B,aAAa,CAACoB,MAAlB,EAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,4CACsCtC,QAAQ,CAACO,MAD/C,UAEES,aAFF;AAID;;AACD,SAAOC,OAAP;AACD;;AAED,SAASsB,SAAT,CAAmBC,UAAnB,EAA+B1B,QAA/B,EAAyCd,QAAzC,EAAmDe,UAAnD,EAA+D;AAC7D;AACA,MAAIE,OAAO,GAAGrB,SAAS,CAAC4C,UAAD,EAAazB,UAAU,CAAC0B,gBAAxB,CAAvB,CAF6D,CAI7D;;AACAxB,EAAAA,OAAO,GAAGL,WAAW,CAACK,OAAD,EAAUH,QAAV,EAAoBd,QAApB,EAA8Be,UAA9B,CAArB,CAL6D,CAO7D;;AACA,MAAM2B,kBAAkB,GAAG3B,UAAU,CAAC4B,OAAX,aACpB5B,UAAU,CAAC6B,OADS,SACC7B,UAAU,CAAC4B,OADZ,IAEvB5B,UAAU,CAAC6B,OAAX,CAAmBC,SAAnB,CAA6B,CAA7B,EAAgC9B,UAAU,CAAC6B,OAAX,CAAmBR,MAAnB,GAA4B,CAA5D,CAFJ;AAGAnB,EAAAA,OAAO,GAAGpB,iBAAiB,CAACoB,OAAD,EAAUyB,kBAAV,CAA3B;;AAEA,MAAMI,UAAU,GAAG1D,OAAO,CAAC,uBAAD,CAA1B;;AACA,SAAOM,+BAA+B,eACpC,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEM,QADZ;AAEE,IAAA,QAAQ,EAAEA,QAAQ,CAACM,QAFrB;AAGE,IAAA,MAAM,EAAES;AAHV,KAIGE,OAJH,CADoC,CAAtC;AAQD;;AAED,SAAS8B,iBAAT,CAA2B/C,QAA3B,EAAqCe,UAArC,EAAiD;AAC/C,MAAMiC,QAAQ,aAAMjC,UAAU,CAAC4B,OAAX,aAAwB5B,UAAU,CAAC4B,OAAnC,SAAgD,EAAtD,CAAd;;AACA,MACE,CAAClD,GAAG,CAACY,WAAJ,CAAgBF,OAAjB,IACA,CAACH,QAAQ,CAACiD,SAAT,CAAmBC,QAAnB,WAA+BF,QAA/B,QAFH,EAGE;AACA,WAAO,IAAP;AACD;;AACD,MAAMG,QAAQ,GAAG/D,OAAO,CAAC,qBAAD,CAAxB;;AACA,MAAMgE,YAAY,GAAGtD,OAAO,CAACE,QAAQ,CAACiD,SAAV,EAAqBlC,UAAU,CAACkB,QAAhC,CAA5B;AACA,SAAOvC,+BAA+B,eACpC,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEM,QADZ;AAEE,IAAA,QAAQ,EAAEA,QAAQ,CAACM,QAFrB;AAGE,IAAA,MAAM,EAAES,UAHV;AAIE,IAAA,QAAQ,EAAEA,UAAU,CAAC6B,OAAX,GAAqBQ;AAJjC,IADoC,CAAtC;AAQD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACff,EAAAA,SAAS,EAATA,SADe;AAEf9B,EAAAA,OAAO,EAAPA,OAFe;AAGfV,EAAAA,WAAW,EAAXA,WAHe;AAIfgD,EAAAA,iBAAiB,EAAjBA,iBAJe;AAKfnC,EAAAA,WAAW,EAAXA;AALe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst CWD = process.cwd();\nconst {join} = require('path');\nconst {resolve} = require('url');\nconst fs = require('fs-extra');\nconst React = require('react');\n\nconst env = require('./env.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\nconst readMetadata = require('./readMetadata.js');\nconst {insertTOC} = require('../core/toc.js');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {getPath} = require('../core/utils.js');\n\nfunction getFilePath(metadata) {\n  if (!metadata) {\n    return null;\n  }\n  let file;\n  if (env.versioning.enabled && metadata.original_id) {\n    if (env.translation.enabled && metadata.language !== 'en') {\n      file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n    } else {\n      file = join(CWD, 'versioned_docs', metadata.source);\n    }\n  } else if (env.translation.enabled && metadata.language !== 'en') {\n    file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n  } else {\n    file = join(CWD, '..', readMetadata.getDocsPath(), metadata.source);\n  }\n  return file;\n}\n\nfunction getFile(metadata) {\n  if (!metadata) {\n    return null;\n  }\n  const file = getFilePath(metadata);\n  if (!fs.existsSync(file)) {\n    return null;\n  }\n  return fs.readFileSync(file, 'utf8');\n}\n\nfunction mdToHtmlify(oldContent, mdToHtml, metadata, siteConfig) {\n  /* Store broken links */\n  const mdBrokenLinks = [];\n\n  let content = oldContent;\n  /* Replace internal markdown linking (except in fenced blocks) */\n  let fencedBlock = false;\n  const lines = content.split('\\n').map((line) => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    if (fencedBlock) return line;\n\n    let modifiedLine = line;\n    /* Replace inline-style links or reference-style links e.g:\n    This is [Document 1](doc1.md) -> we replace this doc1.md with correct link\n    [doc1]: doc1.md -> we replace this doc1.md with correct link\n    */\n    const mdRegex = /(?:(?:\\]\\()|(?:\\]:\\s?))(?!https)([^'\")\\]\\s>]+\\.md)/g;\n    let mdMatch = mdRegex.exec(modifiedLine);\n    while (mdMatch !== null) {\n      /* Replace it to correct html link */\n      const docsSource = metadata.version\n        ? metadata.source.replace(/version-.*?\\//, '')\n        : metadata.source;\n      let htmlLink =\n        mdToHtml[resolve(docsSource, mdMatch[1])] || mdToHtml[mdMatch[1]];\n      if (htmlLink) {\n        htmlLink = getPath(htmlLink, siteConfig.cleanUrl);\n        htmlLink = htmlLink.replace('/en/', `/${metadata.language}/`);\n        htmlLink = htmlLink.replace(\n          '/VERSION/',\n          metadata.version && metadata.version !== env.versioning.latestVersion\n            ? `/${metadata.version}/`\n            : '/',\n        );\n        modifiedLine = modifiedLine.replace(mdMatch[1], htmlLink);\n      } else {\n        mdBrokenLinks.push(mdMatch[1]);\n      }\n      mdMatch = mdRegex.exec(modifiedLine);\n    }\n    return modifiedLine;\n  });\n  content = lines.join('\\n');\n\n  if (mdBrokenLinks.length) {\n    console.log(\n      `[WARN] unresolved links in file '${metadata.source}' >`,\n      mdBrokenLinks,\n    );\n  }\n  return content;\n}\n\nfunction getMarkup(rawContent, mdToHtml, metadata, siteConfig) {\n  // generate table of contents\n  let content = insertTOC(rawContent, siteConfig.slugPreprocessor);\n\n  // replace any links to markdown files to their website html links\n  content = mdToHtmlify(content, mdToHtml, metadata, siteConfig);\n\n  // replace any relative links to static assets (not in fenced code blocks) to absolute links\n  const docsAssetsLocation = siteConfig.docsUrl\n    ? `${siteConfig.baseUrl}${siteConfig.docsUrl}`\n    : siteConfig.baseUrl.substring(0, siteConfig.baseUrl.length - 1);\n  content = replaceAssetsLink(content, docsAssetsLocation);\n\n  const DocsLayout = require('../core/DocsLayout.js');\n  return renderToStaticMarkupWithDoctype(\n    <DocsLayout\n      metadata={metadata}\n      language={metadata.language}\n      config={siteConfig}>\n      {content}\n    </DocsLayout>,\n  );\n}\n\nfunction getRedirectMarkup(metadata, siteConfig) {\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  if (\n    !env.translation.enabled ||\n    !metadata.permalink.includes(`${docsPart}en`)\n  ) {\n    return null;\n  }\n  const Redirect = require('../core/Redirect.js');\n  const redirectlink = getPath(metadata.permalink, siteConfig.cleanUrl);\n  return renderToStaticMarkupWithDoctype(\n    <Redirect\n      metadata={metadata}\n      language={metadata.language}\n      config={siteConfig}\n      redirect={siteConfig.baseUrl + redirectlink}\n    />,\n  );\n}\n\nmodule.exports = {\n  getMarkup,\n  getFile,\n  getFilePath,\n  getRedirectMarkup,\n  mdToHtmlify,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\toc.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\toc.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\toc.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\toc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "toc.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _require = require('remarkable'),\n    Remarkable = _require.Remarkable;\n\nvar mdToc = require('markdown-toc');\n\nvar GithubSlugger = require('github-slugger');\n\nvar toSlug = require('./toSlug');\n\nvar tocRegex = new RegExp('<AUTOGENERATED_TABLE_OF_CONTENTS>', 'i');\n/**\n * Returns a table of content from the headings\n *\n * @return array\n * Array of heading objects with `hashLink`, `content` and `children` fields\n *\n */\n\nfunction getTOC(content) {\n  var headingTags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'h2';\n  var subHeadingTags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'h3';\n  var slugPreprocessor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n\n  var tagToLevel = function tagToLevel(tag) {\n    return Number(tag.slice(1));\n  };\n\n  var headingLevels = [].concat(headingTags).map(tagToLevel);\n  var subHeadingLevels = subHeadingTags ? [].concat(subHeadingTags).map(tagToLevel) : [];\n  var allowedHeadingLevels = headingLevels.concat(subHeadingLevels);\n  var md = new Remarkable({\n    // Enable HTML tags in source (same as './renderMarkdown.js')\n    html: true\n  });\n  var headings = mdToc(content).json;\n  var toc = [];\n  var slugger = new GithubSlugger();\n  var current;\n  headings.forEach(function (heading) {\n    var rawContent = heading.content;\n    var rendered = md.renderInline(rawContent);\n    var slugBase = slugPreprocessor && typeof slugPreprocessor === 'function' ? slugPreprocessor(rawContent) : rawContent;\n    var hashLink = toSlug(slugBase, slugger);\n\n    if (!allowedHeadingLevels.includes(heading.lvl)) {\n      return;\n    }\n\n    var entry = {\n      hashLink: hashLink,\n      rawContent: rawContent,\n      content: rendered,\n      children: []\n    };\n\n    if (headingLevels.includes(heading.lvl)) {\n      toc.push(entry);\n      current = entry;\n    } else if (current) {\n      current.children.push(entry);\n    }\n  });\n  return toc;\n} // takes the content of a doc article and returns the content with a table of\n// contents inserted\n\n\nfunction insertTOC(rawContent) {\n  var slugPreprocessor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  if (!rawContent || !tocRegex.test(rawContent)) {\n    return rawContent;\n  }\n\n  var filterRe = /^`[^`]*`/;\n  var headers = getTOC(rawContent, 'h3', null, slugPreprocessor);\n  var tableOfContents = headers.filter(function (header) {\n    return filterRe.test(header.rawContent);\n  }).map(function (header) {\n    return \"  - [\".concat(header.rawContent, \"](#\").concat(header.hashLink, \")\");\n  }).join('\\n');\n  return rawContent.replace(tocRegex, tableOfContents);\n}\n\nmodule.exports = {\n  getTOC: getTOC,\n  insertTOC: insertTOC\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiUmVtYXJrYWJsZSIsIm1kVG9jIiwiR2l0aHViU2x1Z2dlciIsInRvU2x1ZyIsInRvY1JlZ2V4IiwiUmVnRXhwIiwiZ2V0VE9DIiwiY29udGVudCIsImhlYWRpbmdUYWdzIiwic3ViSGVhZGluZ1RhZ3MiLCJzbHVnUHJlcHJvY2Vzc29yIiwidW5kZWZpbmVkIiwidGFnVG9MZXZlbCIsInRhZyIsIk51bWJlciIsInNsaWNlIiwiaGVhZGluZ0xldmVscyIsImNvbmNhdCIsIm1hcCIsInN1YkhlYWRpbmdMZXZlbHMiLCJhbGxvd2VkSGVhZGluZ0xldmVscyIsIm1kIiwiaHRtbCIsImhlYWRpbmdzIiwianNvbiIsInRvYyIsInNsdWdnZXIiLCJjdXJyZW50IiwiZm9yRWFjaCIsImhlYWRpbmciLCJyYXdDb250ZW50IiwicmVuZGVyZWQiLCJyZW5kZXJJbmxpbmUiLCJzbHVnQmFzZSIsImhhc2hMaW5rIiwiaW5jbHVkZXMiLCJsdmwiLCJlbnRyeSIsImNoaWxkcmVuIiwicHVzaCIsImluc2VydFRPQyIsInRlc3QiLCJmaWx0ZXJSZSIsImhlYWRlcnMiLCJ0YWJsZU9mQ29udGVudHMiLCJmaWx0ZXIiLCJoZWFkZXIiLCJqb2luIiwicmVwbGFjZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztlQU9xQkEsT0FBTyxDQUFDLFlBQUQsQztJQUFyQkMsVSxZQUFBQSxVOztBQUNQLElBQU1DLEtBQUssR0FBR0YsT0FBTyxDQUFDLGNBQUQsQ0FBckI7O0FBQ0EsSUFBTUcsYUFBYSxHQUFHSCxPQUFPLENBQUMsZ0JBQUQsQ0FBN0I7O0FBQ0EsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFNSyxRQUFRLEdBQUcsSUFBSUMsTUFBSixDQUFXLG1DQUFYLEVBQWdELEdBQWhELENBQWpCO0FBRUE7Ozs7Ozs7O0FBT0EsU0FBU0MsTUFBVCxDQUNFQyxPQURG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QSxXQUFZSixRQUFRLENBQUNELElBQVQsQ0FBY0ssTUFBTSxDQUFDaEIsVUFBckIsQ0FBWjtBQUFBLEdBRGMsRUFFckJaLEdBRnFCLENBRWpCLFVBQUM0QixNQUFEO0FBQUEsMEJBQW9CQSxNQUFNLENBQUNoQixVQUEzQixnQkFBMkNnQixNQUFNLENBQUNaLFFBQWxEO0FBQUEsR0FGaUIsRUFHckJhLElBSHFCLENBR2hCLElBSGdCLENBQXhCO0FBSUEsU0FBT2pCLFVBQVUsQ0FBQ2tCLE9BQVgsQ0FBbUI1QyxRQUFuQixFQUE2QndDLGVBQTdCLENBQVA7QUFDRDs7QUFFREssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2Y1QyxFQUFBQSxNQUFNLEVBQU5BLE1BRGU7QUFFZmtDLEVBQUFBLFNBQVMsRUFBVEE7QUFGZSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcY29yZVxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCB7UmVtYXJrYWJsZX0gPSByZXF1aXJlKCdyZW1hcmthYmxlJyk7XG5jb25zdCBtZFRvYyA9IHJlcXVpcmUoJ21hcmtkb3duLXRvYycpO1xuY29uc3QgR2l0aHViU2x1Z2dlciA9IHJlcXVpcmUoJ2dpdGh1Yi1zbHVnZ2VyJyk7XG5jb25zdCB0b1NsdWcgPSByZXF1aXJlKCcuL3RvU2x1ZycpO1xuXG5jb25zdCB0b2NSZWdleCA9IG5ldyBSZWdFeHAoJzxBVVRPR0VORVJBVEVEX1RBQkxFX09GX0NPTlRFTlRTPicsICdpJyk7XG5cbi8qKlxuICogUmV0dXJucyBhIHRhYmxlIG9mIGNvbnRlbnQgZnJvbSB0aGUgaGVhZGluZ3NcbiAqXG4gKiBAcmV0dXJuIGFycmF5XG4gKiBBcnJheSBvZiBoZWFkaW5nIG9iamVjdHMgd2l0aCBgaGFzaExpbmtgLCBgY29udGVudGAgYW5kIGBjaGlsZHJlbmAgZmllbGRzXG4gKlxuICovXG5mdW5jdGlvbiBnZXRUT0MoXG4gIGNvbnRlbnQsXG4gIGhlYWRpbmdUYWdzID0gJ2gyJyxcbiAgc3ViSGVhZGluZ1RhZ3MgPSAnaDMnLFxuICBzbHVnUHJlcHJvY2Vzc29yID0gdW5kZWZpbmVkLFxuKSB7XG4gIGNvbnN0IHRhZ1RvTGV2ZWwgPSAodGFnKSA9PiBOdW1iZXIodGFnLnNsaWNlKDEpKTtcbiAgY29uc3QgaGVhZGluZ0xldmVscyA9IFtdLmNvbmNhdChoZWFkaW5nVGFncykubWFwKHRhZ1RvTGV2ZWwpO1xuICBjb25zdCBzdWJIZWFkaW5nTGV2ZWxzID0gc3ViSGVhZGluZ1RhZ3NcbiAgICA/IFtdLmNvbmNhdChzdWJIZWFkaW5nVGFncykubWFwKHRhZ1RvTGV2ZWwpXG4gICAgOiBbXTtcbiAgY29uc3QgYWxsb3dlZEhlYWRpbmdMZXZlbHMgPSBoZWFkaW5nTGV2ZWxzLmNvbmNhdChzdWJIZWFkaW5nTGV2ZWxzKTtcbiAgY29uc3QgbWQgPSBuZXcgUmVtYXJrYWJsZSh7XG4gICAgLy8gRW5hYmxlIEhUTUwgdGFncyBpbiBzb3VyY2UgKHNhbWUgYXMgJy4vcmVuZGVyTWFya2Rvd24uanMnKVxuICAgIGh0bWw6IHRydWUsXG4gIH0pO1xuICBjb25zdCBoZWFkaW5ncyA9IG1kVG9jKGNvbnRlbnQpLmpzb247XG4gIGNvbnN0IHRvYyA9IFtdO1xuICBjb25zdCBzbHVnZ2VyID0gbmV3IEdpdGh1YlNsdWdnZXIoKTtcbiAgbGV0IGN1cnJlbnQ7XG5cbiAgaGVhZGluZ3MuZm9yRWFjaCgoaGVhZGluZykgPT4ge1xuICAgIGNvbnN0IHJhd0NvbnRlbnQgPSBoZWFkaW5nLmNvbnRlbnQ7XG4gICAgY29uc3QgcmVuZGVyZWQgPSBtZC5yZW5kZXJJbmxpbmUocmF3Q29udGVudCk7XG4gICAgY29uc3Qgc2x1Z0Jhc2UgPVxuICAgICAgc2x1Z1ByZXByb2Nlc3NvciAmJiB0eXBlb2Ygc2x1Z1ByZXByb2Nlc3NvciA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/IHNsdWdQcmVwcm9jZXNzb3IocmF3Q29udGVudClcbiAgICAgICAgOiByYXdDb250ZW50O1xuICAgIGNvbnN0IGhhc2hMaW5rID0gdG9TbHVnKHNsdWdCYXNlLCBzbHVnZ2VyKTtcbiAgICBpZiAoIWFsbG93ZWRIZWFkaW5nTGV2ZWxzLmluY2x1ZGVzKGhlYWRpbmcubHZsKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBlbnRyeSA9IHtcbiAgICAgIGhhc2hMaW5rLFxuICAgICAgcmF3Q29udGVudCxcbiAgICAgIGNvbnRlbnQ6IHJlbmRlcmVkLFxuICAgICAgY2hpbGRyZW46IFtdLFxuICAgIH07XG4gICAgaWYgKGhlYWRpbmdMZXZlbHMuaW5jbHVkZXMoaGVhZGluZy5sdmwpKSB7XG4gICAgICB0b2MucHVzaChlbnRyeSk7XG4gICAgICBjdXJyZW50ID0gZW50cnk7XG4gICAgfSBlbHNlIGlmIChjdXJyZW50KSB7XG4gICAgICBjdXJyZW50LmNoaWxkcmVuLnB1c2goZW50cnkpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB0b2M7XG59XG5cbi8vIHRha2VzIHRoZSBjb250ZW50IG9mIGEgZG9jIGFydGljbGUgYW5kIHJldHVybnMgdGhlIGNvbnRlbnQgd2l0aCBhIHRhYmxlIG9mXG4vLyBjb250ZW50cyBpbnNlcnRlZFxuZnVuY3Rpb24gaW5zZXJ0VE9DKHJhd0NvbnRlbnQsIHNsdWdQcmVwcm9jZXNzb3IgPSB1bmRlZmluZWQpIHtcbiAgaWYgKCFyYXdDb250ZW50IHx8ICF0b2NSZWdleC50ZXN0KHJhd0NvbnRlbnQpKSB7XG4gICAgcmV0dXJuIHJhd0NvbnRlbnQ7XG4gIH1cbiAgY29uc3QgZmlsdGVyUmUgPSAvXmBbXmBdKmAvO1xuICBjb25zdCBoZWFkZXJzID0gZ2V0VE9DKHJhd0NvbnRlbnQsICdoMycsIG51bGwsIHNsdWdQcmVwcm9jZXNzb3IpO1xuICBjb25zdCB0YWJsZU9mQ29udGVudHMgPSBoZWFkZXJzXG4gICAgLmZpbHRlcigoaGVhZGVyKSA9PiBmaWx0ZXJSZS50ZXN0KGhlYWRlci5yYXdDb250ZW50KSlcbiAgICAubWFwKChoZWFkZXIpID0+IGAgIC0gWyR7aGVhZGVyLnJhd0NvbnRlbnR9XSgjJHtoZWFkZXIuaGFzaExpbmt9KWApXG4gICAgLmpvaW4oJ1xcbicpO1xuICByZXR1cm4gcmF3Q29udGVudC5yZXBsYWNlKHRvY1JlZ2V4LCB0YWJsZU9mQ29udGVudHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0VE9DLFxuICBpbnNlcnRUT0MsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "toc.js"
      ],
      "names": [
        "require",
        "Remarkable",
        "mdToc",
        "GithubSlugger",
        "toSlug",
        "tocRegex",
        "RegExp",
        "getTOC",
        "content",
        "headingTags",
        "subHeadingTags",
        "slugPreprocessor",
        "undefined",
        "tagToLevel",
        "tag",
        "Number",
        "slice",
        "headingLevels",
        "concat",
        "map",
        "subHeadingLevels",
        "allowedHeadingLevels",
        "md",
        "html",
        "headings",
        "json",
        "toc",
        "slugger",
        "current",
        "forEach",
        "heading",
        "rawContent",
        "rendered",
        "renderInline",
        "slugBase",
        "hashLink",
        "includes",
        "lvl",
        "entry",
        "children",
        "push",
        "insertTOC",
        "test",
        "filterRe",
        "headers",
        "tableOfContents",
        "filter",
        "header",
        "join",
        "replace",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst {Remarkable} = require('remarkable');\nconst mdToc = require('markdown-toc');\nconst GithubSlugger = require('github-slugger');\nconst toSlug = require('./toSlug');\n\nconst tocRegex = new RegExp('<AUTOGENERATED_TABLE_OF_CONTENTS>', 'i');\n\n/**\n * Returns a table of content from the headings\n *\n * @return array\n * Array of heading objects with `hashLink`, `content` and `children` fields\n *\n */\nfunction getTOC(\n  content,\n  headingTags = 'h2',\n  subHeadingTags = 'h3',\n  slugPreprocessor = undefined,\n) {\n  const tagToLevel = (tag) => Number(tag.slice(1));\n  const headingLevels = [].concat(headingTags).map(tagToLevel);\n  const subHeadingLevels = subHeadingTags\n    ? [].concat(subHeadingTags).map(tagToLevel)\n    : [];\n  const allowedHeadingLevels = headingLevels.concat(subHeadingLevels);\n  const md = new Remarkable({\n    // Enable HTML tags in source (same as './renderMarkdown.js')\n    html: true,\n  });\n  const headings = mdToc(content).json;\n  const toc = [];\n  const slugger = new GithubSlugger();\n  let current;\n\n  headings.forEach((heading) => {\n    const rawContent = heading.content;\n    const rendered = md.renderInline(rawContent);\n    const slugBase =\n      slugPreprocessor && typeof slugPreprocessor === 'function'\n        ? slugPreprocessor(rawContent)\n        : rawContent;\n    const hashLink = toSlug(slugBase, slugger);\n    if (!allowedHeadingLevels.includes(heading.lvl)) {\n      return;\n    }\n    const entry = {\n      hashLink,\n      rawContent,\n      content: rendered,\n      children: [],\n    };\n    if (headingLevels.includes(heading.lvl)) {\n      toc.push(entry);\n      current = entry;\n    } else if (current) {\n      current.children.push(entry);\n    }\n  });\n  return toc;\n}\n\n// takes the content of a doc article and returns the content with a table of\n// contents inserted\nfunction insertTOC(rawContent, slugPreprocessor = undefined) {\n  if (!rawContent || !tocRegex.test(rawContent)) {\n    return rawContent;\n  }\n  const filterRe = /^`[^`]*`/;\n  const headers = getTOC(rawContent, 'h3', null, slugPreprocessor);\n  const tableOfContents = headers\n    .filter((header) => filterRe.test(header.rawContent))\n    .map((header) => `  - [${header.rawContent}](#${header.hashLink})`)\n    .join('\\n');\n  return rawContent.replace(tocRegex, tableOfContents);\n}\n\nmodule.exports = {\n  getTOC,\n  insertTOC,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\toSlug.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\toSlug.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\toSlug.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\toSlug.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "toSlug.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar GitHubSlugger = require('github-slugger');\n/**\n * Converts a string to a slug, that can be used in heading anchors\n *\n * @param  {string} string\n * @param  {() => string} [slugger] - reused slugger to track used slugs and\n *                                 ensure that new slug will be unique\n *\n * @return {string}\n */\n\n\nmodule.exports = function (string) {\n  var slugger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new GitHubSlugger();\n  return slugger.slug(string);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvU2x1Zy5qcyJdLCJuYW1lcyI6WyJHaXRIdWJTbHVnZ2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdHJpbmciLCJzbHVnZ2VyIiwic2x1ZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsYUFBYSxHQUFHQyxPQUFPLENBQUMsZ0JBQUQsQ0FBN0I7QUFFQTs7Ozs7Ozs7Ozs7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLE1BQUQsRUFBMkM7QUFBQSxNQUFsQ0MsT0FBa0MsdUVBQXhCLElBQUlMLGFBQUosRUFBd0I7QUFDMUQsU0FBT0ssT0FBTyxDQUFDQyxJQUFSLENBQWFGLE1BQWIsQ0FBUDtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcRGVza3RvcFxcQmxvZ1xcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXGNvcmVcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgR2l0SHViU2x1Z2dlciA9IHJlcXVpcmUoJ2dpdGh1Yi1zbHVnZ2VyJyk7XG5cbi8qKlxuICogQ29udmVydHMgYSBzdHJpbmcgdG8gYSBzbHVnLCB0aGF0IGNhbiBiZSB1c2VkIGluIGhlYWRpbmcgYW5jaG9yc1xuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyaW5nXG4gKiBAcGFyYW0gIHsoKSA9PiBzdHJpbmd9IFtzbHVnZ2VyXSAtIHJldXNlZCBzbHVnZ2VyIHRvIHRyYWNrIHVzZWQgc2x1Z3MgYW5kXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuc3VyZSB0aGF0IG5ldyBzbHVnIHdpbGwgYmUgdW5pcXVlXG4gKlxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IChzdHJpbmcsIHNsdWdnZXIgPSBuZXcgR2l0SHViU2x1Z2dlcigpKSA9PiB7XG4gIHJldHVybiBzbHVnZ2VyLnNsdWcoc3RyaW5nKTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "toSlug.js"
      ],
      "names": [
        "GitHubSlugger",
        "require",
        "module",
        "exports",
        "string",
        "slugger",
        "slug"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;AAEA;;;;;;;;;;;AASAC,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAA2C;AAAA,MAAlCC,OAAkC,uEAAxB,IAAIL,aAAJ,EAAwB;AAC1D,SAAOK,OAAO,CAACC,IAAR,CAAaF,MAAb,CAAP;AACD,CAFD",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst GitHubSlugger = require('github-slugger');\n\n/**\n * Converts a string to a slug, that can be used in heading anchors\n *\n * @param  {string} string\n * @param  {() => string} [slugger] - reused slugger to track used slugs and\n *                                 ensure that new slug will be unique\n *\n * @return {string}\n */\nmodule.exports = (string, slugger = new GitHubSlugger()) => {\n  return slugger.slug(string);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\utils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\utils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar shell = require('shelljs');\n\nvar TRUNCATE_MARKER = /<!--\\s*truncate\\s*-->/;\n\nfunction blogPostHasTruncateMarker(content) {\n  return TRUNCATE_MARKER.test(content);\n}\n\nfunction extractBlogPostBeforeTruncate(content) {\n  return content.split(TRUNCATE_MARKER)[0];\n}\n\nfunction removeExtension(pathStr) {\n  return pathStr.replace(/\\.[^/.]+$/, '');\n}\n\nfunction getPath(pathStr) {\n  var cleanUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!pathStr || !cleanUrl || !pathStr.endsWith('.html')) {\n    return pathStr;\n  }\n\n  return pathStr.endsWith('/index.html') ? pathStr.replace(/index\\.html$/, '') : removeExtension(pathStr);\n}\n\nfunction idx(target, keyPaths) {\n  return target && (Array.isArray(keyPaths) ? keyPaths.reduce(function (obj, key) {\n    return obj && obj[key];\n  }, target) : target[keyPaths]);\n}\n\nfunction getGitLastUpdated(filepath) {\n  var timestampAndAuthorRegex = /^(\\d+), (.+)$/;\n\n  function isTimestampAndAuthor(str) {\n    return timestampAndAuthorRegex.test(str);\n  }\n\n  function getTimestampAndAuthor(str) {\n    if (!str) {\n      return null;\n    }\n\n    var temp = str.match(timestampAndAuthorRegex);\n    return !temp || temp.length < 3 ? null : {\n      timestamp: temp[1],\n      author: temp[2]\n    };\n  } // Wrap in try/catch in case the shell commands fail (e.g. project doesn't use Git, etc).\n\n\n  try {\n    // To differentiate between content change and file renaming / moving, use --summary\n    // To follow the file history until before it is moved (when we create new version), use\n    // --follow.\n    var silentState = shell.config.silent; // Save old silent state.\n\n    shell.config.silent = true;\n    var result = shell.exec(\"git log --follow --summary --format=\\\"%ct, %an\\\" \\\"\".concat(filepath, \"\\\"\")).stdout.trim();\n    shell.config.silent = silentState; // Format the log results to be\n    // ['1234567890, Yangshun Tay', 'rename ...', '1234567880,\n    //  'Joel Marcey', 'move ...', '1234567870', '1234567860']\n\n    var records = result.toString('utf-8').replace(/\\n\\s*\\n/g, '\\n').split('\\n').filter(String);\n    var lastContentModifierCommit = records.find(function (item, index, arr) {\n      var currentItemIsTimestampAndAuthor = isTimestampAndAuthor(item);\n      var isLastTwoItem = index + 2 >= arr.length;\n      var nextItemIsTimestampAndAuthor = isTimestampAndAuthor(arr[index + 1]);\n      return currentItemIsTimestampAndAuthor && (isLastTwoItem || nextItemIsTimestampAndAuthor);\n    });\n    return lastContentModifierCommit ? getTimestampAndAuthor(lastContentModifierCommit) : null;\n  } catch (error) {\n    console.error(error);\n  }\n\n  return null;\n}\n\nfunction getGitLastUpdatedTime(filepath) {\n  var commit = getGitLastUpdated(filepath);\n\n  if (commit && commit.timestamp) {\n    var date = new Date(parseInt(commit.timestamp, 10) * 1000);\n    return date.toLocaleDateString();\n  }\n\n  return null;\n}\n\nfunction getGitLastUpdatedBy(filepath) {\n  var commit = getGitLastUpdated(filepath);\n  return commit ? commit.author : null;\n}\n\nmodule.exports = {\n  blogPostHasTruncateMarker: blogPostHasTruncateMarker,\n  extractBlogPostBeforeTruncate: extractBlogPostBeforeTruncate,\n  getGitLastUpdatedTime: getGitLastUpdatedTime,\n  getGitLastUpdatedBy: getGitLastUpdatedBy,\n  getPath: getPath,\n  removeExtension: removeExtension,\n  idx: idx\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "shell",
        "require",
        "TRUNCATE_MARKER",
        "blogPostHasTruncateMarker",
        "content",
        "test",
        "extractBlogPostBeforeTruncate",
        "split",
        "removeExtension",
        "pathStr",
        "replace",
        "getPath",
        "cleanUrl",
        "endsWith",
        "idx",
        "target",
        "keyPaths",
        "Array",
        "isArray",
        "reduce",
        "obj",
        "key",
        "getGitLastUpdated",
        "filepath",
        "timestampAndAuthorRegex",
        "isTimestampAndAuthor",
        "str",
        "getTimestampAndAuthor",
        "temp",
        "match",
        "length",
        "timestamp",
        "author",
        "silentState",
        "config",
        "silent",
        "result",
        "exec",
        "stdout",
        "trim",
        "records",
        "toString",
        "filter",
        "String",
        "lastContentModifierCommit",
        "find",
        "item",
        "index",
        "arr",
        "currentItemIsTimestampAndAuthor",
        "isLastTwoItem",
        "nextItemIsTimestampAndAuthor",
        "error",
        "console",
        "getGitLastUpdatedTime",
        "commit",
        "date",
        "Date",
        "parseInt",
        "toLocaleDateString",
        "getGitLastUpdatedBy",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst shell = require('shelljs');\n\nconst TRUNCATE_MARKER = /<!--\\s*truncate\\s*-->/;\n\nfunction blogPostHasTruncateMarker(content) {\n  return TRUNCATE_MARKER.test(content);\n}\n\nfunction extractBlogPostBeforeTruncate(content) {\n  return content.split(TRUNCATE_MARKER)[0];\n}\n\nfunction removeExtension(pathStr) {\n  return pathStr.replace(/\\.[^/.]+$/, '');\n}\n\nfunction getPath(pathStr, cleanUrl = false) {\n  if (!pathStr || !cleanUrl || !pathStr.endsWith('.html')) {\n    return pathStr;\n  }\n  return pathStr.endsWith('/index.html')\n    ? pathStr.replace(/index\\.html$/, '')\n    : removeExtension(pathStr);\n}\n\nfunction idx(target, keyPaths) {\n  return (\n    target &&\n    (Array.isArray(keyPaths)\n      ? keyPaths.reduce((obj, key) => obj && obj[key], target)\n      : target[keyPaths])\n  );\n}\n\nfunction getGitLastUpdated(filepath) {\n  const timestampAndAuthorRegex = /^(\\d+), (.+)$/;\n\n  function isTimestampAndAuthor(str) {\n    return timestampAndAuthorRegex.test(str);\n  }\n\n  function getTimestampAndAuthor(str) {\n    if (!str) {\n      return null;\n    }\n\n    const temp = str.match(timestampAndAuthorRegex);\n    return !temp || temp.length < 3\n      ? null\n      : {timestamp: temp[1], author: temp[2]};\n  }\n\n  // Wrap in try/catch in case the shell commands fail (e.g. project doesn't use Git, etc).\n  try {\n    // To differentiate between content change and file renaming / moving, use --summary\n    // To follow the file history until before it is moved (when we create new version), use\n    // --follow.\n    const silentState = shell.config.silent; // Save old silent state.\n    shell.config.silent = true;\n    const result = shell\n      .exec(`git log --follow --summary --format=\"%ct, %an\" \"${filepath}\"`)\n      .stdout.trim();\n    shell.config.silent = silentState;\n\n    // Format the log results to be\n    // ['1234567890, Yangshun Tay', 'rename ...', '1234567880,\n    //  'Joel Marcey', 'move ...', '1234567870', '1234567860']\n    const records = result\n      .toString('utf-8')\n      .replace(/\\n\\s*\\n/g, '\\n')\n      .split('\\n')\n      .filter(String);\n    const lastContentModifierCommit = records.find((item, index, arr) => {\n      const currentItemIsTimestampAndAuthor = isTimestampAndAuthor(item);\n      const isLastTwoItem = index + 2 >= arr.length;\n      const nextItemIsTimestampAndAuthor = isTimestampAndAuthor(arr[index + 1]);\n      return (\n        currentItemIsTimestampAndAuthor &&\n        (isLastTwoItem || nextItemIsTimestampAndAuthor)\n      );\n    });\n\n    return lastContentModifierCommit\n      ? getTimestampAndAuthor(lastContentModifierCommit)\n      : null;\n  } catch (error) {\n    console.error(error);\n  }\n  return null;\n}\n\nfunction getGitLastUpdatedTime(filepath) {\n  const commit = getGitLastUpdated(filepath);\n\n  if (commit && commit.timestamp) {\n    const date = new Date(parseInt(commit.timestamp, 10) * 1000);\n    return date.toLocaleDateString();\n  }\n\n  return null;\n}\n\nfunction getGitLastUpdatedBy(filepath) {\n  const commit = getGitLastUpdated(filepath);\n  return commit ? commit.author : null;\n}\n\nmodule.exports = {\n  blogPostHasTruncateMarker,\n  extractBlogPostBeforeTruncate,\n  getGitLastUpdatedTime,\n  getGitLastUpdatedBy,\n  getPath,\n  removeExtension,\n  idx,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\translate.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\translate.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\translate.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\translate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "translate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar translation = require('./translation.js');\n\nvar language = 'en';\n/* handle escaped characters that get converted into json strings */\n\nfunction parseEscapeSequences(str) {\n  return str.replace(new RegExp('\\\\\\\\n', 'g'), '\\n').replace(new RegExp('\\\\\\\\b', 'g'), '\\b').replace(new RegExp('\\\\\\\\f', 'g'), '\\f').replace(new RegExp('\\\\\\\\r', 'g'), '\\r').replace(new RegExp('\\\\\\\\t', 'g'), '\\t').replace(new RegExp(\"\\\\\\\\'\", 'g'), \"'\").replace(new RegExp('\\\\\\\\\"', 'g'), '\"').replace(new RegExp('\\\\\\\\', 'g'), '\\\\');\n}\n\nfunction setLanguage(lang) {\n  language = lang;\n}\n\nfunction doesTranslationExist(str, lang) {\n  return translation[lang] && translation[lang]['pages-strings'] && translation[lang]['pages-strings'][str];\n}\n\nfunction translate(str) {\n  if (!language || language === '') {\n    // Check English, just in case; otherwise, just return the raw string back\n    if (doesTranslationExist(str, 'en')) {\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n\n    return str;\n  }\n\n  if (!doesTranslationExist(str, language)) {\n    // if a translated string doesn't exist, but english does then fallback\n    if (doesTranslationExist(str, 'en')) {\n      console.error(\"Could not find a string translation in '\".concat(language, \"' for string '\").concat(str, \"'. Using English version instead.\"));\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n\n    throw new Error(\"Text that you've identified for translation ('\".concat(str, \"') hasn't been added to the global list in 'en.json'. To solve this problem run 'yarn write-translations'.\"));\n  }\n\n  return parseEscapeSequences(translation[language]['pages-strings'][str]);\n}\n\nmodule.exports = {\n  setLanguage: setLanguage,\n  translate: translate\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0ZS5qcyJdLCJuYW1lcyI6WyJ0cmFuc2xhdGlvbiIsInJlcXVpcmUiLCJsYW5ndWFnZSIsInBhcnNlRXNjYXBlU2VxdWVuY2VzIiwic3RyIiwicmVwbGFjZSIsIlJlZ0V4cCIsInNldExhbmd1YWdlIiwibGFuZyIsImRvZXNUcmFuc2xhdGlvbkV4aXN0IiwidHJhbnNsYXRlIiwiZW4iLCJjb25zb2xlIiwiZXJyb3IiLCJFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQTNCOztBQUVBLElBQUlDLFFBQVEsR0FBRyxJQUFmO0FBRUE7O0FBQ0EsU0FBU0Msb0JBQVQsQ0FBOEJDLEdBQTlCLEVBQW1DO0FBQ2pDLFNBQU9BLEdBQUcsQ0FDUEMsT0FESSxDQUNJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBREosRUFDOEIsSUFEOUIsRUFFSkQsT0FGSSxDQUVJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBRkosRUFFOEIsSUFGOUIsRUFHSkQsT0FISSxDQUdJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBSEosRUFHOEIsSUFIOUIsRUFJSkQsT0FKSSxDQUlJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBSkosRUFJOEIsSUFKOUIsRUFLSkQsT0FMSSxDQUtJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBTEosRUFLOEIsSUFMOUIsRUFNSkQsT0FOSSxDQU1JLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBTkosRUFNOEIsR0FOOUIsRUFPSkQsT0FQSSxDQU9JLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBUEosRUFPOEIsR0FQOUIsRUFRSkQsT0FSSSxDQVFJLElBQUlDLE1BQUosQ0FBVyxNQUFYLEVBQW1CLEdBQW5CLENBUkosRUFRNkIsSUFSN0IsQ0FBUDtBQVNEOztBQUVELFNBQVNDLFdBQVQsQ0FBcUJDLElBQXJCLEVBQTJCO0FBQ3pCTixFQUFBQSxRQUFRLEdBQUdNLElBQVg7QUFDRDs7QUFFRCxTQUFTQyxvQkFBVCxDQUE4QkwsR0FBOUIsRUFBbUNJLElBQW5DLEVBQXlDO0FBQ3ZDLFNBQ0VSLFdBQVcsQ0FBQ1EsSUFBRCxDQUFYLElBQ0FSLFdBQVcsQ0FBQ1EsSUFBRCxDQUFYLENBQWtCLGVBQWxCLENBREEsSUFFQVIsV0FBVyxDQUFDUSxJQUFELENBQVgsQ0FBa0IsZUFBbEIsRUFBbUNKLEdBQW5DLENBSEY7QUFLRDs7QUFFRCxTQUFTTSxTQUFULENBQW1CTixHQUFuQixFQUF3QjtBQUN0QixNQUFJLENBQUNGLFFBQUQsSUFBYUEsUUFBUSxLQUFLLEVBQTlCLEVBQWtDO0FBQ2hDO0FBQ0EsUUFBSU8sb0JBQW9CLENBQUNMLEdBQUQsRUFBTSxJQUFOLENBQXhCLEVBQXFDO0FBQ25DLGFBQU9ELG9CQUFvQixDQUFDSCxXQUFXLENBQUNXLEVBQVosQ0FBZSxlQUFmLEVBQWdDUCxHQUFoQyxDQUFELENBQTNCO0FBQ0Q7O0FBQ0QsV0FBT0EsR0FBUDtBQUNEOztBQUVELE1BQUksQ0FBQ0ssb0JBQW9CLENBQUNMLEdBQUQsRUFBTUYsUUFBTixDQUF6QixFQUEwQztBQUN4QztBQUNBLFFBQUlPLG9CQUFvQixDQUFDTCxHQUFELEVBQU0sSUFBTixDQUF4QixFQUFxQztBQUNuQ1EsTUFBQUEsT0FBTyxDQUFDQyxLQUFSLG1EQUM2Q1gsUUFEN0MsMkJBQ3NFRSxHQUR0RTtBQUlBLGFBQU9ELG9CQUFvQixDQUFDSCxXQUFXLENBQUNXLEVBQVosQ0FBZSxlQUFmLEVBQWdDUCxHQUFoQyxDQUFELENBQTNCO0FBQ0Q7O0FBQ0QsVUFBTSxJQUFJVSxLQUFKLHlEQUM2Q1YsR0FEN0MsZ0hBQU47QUFHRDs7QUFDRCxTQUFPRCxvQkFBb0IsQ0FBQ0gsV0FBVyxDQUFDRSxRQUFELENBQVgsQ0FBc0IsZUFBdEIsRUFBdUNFLEdBQXZDLENBQUQsQ0FBM0I7QUFDRDs7QUFFRFcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZULEVBQUFBLFdBQVcsRUFBWEEsV0FEZTtBQUVmRyxFQUFBQSxTQUFTLEVBQVRBO0FBRmUsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcRGVza3RvcFxcQmxvZ1xcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCB0cmFuc2xhdGlvbiA9IHJlcXVpcmUoJy4vdHJhbnNsYXRpb24uanMnKTtcblxubGV0IGxhbmd1YWdlID0gJ2VuJztcblxuLyogaGFuZGxlIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IGdldCBjb252ZXJ0ZWQgaW50byBqc29uIHN0cmluZ3MgKi9cbmZ1bmN0aW9uIHBhcnNlRXNjYXBlU2VxdWVuY2VzKHN0cikge1xuICByZXR1cm4gc3RyXG4gICAgLnJlcGxhY2UobmV3IFJlZ0V4cCgnXFxcXFxcXFxuJywgJ2cnKSwgJ1xcbicpXG4gICAgLnJlcGxhY2UobmV3IFJlZ0V4cCgnXFxcXFxcXFxiJywgJ2cnKSwgJ1xcYicpXG4gICAgLnJlcGxhY2UobmV3IFJlZ0V4cCgnXFxcXFxcXFxmJywgJ2cnKSwgJ1xcZicpXG4gICAgLnJlcGxhY2UobmV3IFJlZ0V4cCgnXFxcXFxcXFxyJywgJ2cnKSwgJ1xccicpXG4gICAgLnJlcGxhY2UobmV3IFJlZ0V4cCgnXFxcXFxcXFx0JywgJ2cnKSwgJ1xcdCcpXG4gICAgLnJlcGxhY2UobmV3IFJlZ0V4cChcIlxcXFxcXFxcJ1wiLCAnZycpLCBcIidcIilcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXFwiJywgJ2cnKSwgJ1wiJylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXCcsICdnJyksICdcXFxcJyk7XG59XG5cbmZ1bmN0aW9uIHNldExhbmd1YWdlKGxhbmcpIHtcbiAgbGFuZ3VhZ2UgPSBsYW5nO1xufVxuXG5mdW5jdGlvbiBkb2VzVHJhbnNsYXRpb25FeGlzdChzdHIsIGxhbmcpIHtcbiAgcmV0dXJuIChcbiAgICB0cmFuc2xhdGlvbltsYW5nXSAmJlxuICAgIHRyYW5zbGF0aW9uW2xhbmddWydwYWdlcy1zdHJpbmdzJ10gJiZcbiAgICB0cmFuc2xhdGlvbltsYW5nXVsncGFnZXMtc3RyaW5ncyddW3N0cl1cbiAgKTtcbn1cblxuZnVuY3Rpb24gdHJhbnNsYXRlKHN0cikge1xuICBpZiAoIWxhbmd1YWdlIHx8IGxhbmd1YWdlID09PSAnJykge1xuICAgIC8vIENoZWNrIEVuZ2xpc2gsIGp1c3QgaW4gY2FzZTsgb3RoZXJ3aXNlLCBqdXN0IHJldHVybiB0aGUgcmF3IHN0cmluZyBiYWNrXG4gICAgaWYgKGRvZXNUcmFuc2xhdGlvbkV4aXN0KHN0ciwgJ2VuJykpIHtcbiAgICAgIHJldHVybiBwYXJzZUVzY2FwZVNlcXVlbmNlcyh0cmFuc2xhdGlvbi5lblsncGFnZXMtc3RyaW5ncyddW3N0cl0pO1xuICAgIH1cbiAgICByZXR1cm4gc3RyO1xuICB9XG5cbiAgaWYgKCFkb2VzVHJhbnNsYXRpb25FeGlzdChzdHIsIGxhbmd1YWdlKSkge1xuICAgIC8vIGlmIGEgdHJhbnNsYXRlZCBzdHJpbmcgZG9lc24ndCBleGlzdCwgYnV0IGVuZ2xpc2ggZG9lcyB0aGVuIGZhbGxiYWNrXG4gICAgaWYgKGRvZXNUcmFuc2xhdGlvbkV4aXN0KHN0ciwgJ2VuJykpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIGBDb3VsZCBub3QgZmluZCBhIHN0cmluZyB0cmFuc2xhdGlvbiBpbiAnJHtsYW5ndWFnZX0nIGZvciBzdHJpbmcgJyR7c3RyfScuIFVzaW5nIEVuZ2xpc2ggdmVyc2lvbiBpbnN0ZWFkLmAsXG4gICAgICApO1xuXG4gICAgICByZXR1cm4gcGFyc2VFc2NhcGVTZXF1ZW5jZXModHJhbnNsYXRpb24uZW5bJ3BhZ2VzLXN0cmluZ3MnXVtzdHJdKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYFRleHQgdGhhdCB5b3UndmUgaWRlbnRpZmllZCBmb3IgdHJhbnNsYXRpb24gKCcke3N0cn0nKSBoYXNuJ3QgYmVlbiBhZGRlZCB0byB0aGUgZ2xvYmFsIGxpc3QgaW4gJ2VuLmpzb24nLiBUbyBzb2x2ZSB0aGlzIHByb2JsZW0gcnVuICd5YXJuIHdyaXRlLXRyYW5zbGF0aW9ucycuYCxcbiAgICApO1xuICB9XG4gIHJldHVybiBwYXJzZUVzY2FwZVNlcXVlbmNlcyh0cmFuc2xhdGlvbltsYW5ndWFnZV1bJ3BhZ2VzLXN0cmluZ3MnXVtzdHJdKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldExhbmd1YWdlLFxuICB0cmFuc2xhdGUsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "translate.js"
      ],
      "names": [
        "translation",
        "require",
        "language",
        "parseEscapeSequences",
        "str",
        "replace",
        "RegExp",
        "setLanguage",
        "lang",
        "doesTranslationExist",
        "translate",
        "en",
        "console",
        "error",
        "Error",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,WAAW,GAAGC,OAAO,CAAC,kBAAD,CAA3B;;AAEA,IAAIC,QAAQ,GAAG,IAAf;AAEA;;AACA,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;AACjC,SAAOA,GAAG,CACPC,OADI,CACI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CADJ,EAC8B,IAD9B,EAEJD,OAFI,CAEI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAFJ,EAE8B,IAF9B,EAGJD,OAHI,CAGI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAHJ,EAG8B,IAH9B,EAIJD,OAJI,CAII,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAJJ,EAI8B,IAJ9B,EAKJD,OALI,CAKI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CALJ,EAK8B,IAL9B,EAMJD,OANI,CAMI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CANJ,EAM8B,GAN9B,EAOJD,OAPI,CAOI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAPJ,EAO8B,GAP9B,EAQJD,OARI,CAQI,IAAIC,MAAJ,CAAW,MAAX,EAAmB,GAAnB,CARJ,EAQ6B,IAR7B,CAAP;AASD;;AAED,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzBN,EAAAA,QAAQ,GAAGM,IAAX;AACD;;AAED,SAASC,oBAAT,CAA8BL,GAA9B,EAAmCI,IAAnC,EAAyC;AACvC,SACER,WAAW,CAACQ,IAAD,CAAX,IACAR,WAAW,CAACQ,IAAD,CAAX,CAAkB,eAAlB,CADA,IAEAR,WAAW,CAACQ,IAAD,CAAX,CAAkB,eAAlB,EAAmCJ,GAAnC,CAHF;AAKD;;AAED,SAASM,SAAT,CAAmBN,GAAnB,EAAwB;AACtB,MAAI,CAACF,QAAD,IAAaA,QAAQ,KAAK,EAA9B,EAAkC;AAChC;AACA,QAAIO,oBAAoB,CAACL,GAAD,EAAM,IAAN,CAAxB,EAAqC;AACnC,aAAOD,oBAAoB,CAACH,WAAW,CAACW,EAAZ,CAAe,eAAf,EAAgCP,GAAhC,CAAD,CAA3B;AACD;;AACD,WAAOA,GAAP;AACD;;AAED,MAAI,CAACK,oBAAoB,CAACL,GAAD,EAAMF,QAAN,CAAzB,EAA0C;AACxC;AACA,QAAIO,oBAAoB,CAACL,GAAD,EAAM,IAAN,CAAxB,EAAqC;AACnCQ,MAAAA,OAAO,CAACC,KAAR,mDAC6CX,QAD7C,2BACsEE,GADtE;AAIA,aAAOD,oBAAoB,CAACH,WAAW,CAACW,EAAZ,CAAe,eAAf,EAAgCP,GAAhC,CAAD,CAA3B;AACD;;AACD,UAAM,IAAIU,KAAJ,yDAC6CV,GAD7C,gHAAN;AAGD;;AACD,SAAOD,oBAAoB,CAACH,WAAW,CAACE,QAAD,CAAX,CAAsB,eAAtB,EAAuCE,GAAvC,CAAD,CAA3B;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,WAAW,EAAXA,WADe;AAEfG,EAAAA,SAAS,EAATA;AAFe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst translation = require('./translation.js');\n\nlet language = 'en';\n\n/* handle escaped characters that get converted into json strings */\nfunction parseEscapeSequences(str) {\n  return str\n    .replace(new RegExp('\\\\\\\\n', 'g'), '\\n')\n    .replace(new RegExp('\\\\\\\\b', 'g'), '\\b')\n    .replace(new RegExp('\\\\\\\\f', 'g'), '\\f')\n    .replace(new RegExp('\\\\\\\\r', 'g'), '\\r')\n    .replace(new RegExp('\\\\\\\\t', 'g'), '\\t')\n    .replace(new RegExp(\"\\\\\\\\'\", 'g'), \"'\")\n    .replace(new RegExp('\\\\\\\\\"', 'g'), '\"')\n    .replace(new RegExp('\\\\\\\\', 'g'), '\\\\');\n}\n\nfunction setLanguage(lang) {\n  language = lang;\n}\n\nfunction doesTranslationExist(str, lang) {\n  return (\n    translation[lang] &&\n    translation[lang]['pages-strings'] &&\n    translation[lang]['pages-strings'][str]\n  );\n}\n\nfunction translate(str) {\n  if (!language || language === '') {\n    // Check English, just in case; otherwise, just return the raw string back\n    if (doesTranslationExist(str, 'en')) {\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n    return str;\n  }\n\n  if (!doesTranslationExist(str, language)) {\n    // if a translated string doesn't exist, but english does then fallback\n    if (doesTranslationExist(str, 'en')) {\n      console.error(\n        `Could not find a string translation in '${language}' for string '${str}'. Using English version instead.`,\n      );\n\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n    throw new Error(\n      `Text that you've identified for translation ('${str}') hasn't been added to the global list in 'en.json'. To solve this problem run 'yarn write-translations'.`,\n    );\n  }\n  return parseEscapeSequences(translation[language]['pages-strings'][str]);\n}\n\nmodule.exports = {\n  setLanguage,\n  translate,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\translation.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\translation.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\translation.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\translation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "translation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// translation object contains all translations for each string in i18n/en.json\nvar CWD = process.cwd();\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar path = require('path');\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar enabledLanguages = languages.filter(function (lang) {\n  return lang.enabled;\n});\nvar translation = {\n  languages: enabledLanguages\n};\nvar files = glob.sync(\"\".concat(CWD, \"/i18n/**\"));\nvar langRegex = /\\/i18n\\/(.*)\\.json$/;\nfiles.forEach(function (file) {\n  var extension = path.extname(file);\n\n  if (extension === '.json') {\n    var match = langRegex.exec(file);\n    var language = match[1];\n    translation[language] = require(file);\n  }\n});\nmodule.exports = translation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0aW9uLmpzIl0sIm5hbWVzIjpbIkNXRCIsInByb2Nlc3MiLCJjd2QiLCJmcyIsInJlcXVpcmUiLCJnbG9iIiwicGF0aCIsImxhbmd1YWdlcyIsImV4aXN0c1N5bmMiLCJlbmFibGVkIiwibmFtZSIsInRhZyIsImVuYWJsZWRMYW5ndWFnZXMiLCJmaWx0ZXIiLCJsYW5nIiwidHJhbnNsYXRpb24iLCJmaWxlcyIsInN5bmMiLCJsYW5nUmVnZXgiLCJmb3JFYWNoIiwiZmlsZSIsImV4dGVuc2lvbiIsImV4dG5hbWUiLCJtYXRjaCIsImV4ZWMiLCJsYW5ndWFnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BO0FBRUEsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQSxJQUFJRyxTQUFKOztBQUNBLElBQUlKLEVBQUUsQ0FBQ0ssVUFBSCxXQUFpQlIsR0FBakIsbUJBQUosRUFBMEM7QUFDeENPLEVBQUFBLFNBQVMsR0FBR0gsT0FBTyxXQUFJSixHQUFKLG1CQUFuQjtBQUNELENBRkQsTUFFTztBQUNMTyxFQUFBQSxTQUFTLEdBQUcsQ0FDVjtBQUNFRSxJQUFBQSxPQUFPLEVBQUUsSUFEWDtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsU0FGUjtBQUdFQyxJQUFBQSxHQUFHLEVBQUU7QUFIUCxHQURVLENBQVo7QUFPRDs7QUFFRCxJQUFNQyxnQkFBZ0IsR0FBR0wsU0FBUyxDQUFDTSxNQUFWLENBQWlCLFVBQUNDLElBQUQ7QUFBQSxTQUFVQSxJQUFJLENBQUNMLE9BQWY7QUFBQSxDQUFqQixDQUF6QjtBQUVBLElBQU1NLFdBQVcsR0FBRztBQUFDUixFQUFBQSxTQUFTLEVBQUVLO0FBQVosQ0FBcEI7QUFFQSxJQUFNSSxLQUFLLEdBQUdYLElBQUksQ0FBQ1ksSUFBTCxXQUFhakIsR0FBYixjQUFkO0FBQ0EsSUFBTWtCLFNBQVMsR0FBRyxxQkFBbEI7QUFFQUYsS0FBSyxDQUFDRyxPQUFOLENBQWMsVUFBQ0MsSUFBRCxFQUFVO0FBQ3RCLE1BQU1DLFNBQVMsR0FBR2YsSUFBSSxDQUFDZ0IsT0FBTCxDQUFhRixJQUFiLENBQWxCOztBQUNBLE1BQUlDLFNBQVMsS0FBSyxPQUFsQixFQUEyQjtBQUN6QixRQUFNRSxLQUFLLEdBQUdMLFNBQVMsQ0FBQ00sSUFBVixDQUFlSixJQUFmLENBQWQ7QUFDQSxRQUFNSyxRQUFRLEdBQUdGLEtBQUssQ0FBQyxDQUFELENBQXRCO0FBQ0FSLElBQUFBLFdBQVcsQ0FBQ1UsUUFBRCxDQUFYLEdBQXdCckIsT0FBTyxDQUFDZ0IsSUFBRCxDQUEvQjtBQUNEO0FBQ0YsQ0FQRDtBQVNBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLFdBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXERlc2t0b3BcXEJsb2dcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxzZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gdHJhbnNsYXRpb24gb2JqZWN0IGNvbnRhaW5zIGFsbCB0cmFuc2xhdGlvbnMgZm9yIGVhY2ggc3RyaW5nIGluIGkxOG4vZW4uanNvblxuXG5jb25zdCBDV0QgPSBwcm9jZXNzLmN3ZCgpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgZ2xvYiA9IHJlcXVpcmUoJ2dsb2InKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmxldCBsYW5ndWFnZXM7XG5pZiAoZnMuZXhpc3RzU3luYyhgJHtDV0R9L2xhbmd1YWdlcy5qc2ApKSB7XG4gIGxhbmd1YWdlcyA9IHJlcXVpcmUoYCR7Q1dEfS9sYW5ndWFnZXMuanNgKTtcbn0gZWxzZSB7XG4gIGxhbmd1YWdlcyA9IFtcbiAgICB7XG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgbmFtZTogJ0VuZ2xpc2gnLFxuICAgICAgdGFnOiAnZW4nLFxuICAgIH0sXG4gIF07XG59XG5cbmNvbnN0IGVuYWJsZWRMYW5ndWFnZXMgPSBsYW5ndWFnZXMuZmlsdGVyKChsYW5nKSA9PiBsYW5nLmVuYWJsZWQpO1xuXG5jb25zdCB0cmFuc2xhdGlvbiA9IHtsYW5ndWFnZXM6IGVuYWJsZWRMYW5ndWFnZXN9O1xuXG5jb25zdCBmaWxlcyA9IGdsb2Iuc3luYyhgJHtDV0R9L2kxOG4vKipgKTtcbmNvbnN0IGxhbmdSZWdleCA9IC9cXC9pMThuXFwvKC4qKVxcLmpzb24kLztcblxuZmlsZXMuZm9yRWFjaCgoZmlsZSkgPT4ge1xuICBjb25zdCBleHRlbnNpb24gPSBwYXRoLmV4dG5hbWUoZmlsZSk7XG4gIGlmIChleHRlbnNpb24gPT09ICcuanNvbicpIHtcbiAgICBjb25zdCBtYXRjaCA9IGxhbmdSZWdleC5leGVjKGZpbGUpO1xuICAgIGNvbnN0IGxhbmd1YWdlID0gbWF0Y2hbMV07XG4gICAgdHJhbnNsYXRpb25bbGFuZ3VhZ2VdID0gcmVxdWlyZShmaWxlKTtcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gdHJhbnNsYXRpb247XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "translation.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "glob",
        "path",
        "languages",
        "existsSync",
        "enabled",
        "name",
        "tag",
        "enabledLanguages",
        "filter",
        "lang",
        "translation",
        "files",
        "sync",
        "langRegex",
        "forEach",
        "file",
        "extension",
        "extname",
        "match",
        "exec",
        "language",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAIG,SAAJ;;AACA,IAAIJ,EAAE,CAACK,UAAH,WAAiBR,GAAjB,mBAAJ,EAA0C;AACxCO,EAAAA,SAAS,GAAGH,OAAO,WAAIJ,GAAJ,mBAAnB;AACD,CAFD,MAEO;AACLO,EAAAA,SAAS,GAAG,CACV;AACEE,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADU,CAAZ;AAOD;;AAED,IAAMC,gBAAgB,GAAGL,SAAS,CAACM,MAAV,CAAiB,UAACC,IAAD;AAAA,SAAUA,IAAI,CAACL,OAAf;AAAA,CAAjB,CAAzB;AAEA,IAAMM,WAAW,GAAG;AAACR,EAAAA,SAAS,EAAEK;AAAZ,CAApB;AAEA,IAAMI,KAAK,GAAGX,IAAI,CAACY,IAAL,WAAajB,GAAb,cAAd;AACA,IAAMkB,SAAS,GAAG,qBAAlB;AAEAF,KAAK,CAACG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,MAAMC,SAAS,GAAGf,IAAI,CAACgB,OAAL,CAAaF,IAAb,CAAlB;;AACA,MAAIC,SAAS,KAAK,OAAlB,EAA2B;AACzB,QAAME,KAAK,GAAGL,SAAS,CAACM,IAAV,CAAeJ,IAAf,CAAd;AACA,QAAMK,QAAQ,GAAGF,KAAK,CAAC,CAAD,CAAtB;AACAR,IAAAA,WAAW,CAACU,QAAD,CAAX,GAAwBrB,OAAO,CAACgB,IAAD,CAA/B;AACD;AACF,CAPD;AASAM,MAAM,CAACC,OAAP,GAAiBZ,WAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// translation object contains all translations for each string in i18n/en.json\n\nconst CWD = process.cwd();\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst enabledLanguages = languages.filter((lang) => lang.enabled);\n\nconst translation = {languages: enabledLanguages};\n\nconst files = glob.sync(`${CWD}/i18n/**`);\nconst langRegex = /\\/i18n\\/(.*)\\.json$/;\n\nfiles.forEach((file) => {\n  const extension = path.extname(file);\n  if (extension === '.json') {\n    const match = langRegex.exec(file);\n    const language = match[1];\n    translation[language] = require(file);\n  }\n});\n\nmodule.exports = translation;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\feed.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\feed.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\feed.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\feed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "feed.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _require = require('feed'),\n    Feed = _require.Feed;\n\nvar truncateHtml = require('truncate-html');\n\nvar BLOG_POST_SUMMARY_LENGTH = 250;\nvar CWD = process.cwd();\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar readMetadata = require('./readMetadata.js');\n\nvar blogRootURL = \"\".concat(siteConfig.url + siteConfig.baseUrl, \"blog\");\nvar siteImageURL = siteConfig.url + siteConfig.baseUrl + siteConfig.headerIcon;\n\nvar utils = require('../core/utils');\n\nvar renderMarkdown = require('../core/renderMarkdown.js');\n\nmodule.exports = function (type) {\n  console.log('feed.js triggered...');\n  type = type || 'rss';\n  readMetadata.generateMetadataBlog(siteConfig);\n\n  var MetadataBlog = require('../core/MetadataBlog.js');\n\n  var MetadataPublicBlog = process.env.NODE_ENV === 'development' ? MetadataBlog : MetadataBlog.filter(function (item) {\n    return !item.unlisted;\n  });\n  var feed = new Feed({\n    title: \"\".concat(siteConfig.title, \" Blog\"),\n    description: \"The best place to stay up-to-date with the latest \".concat(siteConfig.title, \" news and events.\"),\n    id: blogRootURL,\n    link: blogRootURL,\n    image: siteImageURL,\n    copyright: siteConfig.copyright,\n    updated: new Date(MetadataPublicBlog[0].date)\n  });\n  MetadataPublicBlog.forEach(function (post) {\n    var url = \"\".concat(blogRootURL, \"/\").concat(post.path);\n    var description = utils.blogPostHasTruncateMarker(post.content) ? renderMarkdown(utils.extractBlogPostBeforeTruncate(post.content)) : truncateHtml(renderMarkdown(post.content), BLOG_POST_SUMMARY_LENGTH);\n    feed.addItem({\n      title: post.title,\n      link: url,\n      author: [{\n        name: post.author,\n        link: post.authorURL\n      }],\n      date: new Date(post.date),\n      description: description\n    });\n  });\n  return type === 'rss' ? feed.rss2() : feed.atom1();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZlZWQuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsIkZlZWQiLCJ0cnVuY2F0ZUh0bWwiLCJCTE9HX1BPU1RfU1VNTUFSWV9MRU5HVEgiLCJDV0QiLCJwcm9jZXNzIiwiY3dkIiwic2l0ZUNvbmZpZyIsInJlYWRNZXRhZGF0YSIsImJsb2dSb290VVJMIiwidXJsIiwiYmFzZVVybCIsInNpdGVJbWFnZVVSTCIsImhlYWRlckljb24iLCJ1dGlscyIsInJlbmRlck1hcmtkb3duIiwibW9kdWxlIiwiZXhwb3J0cyIsInR5cGUiLCJjb25zb2xlIiwibG9nIiwiZ2VuZXJhdGVNZXRhZGF0YUJsb2ciLCJNZXRhZGF0YUJsb2ciLCJNZXRhZGF0YVB1YmxpY0Jsb2ciLCJlbnYiLCJOT0RFX0VOViIsImZpbHRlciIsIml0ZW0iLCJ1bmxpc3RlZCIsImZlZWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiaWQiLCJsaW5rIiwiaW1hZ2UiLCJjb3B5cmlnaHQiLCJ1cGRhdGVkIiwiRGF0ZSIsImRhdGUiLCJmb3JFYWNoIiwicG9zdCIsInBhdGgiLCJibG9nUG9zdEhhc1RydW5jYXRlTWFya2VyIiwiY29udGVudCIsImV4dHJhY3RCbG9nUG9zdEJlZm9yZVRydW5jYXRlIiwiYWRkSXRlbSIsImF1dGhvciIsIm5hbWUiLCJhdXRob3JVUkwiLCJyc3MyIiwiYXRvbTEiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztlQU9lQSxPQUFPLENBQUMsTUFBRCxDO0lBQWZDLEksWUFBQUEsSTs7QUFDUCxJQUFNQyxZQUFZLEdBQUdGLE9BQU8sQ0FBQyxlQUFELENBQTVCOztBQUVBLElBQU1HLHdCQUF3QixHQUFHLEdBQWpDO0FBRUEsSUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdQLE9BQU8sV0FBSUksR0FBSixvQkFBMUI7O0FBQ0EsSUFBTUksWUFBWSxHQUFHUixPQUFPLENBQUMsbUJBQUQsQ0FBNUI7O0FBRUEsSUFBTVMsV0FBVyxhQUFNRixVQUFVLENBQUNHLEdBQVgsR0FBaUJILFVBQVUsQ0FBQ0ksT0FBbEMsU0FBakI7QUFDQSxJQUFNQyxZQUFZLEdBQ2hCTCxVQUFVLENBQUNHLEdBQVgsR0FBaUJILFVBQVUsQ0FBQ0ksT0FBNUIsR0FBc0NKLFVBQVUsQ0FBQ00sVUFEbkQ7O0FBRUEsSUFBTUMsS0FBSyxHQUFHZCxPQUFPLENBQUMsZUFBRCxDQUFyQjs7QUFFQSxJQUFNZSxjQUFjLEdBQUdmLE9BQU8sQ0FBQywyQkFBRCxDQUE5Qjs7QUFFQWdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFVQyxJQUFWLEVBQWdCO0FBQy9CQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQkFBWjtBQUVBRixFQUFBQSxJQUFJLEdBQUdBLElBQUksSUFBSSxLQUFmO0FBRUFWLEVBQUFBLFlBQVksQ0FBQ2Esb0JBQWIsQ0FBa0NkLFVBQWxDOztBQUNBLE1BQU1lLFlBQVksR0FBR3RCLE9BQU8sQ0FBQyx5QkFBRCxDQUE1Qjs7QUFDQSxNQUFNdUIsa0JBQWtCLEdBQ3RCbEIsT0FBTyxDQUFDbUIsR0FBUixDQUFZQyxRQUFaLEtBQXlCLGFBQXpCLEdBQ0lILFlBREosR0FFSUEsWUFBWSxDQUFDSSxNQUFiLENBQW9CLFVBQUNDLElBQUQ7QUFBQSxXQUFVLENBQUNBLElBQUksQ0FBQ0MsUUFBaEI7QUFBQSxHQUFwQixDQUhOO0FBS0EsTUFBTUMsSUFBSSxHQUFHLElBQUk1QixJQUFKLENBQVM7QUFDcEI2QixJQUFBQSxLQUFLLFlBQUt2QixVQUFVLENBQUN1QixLQUFoQixVQURlO0FBRXBCQyxJQUFBQSxXQUFXLDhEQUF1RHhCLFVBQVUsQ0FBQ3VCLEtBQWxFLHNCQUZTO0FBR3BCRSxJQUFBQSxFQUFFLEVBQUV2QixXQUhnQjtBQUlwQndCLElBQUFBLElBQUksRUFBRXhCLFdBSmM7QUFLcEJ5QixJQUFBQSxLQUFLLEVBQUV0QixZQUxhO0FBTXBCdUIsSUFBQUEsU0FBUyxFQUFFNUIsVUFBVSxDQUFDNEIsU0FORjtBQU9wQkMsSUFBQUEsT0FBTyxFQUFFLElBQUlDLElBQUosQ0FBU2Qsa0JBQWtCLENBQUMsQ0FBRCxDQUFsQixDQUFzQmUsSUFBL0I7QUFQVyxHQUFULENBQWI7QUFVQWYsRUFBQUEsa0JBQWtCLENBQUNnQixPQUFuQixDQUEyQixVQUFDQyxJQUFELEVBQVU7QUFDbkMsUUFBTTlCLEdBQUcsYUFBTUQsV0FBTixjQUFxQitCLElBQUksQ0FBQ0MsSUFBMUIsQ0FBVDtBQUNBLFFBQU1WLFdBQVcsR0FBR2pCLEtBQUssQ0FBQzRCLHlCQUFOLENBQWdDRixJQUFJLENBQUNHLE9BQXJDLElBQ2hCNUIsY0FBYyxDQUFDRCxLQUFLLENBQUM4Qiw2QkFBTixDQUFvQ0osSUFBSSxDQUFDRyxPQUF6QyxDQUFELENBREUsR0FFaEJ6QyxZQUFZLENBQUNhLGNBQWMsQ0FBQ3lCLElBQUksQ0FBQ0csT0FBTixDQUFmLEVBQStCeEMsd0JBQS9CLENBRmhCO0FBSUEwQixJQUFBQSxJQUFJLENBQUNnQixPQUFMLENBQWE7QUFDWGYsTUFBQUEsS0FBSyxFQUFFVSxJQUFJLENBQUNWLEtBREQ7QUFFWEcsTUFBQUEsSUFBSSxFQUFFdkIsR0FGSztBQUdYb0MsTUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUMsUUFBQUEsSUFBSSxFQUFFUCxJQUFJLENBQUNNLE1BRGI7QUFFRWIsUUFBQUEsSUFBSSxFQUFFTyxJQUFJLENBQUNRO0FBRmIsT0FETSxDQUhHO0FBU1hWLE1BQUFBLElBQUksRUFBRSxJQUFJRCxJQUFKLENBQVNHLElBQUksQ0FBQ0YsSUFBZCxDQVRLO0FBVVhQLE1BQUFBLFdBQVcsRUFBWEE7QUFWVyxLQUFiO0FBWUQsR0FsQkQ7QUFvQkEsU0FBT2IsSUFBSSxLQUFLLEtBQVQsR0FBaUJXLElBQUksQ0FBQ29CLElBQUwsRUFBakIsR0FBK0JwQixJQUFJLENBQUNxQixLQUFMLEVBQXRDO0FBQ0QsQ0EzQ0QiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcRGVza3RvcFxcQmxvZ1xcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCB7RmVlZH0gPSByZXF1aXJlKCdmZWVkJyk7XG5jb25zdCB0cnVuY2F0ZUh0bWwgPSByZXF1aXJlKCd0cnVuY2F0ZS1odG1sJyk7XG5cbmNvbnN0IEJMT0dfUE9TVF9TVU1NQVJZX0xFTkdUSCA9IDI1MDtcblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcbmNvbnN0IHNpdGVDb25maWcgPSByZXF1aXJlKGAke0NXRH0vc2l0ZUNvbmZpZy5qc2ApO1xuY29uc3QgcmVhZE1ldGFkYXRhID0gcmVxdWlyZSgnLi9yZWFkTWV0YWRhdGEuanMnKTtcblxuY29uc3QgYmxvZ1Jvb3RVUkwgPSBgJHtzaXRlQ29uZmlnLnVybCArIHNpdGVDb25maWcuYmFzZVVybH1ibG9nYDtcbmNvbnN0IHNpdGVJbWFnZVVSTCA9XG4gIHNpdGVDb25maWcudXJsICsgc2l0ZUNvbmZpZy5iYXNlVXJsICsgc2l0ZUNvbmZpZy5oZWFkZXJJY29uO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuLi9jb3JlL3V0aWxzJyk7XG5cbmNvbnN0IHJlbmRlck1hcmtkb3duID0gcmVxdWlyZSgnLi4vY29yZS9yZW5kZXJNYXJrZG93bi5qcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0eXBlKSB7XG4gIGNvbnNvbGUubG9nKCdmZWVkLmpzIHRyaWdnZXJlZC4uLicpO1xuXG4gIHR5cGUgPSB0eXBlIHx8ICdyc3MnO1xuXG4gIHJlYWRNZXRhZGF0YS5nZW5lcmF0ZU1ldGFkYXRhQmxvZyhzaXRlQ29uZmlnKTtcbiAgY29uc3QgTWV0YWRhdGFCbG9nID0gcmVxdWlyZSgnLi4vY29yZS9NZXRhZGF0YUJsb2cuanMnKTtcbiAgY29uc3QgTWV0YWRhdGFQdWJsaWNCbG9nID1cbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50J1xuICAgICAgPyBNZXRhZGF0YUJsb2dcbiAgICAgIDogTWV0YWRhdGFCbG9nLmZpbHRlcigoaXRlbSkgPT4gIWl0ZW0udW5saXN0ZWQpO1xuXG4gIGNvbnN0IGZlZWQgPSBuZXcgRmVlZCh7XG4gICAgdGl0bGU6IGAke3NpdGVDb25maWcudGl0bGV9IEJsb2dgLFxuICAgIGRlc2NyaXB0aW9uOiBgVGhlIGJlc3QgcGxhY2UgdG8gc3RheSB1cC10by1kYXRlIHdpdGggdGhlIGxhdGVzdCAke3NpdGVDb25maWcudGl0bGV9IG5ld3MgYW5kIGV2ZW50cy5gLFxuICAgIGlkOiBibG9nUm9vdFVSTCxcbiAgICBsaW5rOiBibG9nUm9vdFVSTCxcbiAgICBpbWFnZTogc2l0ZUltYWdlVVJMLFxuICAgIGNvcHlyaWdodDogc2l0ZUNvbmZpZy5jb3B5cmlnaHQsXG4gICAgdXBkYXRlZDogbmV3IERhdGUoTWV0YWRhdGFQdWJsaWNCbG9nWzBdLmRhdGUpLFxuICB9KTtcblxuICBNZXRhZGF0YVB1YmxpY0Jsb2cuZm9yRWFjaCgocG9zdCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IGAke2Jsb2dSb290VVJMfS8ke3Bvc3QucGF0aH1gO1xuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gdXRpbHMuYmxvZ1Bvc3RIYXNUcnVuY2F0ZU1hcmtlcihwb3N0LmNvbnRlbnQpXG4gICAgICA/IHJlbmRlck1hcmtkb3duKHV0aWxzLmV4dHJhY3RCbG9nUG9zdEJlZm9yZVRydW5jYXRlKHBvc3QuY29udGVudCkpXG4gICAgICA6IHRydW5jYXRlSHRtbChyZW5kZXJNYXJrZG93bihwb3N0LmNvbnRlbnQpLCBCTE9HX1BPU1RfU1VNTUFSWV9MRU5HVEgpO1xuXG4gICAgZmVlZC5hZGRJdGVtKHtcbiAgICAgIHRpdGxlOiBwb3N0LnRpdGxlLFxuICAgICAgbGluazogdXJsLFxuICAgICAgYXV0aG9yOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBwb3N0LmF1dGhvcixcbiAgICAgICAgICBsaW5rOiBwb3N0LmF1dGhvclVSTCxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgICBkYXRlOiBuZXcgRGF0ZShwb3N0LmRhdGUpLFxuICAgICAgZGVzY3JpcHRpb24sXG4gICAgfSk7XG4gIH0pO1xuXG4gIHJldHVybiB0eXBlID09PSAncnNzJyA/IGZlZWQucnNzMigpIDogZmVlZC5hdG9tMSgpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "feed.js"
      ],
      "names": [
        "require",
        "Feed",
        "truncateHtml",
        "BLOG_POST_SUMMARY_LENGTH",
        "CWD",
        "process",
        "cwd",
        "siteConfig",
        "readMetadata",
        "blogRootURL",
        "url",
        "baseUrl",
        "siteImageURL",
        "headerIcon",
        "utils",
        "renderMarkdown",
        "module",
        "exports",
        "type",
        "console",
        "log",
        "generateMetadataBlog",
        "MetadataBlog",
        "MetadataPublicBlog",
        "env",
        "NODE_ENV",
        "filter",
        "item",
        "unlisted",
        "feed",
        "title",
        "description",
        "id",
        "link",
        "image",
        "copyright",
        "updated",
        "Date",
        "date",
        "forEach",
        "post",
        "path",
        "blogPostHasTruncateMarker",
        "content",
        "extractBlogPostBeforeTruncate",
        "addItem",
        "author",
        "name",
        "authorURL",
        "rss2",
        "atom1"
      ],
      "mappings": ";;AAAA;;;;;;eAOeA,OAAO,CAAC,MAAD,C;IAAfC,I,YAAAA,I;;AACP,IAAMC,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA5B;;AAEA,IAAMG,wBAAwB,GAAG,GAAjC;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,UAAU,GAAGP,OAAO,WAAII,GAAJ,oBAA1B;;AACA,IAAMI,YAAY,GAAGR,OAAO,CAAC,mBAAD,CAA5B;;AAEA,IAAMS,WAAW,aAAMF,UAAU,CAACG,GAAX,GAAiBH,UAAU,CAACI,OAAlC,SAAjB;AACA,IAAMC,YAAY,GAChBL,UAAU,CAACG,GAAX,GAAiBH,UAAU,CAACI,OAA5B,GAAsCJ,UAAU,CAACM,UADnD;;AAEA,IAAMC,KAAK,GAAGd,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAMe,cAAc,GAAGf,OAAO,CAAC,2BAAD,CAA9B;;AAEAgB,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEAF,EAAAA,IAAI,GAAGA,IAAI,IAAI,KAAf;AAEAV,EAAAA,YAAY,CAACa,oBAAb,CAAkCd,UAAlC;;AACA,MAAMe,YAAY,GAAGtB,OAAO,CAAC,yBAAD,CAA5B;;AACA,MAAMuB,kBAAkB,GACtBlB,OAAO,CAACmB,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIH,YADJ,GAEIA,YAAY,CAACI,MAAb,CAAoB,UAACC,IAAD;AAAA,WAAU,CAACA,IAAI,CAACC,QAAhB;AAAA,GAApB,CAHN;AAKA,MAAMC,IAAI,GAAG,IAAI5B,IAAJ,CAAS;AACpB6B,IAAAA,KAAK,YAAKvB,UAAU,CAACuB,KAAhB,UADe;AAEpBC,IAAAA,WAAW,8DAAuDxB,UAAU,CAACuB,KAAlE,sBAFS;AAGpBE,IAAAA,EAAE,EAAEvB,WAHgB;AAIpBwB,IAAAA,IAAI,EAAExB,WAJc;AAKpByB,IAAAA,KAAK,EAAEtB,YALa;AAMpBuB,IAAAA,SAAS,EAAE5B,UAAU,CAAC4B,SANF;AAOpBC,IAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASd,kBAAkB,CAAC,CAAD,CAAlB,CAAsBe,IAA/B;AAPW,GAAT,CAAb;AAUAf,EAAAA,kBAAkB,CAACgB,OAAnB,CAA2B,UAACC,IAAD,EAAU;AACnC,QAAM9B,GAAG,aAAMD,WAAN,cAAqB+B,IAAI,CAACC,IAA1B,CAAT;AACA,QAAMV,WAAW,GAAGjB,KAAK,CAAC4B,yBAAN,CAAgCF,IAAI,CAACG,OAArC,IAChB5B,cAAc,CAACD,KAAK,CAAC8B,6BAAN,CAAoCJ,IAAI,CAACG,OAAzC,CAAD,CADE,GAEhBzC,YAAY,CAACa,cAAc,CAACyB,IAAI,CAACG,OAAN,CAAf,EAA+BxC,wBAA/B,CAFhB;AAIA0B,IAAAA,IAAI,CAACgB,OAAL,CAAa;AACXf,MAAAA,KAAK,EAAEU,IAAI,CAACV,KADD;AAEXG,MAAAA,IAAI,EAAEvB,GAFK;AAGXoC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,IAAI,EAAEP,IAAI,CAACM,MADb;AAEEb,QAAAA,IAAI,EAAEO,IAAI,CAACQ;AAFb,OADM,CAHG;AASXV,MAAAA,IAAI,EAAE,IAAID,IAAJ,CAASG,IAAI,CAACF,IAAd,CATK;AAUXP,MAAAA,WAAW,EAAXA;AAVW,KAAb;AAYD,GAlBD;AAoBA,SAAOb,IAAI,KAAK,KAAT,GAAiBW,IAAI,CAACoB,IAAL,EAAjB,GAA+BpB,IAAI,CAACqB,KAAL,EAAtC;AACD,CA3CD",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst {Feed} = require('feed');\nconst truncateHtml = require('truncate-html');\n\nconst BLOG_POST_SUMMARY_LENGTH = 250;\n\nconst CWD = process.cwd();\nconst siteConfig = require(`${CWD}/siteConfig.js`);\nconst readMetadata = require('./readMetadata.js');\n\nconst blogRootURL = `${siteConfig.url + siteConfig.baseUrl}blog`;\nconst siteImageURL =\n  siteConfig.url + siteConfig.baseUrl + siteConfig.headerIcon;\nconst utils = require('../core/utils');\n\nconst renderMarkdown = require('../core/renderMarkdown.js');\n\nmodule.exports = function (type) {\n  console.log('feed.js triggered...');\n\n  type = type || 'rss';\n\n  readMetadata.generateMetadataBlog(siteConfig);\n  const MetadataBlog = require('../core/MetadataBlog.js');\n  const MetadataPublicBlog =\n    process.env.NODE_ENV === 'development'\n      ? MetadataBlog\n      : MetadataBlog.filter((item) => !item.unlisted);\n\n  const feed = new Feed({\n    title: `${siteConfig.title} Blog`,\n    description: `The best place to stay up-to-date with the latest ${siteConfig.title} news and events.`,\n    id: blogRootURL,\n    link: blogRootURL,\n    image: siteImageURL,\n    copyright: siteConfig.copyright,\n    updated: new Date(MetadataPublicBlog[0].date),\n  });\n\n  MetadataPublicBlog.forEach((post) => {\n    const url = `${blogRootURL}/${post.path}`;\n    const description = utils.blogPostHasTruncateMarker(post.content)\n      ? renderMarkdown(utils.extractBlogPostBeforeTruncate(post.content))\n      : truncateHtml(renderMarkdown(post.content), BLOG_POST_SUMMARY_LENGTH);\n\n    feed.addItem({\n      title: post.title,\n      link: url,\n      author: [\n        {\n          name: post.author,\n          link: post.authorURL,\n        },\n      ],\n      date: new Date(post.date),\n      description,\n    });\n  });\n\n  return type === 'rss' ? feed.rss2() : feed.atom1();\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\renderMarkdown.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\renderMarkdown.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\renderMarkdown.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\renderMarkdown.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "renderMarkdown.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _ = require('lodash');\n\nvar hljs = require('highlight.js');\n\nvar _require = require('remarkable'),\n    Markdown = _require.Remarkable;\n\nvar _require2 = require('remarkable/linkify'),\n    linkify = _require2.linkify;\n\nvar prismjs = require('prismjs');\n\nvar loadLanguages = require('prismjs/components/index');\n\nvar chalk = require('chalk');\n\nvar anchors = require('./anchors.js');\n\nvar CWD = process.cwd();\nvar alias = {\n  js: 'jsx',\n  html: 'markup',\n  sh: 'bash',\n  md: 'markdown'\n};\n\nvar MarkdownRenderer = /*#__PURE__*/function () {\n  function MarkdownRenderer() {\n    _classCallCheck(this, MarkdownRenderer);\n\n    var siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\n    var markdownOptions = {\n      // Highlight.js expects hljs css classes on the code element.\n      // This results in <pre><code class=\"hljs css languages-jsx\">\n      langPrefix: 'hljs css language-',\n      highlight: function highlight(str, lang) {\n        // User's own custom highlighting function\n        if (siteConfig.highlight && siteConfig.highlight.hljs) {\n          siteConfig.highlight.hljs(hljs);\n        } // Fallback to default language\n\n\n        lang = lang || siteConfig.highlight && siteConfig.highlight.defaultLang;\n\n        if (lang === 'text') {\n          return str;\n        }\n\n        if (lang) {\n          try {\n            if (siteConfig.usePrism === true || siteConfig.usePrism && siteConfig.usePrism.length > 0 && siteConfig.usePrism.indexOf(lang) !== -1) {\n              var language = alias[lang] || lang;\n\n              try {\n                // Currently people using prismjs on Node have to individually require()\n                // every single language (https://github.com/PrismJS/prism/issues/593)\n                loadLanguages([language]);\n                return prismjs.highlight(str, prismjs.languages[language], language);\n              } catch (err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                  var unsupportedLanguageError = chalk.yellow(\"Warning: \".concat(chalk.red(language), \" is not supported by prismjs.\") + '\\nPlease refer to https://prismjs.com/#languages-list for the list of supported languages.');\n                  console.log(unsupportedLanguageError);\n                } else console.error(err);\n              }\n            }\n\n            if (hljs.getLanguage(lang)) {\n              return hljs.highlight(lang, str).value;\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }\n\n        try {\n          return hljs.highlightAuto(str).value;\n        } catch (err) {\n          console.error(err);\n        }\n\n        return '';\n      },\n      html: true\n    }; // Allow overriding default options\n\n    if (siteConfig.markdownOptions) {\n      markdownOptions = _.merge({}, markdownOptions, siteConfig.markdownOptions);\n    }\n\n    var md = new Markdown(markdownOptions); // Register anchors plugin\n\n    md.use(anchors, siteConfig.slugPreprocessor); // Linkify\n\n    md.use(linkify); // Allow client sites to register their own plugins\n\n    if (siteConfig.markdownPlugins) {\n      siteConfig.markdownPlugins.forEach(function (plugin) {\n        md.use(plugin);\n      });\n    }\n\n    this.md = md;\n  }\n\n  _createClass(MarkdownRenderer, [{\n    key: \"toHtml\",\n    value: function toHtml(source) {\n      var html = this.md.render(source); // Ensure fenced code blocks use Highlight.js hljs class\n      // https://github.com/jonschlinkert/remarkable/issues/224\n\n      return html.replace(/<pre><code>/g, '<pre><code class=\"hljs\">');\n    }\n  }]);\n\n  return MarkdownRenderer;\n}();\n\nvar renderMarkdown = new MarkdownRenderer();\n\nmodule.exports = function (source) {\n  return renderMarkdown.toHtml(source);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "renderMarkdown.js"
      ],
      "names": [
        "_",
        "require",
        "hljs",
        "Markdown",
        "Remarkable",
        "linkify",
        "prismjs",
        "loadLanguages",
        "chalk",
        "anchors",
        "CWD",
        "process",
        "cwd",
        "alias",
        "js",
        "html",
        "sh",
        "md",
        "MarkdownRenderer",
        "siteConfig",
        "markdownOptions",
        "langPrefix",
        "highlight",
        "str",
        "lang",
        "defaultLang",
        "usePrism",
        "length",
        "indexOf",
        "language",
        "languages",
        "err",
        "code",
        "unsupportedLanguageError",
        "yellow",
        "red",
        "console",
        "log",
        "error",
        "getLanguage",
        "value",
        "highlightAuto",
        "merge",
        "use",
        "slugPreprocessor",
        "markdownPlugins",
        "forEach",
        "plugin",
        "source",
        "render",
        "replace",
        "renderMarkdown",
        "module",
        "exports",
        "toHtml"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst _ = require('lodash');\nconst hljs = require('highlight.js');\nconst {Remarkable: Markdown} = require('remarkable');\nconst {linkify} = require('remarkable/linkify');\nconst prismjs = require('prismjs');\nconst loadLanguages = require('prismjs/components/index');\nconst chalk = require('chalk');\nconst anchors = require('./anchors.js');\n\nconst CWD = process.cwd();\n\nconst alias = {\n  js: 'jsx',\n  html: 'markup',\n  sh: 'bash',\n  md: 'markdown',\n};\n\nclass MarkdownRenderer {\n  constructor() {\n    const siteConfig = require(`${CWD}/siteConfig.js`);\n    let markdownOptions = {\n      // Highlight.js expects hljs css classes on the code element.\n      // This results in <pre><code class=\"hljs css languages-jsx\">\n      langPrefix: 'hljs css language-',\n      highlight(str, lang) {\n        // User's own custom highlighting function\n        if (siteConfig.highlight && siteConfig.highlight.hljs) {\n          siteConfig.highlight.hljs(hljs);\n        }\n        // Fallback to default language\n        lang =\n          lang || (siteConfig.highlight && siteConfig.highlight.defaultLang);\n        if (lang === 'text') {\n          return str;\n        }\n        if (lang) {\n          try {\n            if (\n              siteConfig.usePrism === true ||\n              (siteConfig.usePrism &&\n                siteConfig.usePrism.length > 0 &&\n                siteConfig.usePrism.indexOf(lang) !== -1)\n            ) {\n              const language = alias[lang] || lang;\n              try {\n                // Currently people using prismjs on Node have to individually require()\n                // every single language (https://github.com/PrismJS/prism/issues/593)\n                loadLanguages([language]);\n                return prismjs.highlight(\n                  str,\n                  prismjs.languages[language],\n                  language,\n                );\n              } catch (err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                  const unsupportedLanguageError = chalk.yellow(\n                    `Warning: ${chalk.red(\n                      language,\n                    )} is not supported by prismjs.` +\n                      '\\nPlease refer to https://prismjs.com/#languages-list for the list of supported languages.',\n                  );\n                  console.log(unsupportedLanguageError);\n                } else console.error(err);\n              }\n            }\n            if (hljs.getLanguage(lang)) {\n              return hljs.highlight(lang, str).value;\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }\n\n        try {\n          return hljs.highlightAuto(str).value;\n        } catch (err) {\n          console.error(err);\n        }\n\n        return '';\n      },\n      html: true,\n    };\n\n    // Allow overriding default options\n    if (siteConfig.markdownOptions) {\n      markdownOptions = _.merge(\n        {},\n        markdownOptions,\n        siteConfig.markdownOptions,\n      );\n    }\n\n    const md = new Markdown(markdownOptions);\n\n    // Register anchors plugin\n    md.use(anchors, siteConfig.slugPreprocessor);\n\n    // Linkify\n    md.use(linkify);\n\n    // Allow client sites to register their own plugins\n    if (siteConfig.markdownPlugins) {\n      siteConfig.markdownPlugins.forEach((plugin) => {\n        md.use(plugin);\n      });\n    }\n\n    this.md = md;\n  }\n\n  toHtml(source) {\n    const html = this.md.render(source);\n\n    // Ensure fenced code blocks use Highlight.js hljs class\n    // https://github.com/jonschlinkert/remarkable/issues/224\n    return html.replace(/<pre><code>/g, '<pre><code class=\"hljs\">');\n  }\n}\n\nconst renderMarkdown = new MarkdownRenderer();\n\nmodule.exports = (source) => renderMarkdown.toHtml(source);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\anchors.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\anchors.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\anchors.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\anchors.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "anchors.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar GithubSlugger = require('github-slugger');\n\nvar toSlug = require('./toSlug');\n/**\n * The anchors plugin adds GFM-style anchors to headings.\n */\n\n\nfunction anchors(md, slugPreprocessor) {\n  var originalRender = md.renderer.rules.heading_open;\n\n  md.renderer.rules.heading_open = function (tokens, idx, options, env) {\n    if (!env.slugger) {\n      env.slugger = new GithubSlugger();\n    }\n\n    var slugger = env.slugger;\n    var textToken = tokens[idx + 1];\n\n    if (textToken.content) {\n      var slugBase = slugPreprocessor && typeof slugPreprocessor === 'function' ? slugPreprocessor(textToken.content) : textToken.content;\n      var anchor = toSlug(slugBase, slugger);\n      return \"<h\".concat(tokens[idx].hLevel, \"><a class=\\\"anchor\\\" aria-hidden=\\\"true\\\" id=\\\"\").concat(anchor, \"\\\"></a><a href=\\\"#\").concat(anchor, \"\\\" aria-hidden=\\\"true\\\" class=\\\"hash-link\\\"><svg class=\\\"hash-link-icon\\\" aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>\");\n    }\n\n    return originalRender(tokens, idx, options, env);\n  };\n}\n\nmodule.exports = anchors;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuY2hvcnMuanMiXSwibmFtZXMiOlsiR2l0aHViU2x1Z2dlciIsInJlcXVpcmUiLCJ0b1NsdWciLCJhbmNob3JzIiwibWQiLCJzbHVnUHJlcHJvY2Vzc29yIiwib3JpZ2luYWxSZW5kZXIiLCJyZW5kZXJlciIsInJ1bGVzIiwiaGVhZGluZ19vcGVuIiwidG9rZW5zIiwiaWR4Iiwib3B0aW9ucyIsImVudiIsInNsdWdnZXIiLCJ0ZXh0VG9rZW4iLCJjb250ZW50Iiwic2x1Z0Jhc2UiLCJhbmNob3IiLCJoTGV2ZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUE3Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXRCO0FBRUE7Ozs7O0FBR0EsU0FBU0UsT0FBVCxDQUFpQkMsRUFBakIsRUFBcUJDLGdCQUFyQixFQUF1QztBQUNyQyxNQUFNQyxjQUFjLEdBQUdGLEVBQUUsQ0FBQ0csUUFBSCxDQUFZQyxLQUFaLENBQWtCQyxZQUF6Qzs7QUFFQUwsRUFBQUEsRUFBRSxDQUFDRyxRQUFILENBQVlDLEtBQVosQ0FBa0JDLFlBQWxCLEdBQWlDLFVBQVVDLE1BQVYsRUFBa0JDLEdBQWxCLEVBQXVCQyxPQUF2QixFQUFnQ0MsR0FBaEMsRUFBcUM7QUFDcEUsUUFBSSxDQUFDQSxHQUFHLENBQUNDLE9BQVQsRUFBa0I7QUFDaEJELE1BQUFBLEdBQUcsQ0FBQ0MsT0FBSixHQUFjLElBQUlkLGFBQUosRUFBZDtBQUNEOztBQUNELFFBQU1jLE9BQU8sR0FBR0QsR0FBRyxDQUFDQyxPQUFwQjtBQUNBLFFBQU1DLFNBQVMsR0FBR0wsTUFBTSxDQUFDQyxHQUFHLEdBQUcsQ0FBUCxDQUF4Qjs7QUFFQSxRQUFJSSxTQUFTLENBQUNDLE9BQWQsRUFBdUI7QUFDckIsVUFBTUMsUUFBUSxHQUNaWixnQkFBZ0IsSUFBSSxPQUFPQSxnQkFBUCxLQUE0QixVQUFoRCxHQUNJQSxnQkFBZ0IsQ0FBQ1UsU0FBUyxDQUFDQyxPQUFYLENBRHBCLEdBRUlELFNBQVMsQ0FBQ0MsT0FIaEI7QUFJQSxVQUFNRSxNQUFNLEdBQUdoQixNQUFNLENBQUNlLFFBQUQsRUFBV0gsT0FBWCxDQUFyQjtBQUNBLHlCQUFZSixNQUFNLENBQUNDLEdBQUQsQ0FBTixDQUFZUSxNQUF4Qiw0REFBMkVELE1BQTNFLCtCQUFvR0EsTUFBcEc7QUFDRDs7QUFFRCxXQUFPWixjQUFjLENBQUNJLE1BQUQsRUFBU0MsR0FBVCxFQUFjQyxPQUFkLEVBQXVCQyxHQUF2QixDQUFyQjtBQUNELEdBakJEO0FBa0JEOztBQUVETyxNQUFNLENBQUNDLE9BQVAsR0FBaUJsQixPQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcY29yZVxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBHaXRodWJTbHVnZ2VyID0gcmVxdWlyZSgnZ2l0aHViLXNsdWdnZXInKTtcbmNvbnN0IHRvU2x1ZyA9IHJlcXVpcmUoJy4vdG9TbHVnJyk7XG5cbi8qKlxuICogVGhlIGFuY2hvcnMgcGx1Z2luIGFkZHMgR0ZNLXN0eWxlIGFuY2hvcnMgdG8gaGVhZGluZ3MuXG4gKi9cbmZ1bmN0aW9uIGFuY2hvcnMobWQsIHNsdWdQcmVwcm9jZXNzb3IpIHtcbiAgY29uc3Qgb3JpZ2luYWxSZW5kZXIgPSBtZC5yZW5kZXJlci5ydWxlcy5oZWFkaW5nX29wZW47XG5cbiAgbWQucmVuZGVyZXIucnVsZXMuaGVhZGluZ19vcGVuID0gZnVuY3Rpb24gKHRva2VucywgaWR4LCBvcHRpb25zLCBlbnYpIHtcbiAgICBpZiAoIWVudi5zbHVnZ2VyKSB7XG4gICAgICBlbnYuc2x1Z2dlciA9IG5ldyBHaXRodWJTbHVnZ2VyKCk7XG4gICAgfVxuICAgIGNvbnN0IHNsdWdnZXIgPSBlbnYuc2x1Z2dlcjtcbiAgICBjb25zdCB0ZXh0VG9rZW4gPSB0b2tlbnNbaWR4ICsgMV07XG5cbiAgICBpZiAodGV4dFRva2VuLmNvbnRlbnQpIHtcbiAgICAgIGNvbnN0IHNsdWdCYXNlID1cbiAgICAgICAgc2x1Z1ByZXByb2Nlc3NvciAmJiB0eXBlb2Ygc2x1Z1ByZXByb2Nlc3NvciA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICAgID8gc2x1Z1ByZXByb2Nlc3Nvcih0ZXh0VG9rZW4uY29udGVudClcbiAgICAgICAgICA6IHRleHRUb2tlbi5jb250ZW50O1xuICAgICAgY29uc3QgYW5jaG9yID0gdG9TbHVnKHNsdWdCYXNlLCBzbHVnZ2VyKTtcbiAgICAgIHJldHVybiBgPGgke3Rva2Vuc1tpZHhdLmhMZXZlbH0+PGEgY2xhc3M9XCJhbmNob3JcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBpZD1cIiR7YW5jaG9yfVwiPjwvYT48YSBocmVmPVwiIyR7YW5jaG9yfVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwiaGFzaC1saW5rXCI+PHN2ZyBjbGFzcz1cImhhc2gtbGluay1pY29uXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2ZXJzaW9uPVwiMS4xXCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHdpZHRoPVwiMTZcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgZD1cIk00IDloMXYxSDRjLTEuNSAwLTMtMS42OS0zLTMuNVMyLjU1IDMgNCAzaDRjMS40NSAwIDMgMS42OSAzIDMuNSAwIDEuNDEtLjkxIDIuNzItMiAzLjI1VjguNTljLjU4LS40NSAxLTEuMjcgMS0yLjA5QzEwIDUuMjIgOC45OCA0IDggNEg0Yy0uOTggMC0yIDEuMjItMiAyLjVTMyA5IDQgOXptOS0zaC0xdjFoMWMxIDAgMiAxLjIyIDIgMi41UzEzLjk4IDEyIDEzIDEySDljLS45OCAwLTItMS4yMi0yLTIuNSAwLS44My40Mi0xLjY0IDEtMi4wOVY2LjI1Yy0xLjA5LjUzLTIgMS44NC0yIDMuMjVDNiAxMS4zMSA3LjU1IDEzIDkgMTNoNGMxLjQ1IDAgMy0xLjY5IDMtMy41UzE0LjUgNiAxMyA2elwiPjwvcGF0aD48L3N2Zz48L2E+YDtcbiAgICB9XG5cbiAgICByZXR1cm4gb3JpZ2luYWxSZW5kZXIodG9rZW5zLCBpZHgsIG9wdGlvbnMsIGVudik7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYW5jaG9ycztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "anchors.js"
      ],
      "names": [
        "GithubSlugger",
        "require",
        "toSlug",
        "anchors",
        "md",
        "slugPreprocessor",
        "originalRender",
        "renderer",
        "rules",
        "heading_open",
        "tokens",
        "idx",
        "options",
        "env",
        "slugger",
        "textToken",
        "content",
        "slugBase",
        "anchor",
        "hLevel",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;AAEA;;;;;AAGA,SAASE,OAAT,CAAiBC,EAAjB,EAAqBC,gBAArB,EAAuC;AACrC,MAAMC,cAAc,GAAGF,EAAE,CAACG,QAAH,CAAYC,KAAZ,CAAkBC,YAAzC;;AAEAL,EAAAA,EAAE,CAACG,QAAH,CAAYC,KAAZ,CAAkBC,YAAlB,GAAiC,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AACpE,QAAI,CAACA,GAAG,CAACC,OAAT,EAAkB;AAChBD,MAAAA,GAAG,CAACC,OAAJ,GAAc,IAAId,aAAJ,EAAd;AACD;;AACD,QAAMc,OAAO,GAAGD,GAAG,CAACC,OAApB;AACA,QAAMC,SAAS,GAAGL,MAAM,CAACC,GAAG,GAAG,CAAP,CAAxB;;AAEA,QAAII,SAAS,CAACC,OAAd,EAAuB;AACrB,UAAMC,QAAQ,GACZZ,gBAAgB,IAAI,OAAOA,gBAAP,KAA4B,UAAhD,GACIA,gBAAgB,CAACU,SAAS,CAACC,OAAX,CADpB,GAEID,SAAS,CAACC,OAHhB;AAIA,UAAME,MAAM,GAAGhB,MAAM,CAACe,QAAD,EAAWH,OAAX,CAArB;AACA,yBAAYJ,MAAM,CAACC,GAAD,CAAN,CAAYQ,MAAxB,4DAA2ED,MAA3E,+BAAoGA,MAApG;AACD;;AAED,WAAOZ,cAAc,CAACI,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,CAArB;AACD,GAjBD;AAkBD;;AAEDO,MAAM,CAACC,OAAP,GAAiBlB,OAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst GithubSlugger = require('github-slugger');\nconst toSlug = require('./toSlug');\n\n/**\n * The anchors plugin adds GFM-style anchors to headings.\n */\nfunction anchors(md, slugPreprocessor) {\n  const originalRender = md.renderer.rules.heading_open;\n\n  md.renderer.rules.heading_open = function (tokens, idx, options, env) {\n    if (!env.slugger) {\n      env.slugger = new GithubSlugger();\n    }\n    const slugger = env.slugger;\n    const textToken = tokens[idx + 1];\n\n    if (textToken.content) {\n      const slugBase =\n        slugPreprocessor && typeof slugPreprocessor === 'function'\n          ? slugPreprocessor(textToken.content)\n          : textToken.content;\n      const anchor = toSlug(slugBase, slugger);\n      return `<h${tokens[idx].hLevel}><a class=\"anchor\" aria-hidden=\"true\" id=\"${anchor}\"></a><a href=\"#${anchor}\" aria-hidden=\"true\" class=\"hash-link\"><svg class=\"hash-link-icon\" aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>`;\n    }\n\n    return originalRender(tokens, idx, options, env);\n  };\n}\n\nmodule.exports = anchors;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\sitemap.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\sitemap.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\sitemap.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\sitemap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "sitemap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nvar glob = require('glob');\n\nvar CWD = process.cwd();\n\nvar sitemap = require('sitemap');\n\nvar utils = require('../core/utils');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar readMetadata = require('./readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\n\nvar Metadata = require('../core/metadata.js');\n\nreadMetadata.generateMetadataBlog(siteConfig);\n\nvar MetadataBlog = require('../core/MetadataBlog.js');\n\nmodule.exports = function (callback) {\n  console.log('sitemap.js triggered...');\n  var files = glob.sync(\"\".concat(CWD, \"/pages/en/**/*.js\")); // English-only is the default.\n\n  var enabledLanguages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }]; // If we have a languages.js file, get all the enabled languages in there\n\n  if (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n    var languages = require(\"\".concat(CWD, \"/languages.js\"));\n\n    enabledLanguages = languages.filter(function (lang) {\n      return lang.enabled;\n    });\n  } // Create a url mapping to all the enabled languages files\n\n\n  var urls = files.map(function (file) {\n    var url = file.split('/pages/en')[1];\n    url = siteConfig.cleanUrl ? url.replace(/\\.js$/, '') : url.replace(/\\.js$/, '.html');\n    var links = enabledLanguages.map(function (lang) {\n      var langUrl = lang.tag + url;\n      return {\n        lang: lang.tag,\n        url: langUrl\n      };\n    });\n    return {\n      url: url,\n      changefreq: 'weekly',\n      priority: 0.5,\n      links: links\n    };\n  });\n  MetadataBlog.forEach(function (blog) {\n    urls.push({\n      url: \"/blog/\".concat(utils.getPath(blog.path, siteConfig.cleanUrl)),\n      changefreq: 'weekly',\n      priority: 0.3\n    });\n  });\n  Object.keys(Metadata).filter(function (key) {\n    return Metadata[key].language === 'en';\n  }).forEach(function (key) {\n    var doc = Metadata[key];\n    var docUrl = utils.getPath(doc.permalink, siteConfig.cleanUrl);\n    var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n    var links = enabledLanguages.map(function (lang) {\n      var langUrl = docUrl.replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(lang.tag, \"/\"));\n      return {\n        lang: lang.tag,\n        url: langUrl\n      };\n    });\n    urls.push({\n      url: docUrl,\n      changefreq: 'hourly',\n      priority: 1.0,\n      links: links\n    });\n  });\n  var sm = sitemap.createSitemap({\n    hostname: siteConfig.url + siteConfig.baseUrl,\n    cacheTime: 600 * 1000,\n    // 600 sec - cache purge period\n    urls: urls\n  });\n  sm.toXML(function (err, xml) {\n    callback(err, xml);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sitemap.js"
      ],
      "names": [
        "fs",
        "require",
        "glob",
        "CWD",
        "process",
        "cwd",
        "sitemap",
        "utils",
        "loadConfig",
        "siteConfig",
        "readMetadata",
        "generateMetadataDocs",
        "Metadata",
        "generateMetadataBlog",
        "MetadataBlog",
        "module",
        "exports",
        "callback",
        "console",
        "log",
        "files",
        "sync",
        "enabledLanguages",
        "enabled",
        "name",
        "tag",
        "existsSync",
        "languages",
        "filter",
        "lang",
        "urls",
        "map",
        "file",
        "url",
        "split",
        "cleanUrl",
        "replace",
        "links",
        "langUrl",
        "changefreq",
        "priority",
        "forEach",
        "blog",
        "push",
        "getPath",
        "path",
        "Object",
        "keys",
        "key",
        "language",
        "doc",
        "docUrl",
        "permalink",
        "docsPart",
        "docsUrl",
        "RegExp",
        "sm",
        "createSitemap",
        "hostname",
        "baseUrl",
        "cacheTime",
        "toXML",
        "err",
        "xml"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nconst glob = require('glob');\n\nconst CWD = process.cwd();\n\nconst sitemap = require('sitemap');\nconst utils = require('../core/utils');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst readMetadata = require('./readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\nconst Metadata = require('../core/metadata.js');\n\nreadMetadata.generateMetadataBlog(siteConfig);\nconst MetadataBlog = require('../core/MetadataBlog.js');\n\nmodule.exports = function (callback) {\n  console.log('sitemap.js triggered...');\n\n  const files = glob.sync(`${CWD}/pages/en/**/*.js`);\n\n  // English-only is the default.\n  let enabledLanguages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n\n  // If we have a languages.js file, get all the enabled languages in there\n  if (fs.existsSync(`${CWD}/languages.js`)) {\n    const languages = require(`${CWD}/languages.js`);\n    enabledLanguages = languages.filter((lang) => lang.enabled);\n  }\n\n  // Create a url mapping to all the enabled languages files\n  const urls = files.map((file) => {\n    let url = file.split('/pages/en')[1];\n    url = siteConfig.cleanUrl\n      ? url.replace(/\\.js$/, '')\n      : url.replace(/\\.js$/, '.html');\n    const links = enabledLanguages.map((lang) => {\n      const langUrl = lang.tag + url;\n      return {lang: lang.tag, url: langUrl};\n    });\n    return {url, changefreq: 'weekly', priority: 0.5, links};\n  });\n\n  MetadataBlog.forEach((blog) => {\n    urls.push({\n      url: `/blog/${utils.getPath(blog.path, siteConfig.cleanUrl)}`,\n      changefreq: 'weekly',\n      priority: 0.3,\n    });\n  });\n\n  Object.keys(Metadata)\n    .filter((key) => Metadata[key].language === 'en')\n    .forEach((key) => {\n      const doc = Metadata[key];\n      const docUrl = utils.getPath(doc.permalink, siteConfig.cleanUrl);\n      const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n      const links = enabledLanguages.map((lang) => {\n        const langUrl = docUrl.replace(\n          new RegExp(`^${docsPart}en/`),\n          `${docsPart}${lang.tag}/`,\n        );\n        return {lang: lang.tag, url: langUrl};\n      });\n      urls.push({\n        url: docUrl,\n        changefreq: 'hourly',\n        priority: 1.0,\n        links,\n      });\n    });\n\n  const sm = sitemap.createSitemap({\n    hostname: siteConfig.url + siteConfig.baseUrl,\n    cacheTime: 600 * 1000, // 600 sec - cache purge period\n    urls,\n  });\n\n  sm.toXML((err, xml) => {\n    callback(err, xml);\n  });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\metadata.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\metadata.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\metadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\metadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "metadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * @generated\n */\nmodule.exports = {\n  \"doc1\": {\n    \"id\": \"doc1\",\n    \"title\": \"Latin-ish\",\n    \"sidebar_label\": \"Example Page\",\n    \"source\": \"doc1.md\",\n    \"permalink\": \"docs/doc1.html\",\n    \"localized_id\": \"doc1\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"Docusaurus\",\n    \"subcategory\": null,\n    \"order\": 1,\n    \"next_id\": \"doc2\",\n    \"next\": \"doc2\",\n    \"next_title\": \"document number 2\"\n  },\n  \"doc2\": {\n    \"id\": \"doc2\",\n    \"title\": \"document number 2\",\n    \"source\": \"doc2.md\",\n    \"permalink\": \"docs/doc2.html\",\n    \"localized_id\": \"doc2\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 2,\n    \"next_id\": \"doc3\",\n    \"next\": \"doc3\",\n    \"previous_id\": \"doc1\",\n    \"previous\": \"doc1\",\n    \"previous_title\": \"Latin-ish\",\n    \"next_title\": \"This is document number 3\"\n  },\n  \"doc3\": {\n    \"id\": \"doc3\",\n    \"title\": \"This is document number 3\",\n    \"source\": \"doc3.md\",\n    \"permalink\": \"docs/doc3.html\",\n    \"localized_id\": \"doc3\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"Second Category\",\n    \"subcategory\": null,\n    \"order\": 3,\n    \"previous_id\": \"doc2\",\n    \"previous\": \"doc2\",\n    \"previous_title\": \"document number 2\"\n  },\n  \"doc4\": {\n    \"id\": \"doc4\",\n    \"title\": \"Other Document\",\n    \"source\": \"exampledoc4.md\",\n    \"permalink\": \"docs/doc4.html\",\n    \"localized_id\": \"doc4\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs-other\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 1,\n    \"next_id\": \"doc5\",\n    \"next\": \"doc5\",\n    \"next_title\": \"Fifth Document\"\n  },\n  \"doc5\": {\n    \"id\": \"doc5\",\n    \"title\": \"Fifth Document\",\n    \"source\": \"exampledoc5.md\",\n    \"permalink\": \"docs/doc5.html\",\n    \"localized_id\": \"doc5\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs-other\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 2,\n    \"previous_id\": \"doc4\",\n    \"previous\": \"doc4\",\n    \"previous_title\": \"Other Document\"\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGFkYXRhLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7OztBQUdBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZixVQUFRO0FBQ04sVUFBTSxNQURBO0FBRU4sYUFBUyxXQUZIO0FBR04scUJBQWlCLGNBSFg7QUFJTixjQUFVLFNBSko7QUFLTixpQkFBYSxnQkFMUDtBQU1OLG9CQUFnQixNQU5WO0FBT04sZ0JBQVksSUFQTjtBQVFOLGVBQVcsTUFSTDtBQVNOLGdCQUFZLFlBVE47QUFVTixtQkFBZSxJQVZUO0FBV04sYUFBUyxDQVhIO0FBWU4sZUFBVyxNQVpMO0FBYU4sWUFBUSxNQWJGO0FBY04sa0JBQWM7QUFkUixHQURPO0FBaUJmLFVBQVE7QUFDTixVQUFNLE1BREE7QUFFTixhQUFTLG1CQUZIO0FBR04sY0FBVSxTQUhKO0FBSU4saUJBQWEsZ0JBSlA7QUFLTixvQkFBZ0IsTUFMVjtBQU1OLGdCQUFZLElBTk47QUFPTixlQUFXLE1BUEw7QUFRTixnQkFBWSxnQkFSTjtBQVNOLG1CQUFlLElBVFQ7QUFVTixhQUFTLENBVkg7QUFXTixlQUFXLE1BWEw7QUFZTixZQUFRLE1BWkY7QUFhTixtQkFBZSxNQWJUO0FBY04sZ0JBQVksTUFkTjtBQWVOLHNCQUFrQixXQWZaO0FBZ0JOLGtCQUFjO0FBaEJSLEdBakJPO0FBbUNmLFVBQVE7QUFDTixVQUFNLE1BREE7QUFFTixhQUFTLDJCQUZIO0FBR04sY0FBVSxTQUhKO0FBSU4saUJBQWEsZ0JBSlA7QUFLTixvQkFBZ0IsTUFMVjtBQU1OLGdCQUFZLElBTk47QUFPTixlQUFXLE1BUEw7QUFRTixnQkFBWSxpQkFSTjtBQVNOLG1CQUFlLElBVFQ7QUFVTixhQUFTLENBVkg7QUFXTixtQkFBZSxNQVhUO0FBWU4sZ0JBQVksTUFaTjtBQWFOLHNCQUFrQjtBQWJaLEdBbkNPO0FBa0RmLFVBQVE7QUFDTixVQUFNLE1BREE7QUFFTixhQUFTLGdCQUZIO0FBR04sY0FBVSxnQkFISjtBQUlOLGlCQUFhLGdCQUpQO0FBS04sb0JBQWdCLE1BTFY7QUFNTixnQkFBWSxJQU5OO0FBT04sZUFBVyxZQVBMO0FBUU4sZ0JBQVksZ0JBUk47QUFTTixtQkFBZSxJQVRUO0FBVU4sYUFBUyxDQVZIO0FBV04sZUFBVyxNQVhMO0FBWU4sWUFBUSxNQVpGO0FBYU4sa0JBQWM7QUFiUixHQWxETztBQWlFZixVQUFRO0FBQ04sVUFBTSxNQURBO0FBRU4sYUFBUyxnQkFGSDtBQUdOLGNBQVUsZ0JBSEo7QUFJTixpQkFBYSxnQkFKUDtBQUtOLG9CQUFnQixNQUxWO0FBTU4sZ0JBQVksSUFOTjtBQU9OLGVBQVcsWUFQTDtBQVFOLGdCQUFZLGdCQVJOO0FBU04sbUJBQWUsSUFUVDtBQVVOLGFBQVMsQ0FWSDtBQVdOLG1CQUFlLE1BWFQ7QUFZTixnQkFBWSxNQVpOO0FBYU4sc0JBQWtCO0FBYlo7QUFqRU8sQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcRGVza3RvcFxcQmxvZ1xcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXGNvcmVcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGdlbmVyYXRlZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJkb2MxXCI6IHtcbiAgICBcImlkXCI6IFwiZG9jMVwiLFxuICAgIFwidGl0bGVcIjogXCJMYXRpbi1pc2hcIixcbiAgICBcInNpZGViYXJfbGFiZWxcIjogXCJFeGFtcGxlIFBhZ2VcIixcbiAgICBcInNvdXJjZVwiOiBcImRvYzEubWRcIixcbiAgICBcInBlcm1hbGlua1wiOiBcImRvY3MvZG9jMS5odG1sXCIsXG4gICAgXCJsb2NhbGl6ZWRfaWRcIjogXCJkb2MxXCIsXG4gICAgXCJsYW5ndWFnZVwiOiBcImVuXCIsXG4gICAgXCJzaWRlYmFyXCI6IFwiZG9jc1wiLFxuICAgIFwiY2F0ZWdvcnlcIjogXCJEb2N1c2F1cnVzXCIsXG4gICAgXCJzdWJjYXRlZ29yeVwiOiBudWxsLFxuICAgIFwib3JkZXJcIjogMSxcbiAgICBcIm5leHRfaWRcIjogXCJkb2MyXCIsXG4gICAgXCJuZXh0XCI6IFwiZG9jMlwiLFxuICAgIFwibmV4dF90aXRsZVwiOiBcImRvY3VtZW50IG51bWJlciAyXCJcbiAgfSxcbiAgXCJkb2MyXCI6IHtcbiAgICBcImlkXCI6IFwiZG9jMlwiLFxuICAgIFwidGl0bGVcIjogXCJkb2N1bWVudCBudW1iZXIgMlwiLFxuICAgIFwic291cmNlXCI6IFwiZG9jMi5tZFwiLFxuICAgIFwicGVybWFsaW5rXCI6IFwiZG9jcy9kb2MyLmh0bWxcIixcbiAgICBcImxvY2FsaXplZF9pZFwiOiBcImRvYzJcIixcbiAgICBcImxhbmd1YWdlXCI6IFwiZW5cIixcbiAgICBcInNpZGViYXJcIjogXCJkb2NzXCIsXG4gICAgXCJjYXRlZ29yeVwiOiBcIkZpcnN0IENhdGVnb3J5XCIsXG4gICAgXCJzdWJjYXRlZ29yeVwiOiBudWxsLFxuICAgIFwib3JkZXJcIjogMixcbiAgICBcIm5leHRfaWRcIjogXCJkb2MzXCIsXG4gICAgXCJuZXh0XCI6IFwiZG9jM1wiLFxuICAgIFwicHJldmlvdXNfaWRcIjogXCJkb2MxXCIsXG4gICAgXCJwcmV2aW91c1wiOiBcImRvYzFcIixcbiAgICBcInByZXZpb3VzX3RpdGxlXCI6IFwiTGF0aW4taXNoXCIsXG4gICAgXCJuZXh0X3RpdGxlXCI6IFwiVGhpcyBpcyBkb2N1bWVudCBudW1iZXIgM1wiXG4gIH0sXG4gIFwiZG9jM1wiOiB7XG4gICAgXCJpZFwiOiBcImRvYzNcIixcbiAgICBcInRpdGxlXCI6IFwiVGhpcyBpcyBkb2N1bWVudCBudW1iZXIgM1wiLFxuICAgIFwic291cmNlXCI6IFwiZG9jMy5tZFwiLFxuICAgIFwicGVybWFsaW5rXCI6IFwiZG9jcy9kb2MzLmh0bWxcIixcbiAgICBcImxvY2FsaXplZF9pZFwiOiBcImRvYzNcIixcbiAgICBcImxhbmd1YWdlXCI6IFwiZW5cIixcbiAgICBcInNpZGViYXJcIjogXCJkb2NzXCIsXG4gICAgXCJjYXRlZ29yeVwiOiBcIlNlY29uZCBDYXRlZ29yeVwiLFxuICAgIFwic3ViY2F0ZWdvcnlcIjogbnVsbCxcbiAgICBcIm9yZGVyXCI6IDMsXG4gICAgXCJwcmV2aW91c19pZFwiOiBcImRvYzJcIixcbiAgICBcInByZXZpb3VzXCI6IFwiZG9jMlwiLFxuICAgIFwicHJldmlvdXNfdGl0bGVcIjogXCJkb2N1bWVudCBudW1iZXIgMlwiXG4gIH0sXG4gIFwiZG9jNFwiOiB7XG4gICAgXCJpZFwiOiBcImRvYzRcIixcbiAgICBcInRpdGxlXCI6IFwiT3RoZXIgRG9jdW1lbnRcIixcbiAgICBcInNvdXJjZVwiOiBcImV4YW1wbGVkb2M0Lm1kXCIsXG4gICAgXCJwZXJtYWxpbmtcIjogXCJkb2NzL2RvYzQuaHRtbFwiLFxuICAgIFwibG9jYWxpemVkX2lkXCI6IFwiZG9jNFwiLFxuICAgIFwibGFuZ3VhZ2VcIjogXCJlblwiLFxuICAgIFwic2lkZWJhclwiOiBcImRvY3Mtb3RoZXJcIixcbiAgICBcImNhdGVnb3J5XCI6IFwiRmlyc3QgQ2F0ZWdvcnlcIixcbiAgICBcInN1YmNhdGVnb3J5XCI6IG51bGwsXG4gICAgXCJvcmRlclwiOiAxLFxuICAgIFwibmV4dF9pZFwiOiBcImRvYzVcIixcbiAgICBcIm5leHRcIjogXCJkb2M1XCIsXG4gICAgXCJuZXh0X3RpdGxlXCI6IFwiRmlmdGggRG9jdW1lbnRcIlxuICB9LFxuICBcImRvYzVcIjoge1xuICAgIFwiaWRcIjogXCJkb2M1XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZpZnRoIERvY3VtZW50XCIsXG4gICAgXCJzb3VyY2VcIjogXCJleGFtcGxlZG9jNS5tZFwiLFxuICAgIFwicGVybWFsaW5rXCI6IFwiZG9jcy9kb2M1Lmh0bWxcIixcbiAgICBcImxvY2FsaXplZF9pZFwiOiBcImRvYzVcIixcbiAgICBcImxhbmd1YWdlXCI6IFwiZW5cIixcbiAgICBcInNpZGViYXJcIjogXCJkb2NzLW90aGVyXCIsXG4gICAgXCJjYXRlZ29yeVwiOiBcIkZpcnN0IENhdGVnb3J5XCIsXG4gICAgXCJzdWJjYXRlZ29yeVwiOiBudWxsLFxuICAgIFwib3JkZXJcIjogMixcbiAgICBcInByZXZpb3VzX2lkXCI6IFwiZG9jNFwiLFxuICAgIFwicHJldmlvdXNcIjogXCJkb2M0XCIsXG4gICAgXCJwcmV2aW91c190aXRsZVwiOiBcIk90aGVyIERvY3VtZW50XCJcbiAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "metadata.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;AAGAA,MAAM,CAACC,OAAP,GAAiB;AACf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,WAFH;AAGN,qBAAiB,cAHX;AAIN,cAAU,SAJJ;AAKN,iBAAa,gBALP;AAMN,oBAAgB,MANV;AAON,gBAAY,IAPN;AAQN,eAAW,MARL;AASN,gBAAY,YATN;AAUN,mBAAe,IAVT;AAWN,aAAS,CAXH;AAYN,eAAW,MAZL;AAaN,YAAQ,MAbF;AAcN,kBAAc;AAdR,GADO;AAiBf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,mBAFH;AAGN,cAAU,SAHJ;AAIN,iBAAa,gBAJP;AAKN,oBAAgB,MALV;AAMN,gBAAY,IANN;AAON,eAAW,MAPL;AAQN,gBAAY,gBARN;AASN,mBAAe,IATT;AAUN,aAAS,CAVH;AAWN,eAAW,MAXL;AAYN,YAAQ,MAZF;AAaN,mBAAe,MAbT;AAcN,gBAAY,MAdN;AAeN,sBAAkB,WAfZ;AAgBN,kBAAc;AAhBR,GAjBO;AAmCf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,2BAFH;AAGN,cAAU,SAHJ;AAIN,iBAAa,gBAJP;AAKN,oBAAgB,MALV;AAMN,gBAAY,IANN;AAON,eAAW,MAPL;AAQN,gBAAY,iBARN;AASN,mBAAe,IATT;AAUN,aAAS,CAVH;AAWN,mBAAe,MAXT;AAYN,gBAAY,MAZN;AAaN,sBAAkB;AAbZ,GAnCO;AAkDf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,gBAFH;AAGN,cAAU,gBAHJ;AAIN,iBAAa,gBAJP;AAKN,oBAAgB,MALV;AAMN,gBAAY,IANN;AAON,eAAW,YAPL;AAQN,gBAAY,gBARN;AASN,mBAAe,IATT;AAUN,aAAS,CAVH;AAWN,eAAW,MAXL;AAYN,YAAQ,MAZF;AAaN,kBAAc;AAbR,GAlDO;AAiEf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,gBAFH;AAGN,cAAU,gBAHJ;AAIN,iBAAa,gBAJP;AAKN,oBAAgB,MALV;AAMN,gBAAY,IANN;AAON,eAAW,YAPL;AAQN,gBAAY,gBARN;AASN,mBAAe,IATT;AAUN,aAAS,CAVH;AAWN,mBAAe,MAXT;AAYN,gBAAY,MAZN;AAaN,sBAAkB;AAbZ;AAjEO,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * @generated\n */\nmodule.exports = {\n  \"doc1\": {\n    \"id\": \"doc1\",\n    \"title\": \"Latin-ish\",\n    \"sidebar_label\": \"Example Page\",\n    \"source\": \"doc1.md\",\n    \"permalink\": \"docs/doc1.html\",\n    \"localized_id\": \"doc1\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"Docusaurus\",\n    \"subcategory\": null,\n    \"order\": 1,\n    \"next_id\": \"doc2\",\n    \"next\": \"doc2\",\n    \"next_title\": \"document number 2\"\n  },\n  \"doc2\": {\n    \"id\": \"doc2\",\n    \"title\": \"document number 2\",\n    \"source\": \"doc2.md\",\n    \"permalink\": \"docs/doc2.html\",\n    \"localized_id\": \"doc2\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 2,\n    \"next_id\": \"doc3\",\n    \"next\": \"doc3\",\n    \"previous_id\": \"doc1\",\n    \"previous\": \"doc1\",\n    \"previous_title\": \"Latin-ish\",\n    \"next_title\": \"This is document number 3\"\n  },\n  \"doc3\": {\n    \"id\": \"doc3\",\n    \"title\": \"This is document number 3\",\n    \"source\": \"doc3.md\",\n    \"permalink\": \"docs/doc3.html\",\n    \"localized_id\": \"doc3\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"Second Category\",\n    \"subcategory\": null,\n    \"order\": 3,\n    \"previous_id\": \"doc2\",\n    \"previous\": \"doc2\",\n    \"previous_title\": \"document number 2\"\n  },\n  \"doc4\": {\n    \"id\": \"doc4\",\n    \"title\": \"Other Document\",\n    \"source\": \"exampledoc4.md\",\n    \"permalink\": \"docs/doc4.html\",\n    \"localized_id\": \"doc4\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs-other\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 1,\n    \"next_id\": \"doc5\",\n    \"next\": \"doc5\",\n    \"next_title\": \"Fifth Document\"\n  },\n  \"doc5\": {\n    \"id\": \"doc5\",\n    \"title\": \"Fifth Document\",\n    \"source\": \"exampledoc5.md\",\n    \"permalink\": \"docs/doc5.html\",\n    \"localized_id\": \"doc5\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs-other\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 2,\n    \"previous_id\": \"doc4\",\n    \"previous\": \"doc4\",\n    \"previous_title\": \"Other Document\"\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597072715078
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\MetadataBlog.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\MetadataBlog.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\MetadataBlog.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\MetadataBlog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "MetadataBlog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * @generated\n */\nmodule.exports = [{\n  \"path\": \"2017/10/24/new-version-1.0.0.html\",\n  \"content\": \"\\nThis blog post will test file name parsing issues when periods are present.\\n\",\n  \"title\": \"New Version 1.0.0\",\n  \"author\": \"Eric Nakagawa\",\n  \"authorURL\": \"http://twitter.com/ericnakagawa\",\n  \"authorFBID\": 661277173,\n  \"id\": \"New Version 1.0.0\",\n  \"date\": \"2017-10-24T06:00:00.000Z\",\n  \"seconds\": 1508824800\n}, {\n  \"path\": \"2017/09/26/adding-rss.html\",\n  \"content\": \"\\nThis is a test post.\\n\\nA whole bunch of other information.\\n\",\n  \"title\": \"Adding RSS Support\",\n  \"author\": \"Eric Nakagawa\",\n  \"authorURL\": \"http://twitter.com/ericnakagawa\",\n  \"authorFBID\": 661277173,\n  \"id\": \"Adding RSS Support\",\n  \"date\": \"2017-09-26T06:00:00.000Z\",\n  \"seconds\": 1506405600\n}, {\n  \"path\": \"2017/09/25/testing-rss.html\",\n  \"content\": \"\\n1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\\n\\nThis should be truncated.\\n\\n<!--truncate-->\\n\\nThis line should never render in XML.\\n\",\n  \"title\": \"Adding RSS Support - RSS Truncation Test\",\n  \"author\": \"Eric Nakagawa\",\n  \"authorURL\": \"http://twitter.com/ericnakagawa\",\n  \"authorFBID\": 661277173,\n  \"id\": \"Adding RSS Support - RSS Truncation Test\",\n  \"date\": \"2017-09-25T06:00:00.000Z\",\n  \"seconds\": 1506319200\n}, {\n  \"path\": \"2017/04/10/blog-post-two.html\",\n  \"content\": \"\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus elementum massa eget nulla aliquet sagittis. Proin odio tortor, vulputate ut odio in, ultrices ultricies augue. Cras ornare ultrices lorem malesuada iaculis. Etiam sit amet libero tempor, pulvinar mauris sed, sollicitudin sapien.\\n\\n<!--truncate-->\\n\\nMauris vestibulum ullamcorper nibh, ut semper purus pulvinar ut. Donec volutpat orci sit amet mauris malesuada, non pulvinar augue aliquam. Vestibulum ultricies at urna ut suscipit. Morbi iaculis, erat at imperdiet semper, ipsum nulla sodales erat, eget tincidunt justo dui quis justo. Pellentesque dictum bibendum diam at aliquet. Sed pulvinar, dolor quis finibus ornare, eros odio facilisis erat, eu rhoncus nunc dui sed ex. Nunc gravida dui massa, sed ornare arcu tincidunt sit amet. Maecenas efficitur sapien neque, a laoreet libero feugiat ut.\\n\\nNulla facilisi. Maecenas sodales nec purus eget posuere. Sed sapien quam, pretium a risus in, porttitor dapibus erat. Sed sit amet fringilla ipsum, eget iaculis augue. Integer sollicitudin tortor quis ultricies aliquam. Suspendisse fringilla nunc in tellus cursus, at placerat tellus scelerisque. Sed tempus elit a sollicitudin rhoncus. Nulla facilisi. Morbi nec dolor dolor. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras et aliquet lectus. Pellentesque sit amet eros nisi. Quisque ac sapien in sapien congue accumsan. Nullam in posuere ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Proin lacinia leo a nibh fringilla pharetra.\\n\\nOrci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin venenatis lectus dui, vel ultrices ante bibendum hendrerit. Aenean egestas feugiat dui id hendrerit. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Curabitur in tellus laoreet, eleifend nunc id, viverra leo. Proin vulputate non dolor vel vulputate. Curabitur pretium lobortis felis, sit amet finibus lorem suscipit ut. Sed non mollis risus. Duis sagittis, mi in euismod tincidunt, nunc mauris vestibulum urna, at euismod est elit quis erat. Phasellus accumsan vitae neque eu placerat. In elementum arcu nec tellus imperdiet, eget maximus nulla sodales. Curabitur eu sapien eget nisl sodales fermentum.\\n\\nPhasellus pulvinar ex id commodo imperdiet. Praesent odio nibh, sollicitudin sit amet faucibus id, placerat at metus. Donec vitae eros vitae tortor hendrerit finibus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Quisque vitae purus dolor. Duis suscipit ac nulla et finibus. Phasellus ac sem sed dui dictum gravida. Phasellus eleifend vestibulum facilisis. Integer pharetra nec enim vitae mattis. Duis auctor, lectus quis condimentum bibendum, nunc dolor aliquam massa, id bibendum orci velit quis magna. Ut volutpat nulla nunc, sed interdum magna condimentum non. Sed urna metus, scelerisque vitae consectetur a, feugiat quis magna. Donec dignissim ornare nisl, eget tempor risus malesuada quis.\\n\",\n  \"title\": \"New Blog Post\",\n  \"author\": \"Blog Author\",\n  \"authorURL\": \"http://twitter.com/\",\n  \"authorFBID\": 100002976521003,\n  \"id\": \"New Blog Post\",\n  \"date\": \"2017-04-10T06:00:00.000Z\",\n  \"seconds\": 1491804000\n}, {\n  \"path\": \"2016/03/11/blog-post.html\",\n  \"content\": \"\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus elementum massa eget nulla aliquet sagittis. Proin odio tortor, vulputate ut odio in, ultrices ultricies augue. Cras ornare ultrices lorem malesuada iaculis. Etiam sit amet libero tempor, pulvinar mauris sed, sollicitudin sapien.\\n\\n<!--truncate-->\\n\\nMauris vestibulum ullamcorper nibh, ut semper purus pulvinar ut. Donec volutpat orci sit amet mauris malesuada, non pulvinar augue aliquam. Vestibulum ultricies at urna ut suscipit. Morbi iaculis, erat at imperdiet semper, ipsum nulla sodales erat, eget tincidunt justo dui quis justo. Pellentesque dictum bibendum diam at aliquet. Sed pulvinar, dolor quis finibus ornare, eros odio facilisis erat, eu rhoncus nunc dui sed ex. Nunc gravida dui massa, sed ornare arcu tincidunt sit amet. Maecenas efficitur sapien neque, a laoreet libero feugiat ut.\\n\\nNulla facilisi. Maecenas sodales nec purus eget posuere. Sed sapien quam, pretium a risus in, porttitor dapibus erat. Sed sit amet fringilla ipsum, eget iaculis augue. Integer sollicitudin tortor quis ultricies aliquam. Suspendisse fringilla nunc in tellus cursus, at placerat tellus scelerisque. Sed tempus elit a sollicitudin rhoncus. Nulla facilisi. Morbi nec dolor dolor. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras et aliquet lectus. Pellentesque sit amet eros nisi. Quisque ac sapien in sapien congue accumsan. Nullam in posuere ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Proin lacinia leo a nibh fringilla pharetra.\\n\\nOrci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin venenatis lectus dui, vel ultrices ante bibendum hendrerit. Aenean egestas feugiat dui id hendrerit. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Curabitur in tellus laoreet, eleifend nunc id, viverra leo. Proin vulputate non dolor vel vulputate. Curabitur pretium lobortis felis, sit amet finibus lorem suscipit ut. Sed non mollis risus. Duis sagittis, mi in euismod tincidunt, nunc mauris vestibulum urna, at euismod est elit quis erat. Phasellus accumsan vitae neque eu placerat. In elementum arcu nec tellus imperdiet, eget maximus nulla sodales. Curabitur eu sapien eget nisl sodales fermentum.\\n\\nPhasellus pulvinar ex id commodo imperdiet. Praesent odio nibh, sollicitudin sit amet faucibus id, placerat at metus. Donec vitae eros vitae tortor hendrerit finibus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Quisque vitae purus dolor. Duis suscipit ac nulla et finibus. Phasellus ac sem sed dui dictum gravida. Phasellus eleifend vestibulum facilisis. Integer pharetra nec enim vitae mattis. Duis auctor, lectus quis condimentum bibendum, nunc dolor aliquam massa, id bibendum orci velit quis magna. Ut volutpat nulla nunc, sed interdum magna condimentum non. Sed urna metus, scelerisque vitae consectetur a, feugiat quis magna. Donec dignissim ornare nisl, eget tempor risus malesuada quis.\\n\",\n  \"title\": \"Blog Title\",\n  \"author\": \"Blog Author\",\n  \"authorURL\": \"http://twitter.com/\",\n  \"authorFBID\": 100002976521003,\n  \"id\": \"Blog Title\",\n  \"date\": \"2016-03-11T06:00:00.000Z\",\n  \"seconds\": 1457676000\n}];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "MetadataBlog.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,CACf;AACE,UAAQ,mCADV;AAEE,aAAW,iFAFb;AAGE,WAAS,mBAHX;AAIE,YAAU,eAJZ;AAKE,eAAa,iCALf;AAME,gBAAc,SANhB;AAOE,QAAM,mBAPR;AAQE,UAAQ,0BARV;AASE,aAAW;AATb,CADe,EAYf;AACE,UAAQ,4BADV;AAEE,aAAW,iEAFb;AAGE,WAAS,oBAHX;AAIE,YAAU,eAJZ;AAKE,eAAa,iCALf;AAME,gBAAc,SANhB;AAOE,QAAM,oBAPR;AAQE,UAAQ,0BARV;AASE,aAAW;AATb,CAZe,EAuBf;AACE,UAAQ,6BADV;AAEE,aAAW,yVAFb;AAGE,WAAS,0CAHX;AAIE,YAAU,eAJZ;AAKE,eAAa,iCALf;AAME,gBAAc,SANhB;AAOE,QAAM,0CAPR;AAQE,UAAQ,0BARV;AASE,aAAW;AATb,CAvBe,EAkCf;AACE,UAAQ,+BADV;AAEE,aAAW,koGAFb;AAGE,WAAS,eAHX;AAIE,YAAU,aAJZ;AAKE,eAAa,qBALf;AAME,gBAAc,eANhB;AAOE,QAAM,eAPR;AAQE,UAAQ,0BARV;AASE,aAAW;AATb,CAlCe,EA6Cf;AACE,UAAQ,2BADV;AAEE,aAAW,koGAFb;AAGE,WAAS,YAHX;AAIE,YAAU,aAJZ;AAKE,eAAa,qBALf;AAME,gBAAc,eANhB;AAOE,QAAM,YAPR;AAQE,UAAQ,0BARV;AASE,aAAW;AATb,CA7Ce,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * @generated\n */\nmodule.exports = [\n  {\n    \"path\": \"2017/10/24/new-version-1.0.0.html\",\n    \"content\": \"\\nThis blog post will test file name parsing issues when periods are present.\\n\",\n    \"title\": \"New Version 1.0.0\",\n    \"author\": \"Eric Nakagawa\",\n    \"authorURL\": \"http://twitter.com/ericnakagawa\",\n    \"authorFBID\": 661277173,\n    \"id\": \"New Version 1.0.0\",\n    \"date\": \"2017-10-24T06:00:00.000Z\",\n    \"seconds\": 1508824800\n  },\n  {\n    \"path\": \"2017/09/26/adding-rss.html\",\n    \"content\": \"\\nThis is a test post.\\n\\nA whole bunch of other information.\\n\",\n    \"title\": \"Adding RSS Support\",\n    \"author\": \"Eric Nakagawa\",\n    \"authorURL\": \"http://twitter.com/ericnakagawa\",\n    \"authorFBID\": 661277173,\n    \"id\": \"Adding RSS Support\",\n    \"date\": \"2017-09-26T06:00:00.000Z\",\n    \"seconds\": 1506405600\n  },\n  {\n    \"path\": \"2017/09/25/testing-rss.html\",\n    \"content\": \"\\n1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\\n\\nThis should be truncated.\\n\\n<!--truncate-->\\n\\nThis line should never render in XML.\\n\",\n    \"title\": \"Adding RSS Support - RSS Truncation Test\",\n    \"author\": \"Eric Nakagawa\",\n    \"authorURL\": \"http://twitter.com/ericnakagawa\",\n    \"authorFBID\": 661277173,\n    \"id\": \"Adding RSS Support - RSS Truncation Test\",\n    \"date\": \"2017-09-25T06:00:00.000Z\",\n    \"seconds\": 1506319200\n  },\n  {\n    \"path\": \"2017/04/10/blog-post-two.html\",\n    \"content\": \"\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus elementum massa eget nulla aliquet sagittis. Proin odio tortor, vulputate ut odio in, ultrices ultricies augue. Cras ornare ultrices lorem malesuada iaculis. Etiam sit amet libero tempor, pulvinar mauris sed, sollicitudin sapien.\\n\\n<!--truncate-->\\n\\nMauris vestibulum ullamcorper nibh, ut semper purus pulvinar ut. Donec volutpat orci sit amet mauris malesuada, non pulvinar augue aliquam. Vestibulum ultricies at urna ut suscipit. Morbi iaculis, erat at imperdiet semper, ipsum nulla sodales erat, eget tincidunt justo dui quis justo. Pellentesque dictum bibendum diam at aliquet. Sed pulvinar, dolor quis finibus ornare, eros odio facilisis erat, eu rhoncus nunc dui sed ex. Nunc gravida dui massa, sed ornare arcu tincidunt sit amet. Maecenas efficitur sapien neque, a laoreet libero feugiat ut.\\n\\nNulla facilisi. Maecenas sodales nec purus eget posuere. Sed sapien quam, pretium a risus in, porttitor dapibus erat. Sed sit amet fringilla ipsum, eget iaculis augue. Integer sollicitudin tortor quis ultricies aliquam. Suspendisse fringilla nunc in tellus cursus, at placerat tellus scelerisque. Sed tempus elit a sollicitudin rhoncus. Nulla facilisi. Morbi nec dolor dolor. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras et aliquet lectus. Pellentesque sit amet eros nisi. Quisque ac sapien in sapien congue accumsan. Nullam in posuere ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Proin lacinia leo a nibh fringilla pharetra.\\n\\nOrci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin venenatis lectus dui, vel ultrices ante bibendum hendrerit. Aenean egestas feugiat dui id hendrerit. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Curabitur in tellus laoreet, eleifend nunc id, viverra leo. Proin vulputate non dolor vel vulputate. Curabitur pretium lobortis felis, sit amet finibus lorem suscipit ut. Sed non mollis risus. Duis sagittis, mi in euismod tincidunt, nunc mauris vestibulum urna, at euismod est elit quis erat. Phasellus accumsan vitae neque eu placerat. In elementum arcu nec tellus imperdiet, eget maximus nulla sodales. Curabitur eu sapien eget nisl sodales fermentum.\\n\\nPhasellus pulvinar ex id commodo imperdiet. Praesent odio nibh, sollicitudin sit amet faucibus id, placerat at metus. Donec vitae eros vitae tortor hendrerit finibus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Quisque vitae purus dolor. Duis suscipit ac nulla et finibus. Phasellus ac sem sed dui dictum gravida. Phasellus eleifend vestibulum facilisis. Integer pharetra nec enim vitae mattis. Duis auctor, lectus quis condimentum bibendum, nunc dolor aliquam massa, id bibendum orci velit quis magna. Ut volutpat nulla nunc, sed interdum magna condimentum non. Sed urna metus, scelerisque vitae consectetur a, feugiat quis magna. Donec dignissim ornare nisl, eget tempor risus malesuada quis.\\n\",\n    \"title\": \"New Blog Post\",\n    \"author\": \"Blog Author\",\n    \"authorURL\": \"http://twitter.com/\",\n    \"authorFBID\": 100002976521003,\n    \"id\": \"New Blog Post\",\n    \"date\": \"2017-04-10T06:00:00.000Z\",\n    \"seconds\": 1491804000\n  },\n  {\n    \"path\": \"2016/03/11/blog-post.html\",\n    \"content\": \"\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus elementum massa eget nulla aliquet sagittis. Proin odio tortor, vulputate ut odio in, ultrices ultricies augue. Cras ornare ultrices lorem malesuada iaculis. Etiam sit amet libero tempor, pulvinar mauris sed, sollicitudin sapien.\\n\\n<!--truncate-->\\n\\nMauris vestibulum ullamcorper nibh, ut semper purus pulvinar ut. Donec volutpat orci sit amet mauris malesuada, non pulvinar augue aliquam. Vestibulum ultricies at urna ut suscipit. Morbi iaculis, erat at imperdiet semper, ipsum nulla sodales erat, eget tincidunt justo dui quis justo. Pellentesque dictum bibendum diam at aliquet. Sed pulvinar, dolor quis finibus ornare, eros odio facilisis erat, eu rhoncus nunc dui sed ex. Nunc gravida dui massa, sed ornare arcu tincidunt sit amet. Maecenas efficitur sapien neque, a laoreet libero feugiat ut.\\n\\nNulla facilisi. Maecenas sodales nec purus eget posuere. Sed sapien quam, pretium a risus in, porttitor dapibus erat. Sed sit amet fringilla ipsum, eget iaculis augue. Integer sollicitudin tortor quis ultricies aliquam. Suspendisse fringilla nunc in tellus cursus, at placerat tellus scelerisque. Sed tempus elit a sollicitudin rhoncus. Nulla facilisi. Morbi nec dolor dolor. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras et aliquet lectus. Pellentesque sit amet eros nisi. Quisque ac sapien in sapien congue accumsan. Nullam in posuere ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Proin lacinia leo a nibh fringilla pharetra.\\n\\nOrci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin venenatis lectus dui, vel ultrices ante bibendum hendrerit. Aenean egestas feugiat dui id hendrerit. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Curabitur in tellus laoreet, eleifend nunc id, viverra leo. Proin vulputate non dolor vel vulputate. Curabitur pretium lobortis felis, sit amet finibus lorem suscipit ut. Sed non mollis risus. Duis sagittis, mi in euismod tincidunt, nunc mauris vestibulum urna, at euismod est elit quis erat. Phasellus accumsan vitae neque eu placerat. In elementum arcu nec tellus imperdiet, eget maximus nulla sodales. Curabitur eu sapien eget nisl sodales fermentum.\\n\\nPhasellus pulvinar ex id commodo imperdiet. Praesent odio nibh, sollicitudin sit amet faucibus id, placerat at metus. Donec vitae eros vitae tortor hendrerit finibus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Quisque vitae purus dolor. Duis suscipit ac nulla et finibus. Phasellus ac sem sed dui dictum gravida. Phasellus eleifend vestibulum facilisis. Integer pharetra nec enim vitae mattis. Duis auctor, lectus quis condimentum bibendum, nunc dolor aliquam massa, id bibendum orci velit quis magna. Ut volutpat nulla nunc, sed interdum magna condimentum non. Sed urna metus, scelerisque vitae consectetur a, feugiat quis magna. Donec dignissim ornare nisl, eget tempor risus malesuada quis.\\n\",\n    \"title\": \"Blog Title\",\n    \"author\": \"Blog Author\",\n    \"authorURL\": \"http://twitter.com/\",\n    \"authorFBID\": 100002976521003,\n    \"id\": \"Blog Title\",\n    \"date\": \"2016-03-11T06:00:00.000Z\",\n    \"seconds\": 1457676000\n  }\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597072715094
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\routing.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\routing.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\routing.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\routing.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "routing.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction blog(siteConfig) {\n  return new RegExp(\"^\".concat(siteConfig.baseUrl, \"blog/.*html$\"));\n}\n\nfunction docs(siteConfig) {\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n  return new RegExp(\"^\".concat(siteConfig.baseUrl).concat(docsPart, \".*html$\"));\n}\n\nfunction dotfiles() {\n  return /(?!.*html$)^\\/.*\\.[^\\n/]+$/;\n}\n\nfunction feed(siteConfig) {\n  return new RegExp(\"^\".concat(siteConfig.baseUrl, \"blog/(feed.xml|atom.xml)$\"));\n}\n\nfunction noExtension() {\n  return /\\/[^.]*\\/?$/;\n}\n\nfunction page(siteConfig) {\n  var gr = function gr(regex) {\n    return regex.toString().replace(/(^\\/|\\/$)/gm, '');\n  };\n\n  if (siteConfig.docsUrl === '') {\n    return new RegExp(\"(?!\".concat(gr(blog(siteConfig)), \")^\").concat(siteConfig.baseUrl, \".*.html$\"));\n  }\n\n  return new RegExp(\"(?!\".concat(gr(blog(siteConfig)), \"|\").concat(gr(docs(siteConfig)), \")^\").concat(siteConfig.baseUrl, \".*.html$\"));\n}\n\nfunction sitemap(siteConfig) {\n  return new RegExp(\"^\".concat(siteConfig.baseUrl, \"sitemap.xml$\"));\n}\n\nmodule.exports = {\n  blog: blog,\n  docs: docs,\n  dotfiles: dotfiles,\n  feed: feed,\n  page: page,\n  noExtension: noExtension,\n  sitemap: sitemap\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRpbmcuanMiXSwibmFtZXMiOlsiYmxvZyIsInNpdGVDb25maWciLCJSZWdFeHAiLCJiYXNlVXJsIiwiZG9jcyIsImRvY3NQYXJ0IiwiZG9jc1VybCIsImRvdGZpbGVzIiwiZmVlZCIsIm5vRXh0ZW5zaW9uIiwicGFnZSIsImdyIiwicmVnZXgiLCJ0b1N0cmluZyIsInJlcGxhY2UiLCJzaXRlbWFwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBTUEsU0FBU0EsSUFBVCxDQUFjQyxVQUFkLEVBQTBCO0FBQ3hCLFNBQU8sSUFBSUMsTUFBSixZQUFlRCxVQUFVLENBQUNFLE9BQTFCLGtCQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsSUFBVCxDQUFjSCxVQUFkLEVBQTBCO0FBQ3hCLE1BQU1JLFFBQVEsYUFBTUosVUFBVSxDQUFDSyxPQUFYLGFBQXdCTCxVQUFVLENBQUNLLE9BQW5DLFNBQWdELEVBQXRELENBQWQ7QUFDQSxTQUFPLElBQUlKLE1BQUosWUFBZUQsVUFBVSxDQUFDRSxPQUExQixTQUFvQ0UsUUFBcEMsYUFBUDtBQUNEOztBQUVELFNBQVNFLFFBQVQsR0FBb0I7QUFDbEIsU0FBTyw0QkFBUDtBQUNEOztBQUVELFNBQVNDLElBQVQsQ0FBY1AsVUFBZCxFQUEwQjtBQUN4QixTQUFPLElBQUlDLE1BQUosWUFBZUQsVUFBVSxDQUFDRSxPQUExQiwrQkFBUDtBQUNEOztBQUVELFNBQVNNLFdBQVQsR0FBdUI7QUFDckIsU0FBTyxhQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsSUFBVCxDQUFjVCxVQUFkLEVBQTBCO0FBQ3hCLE1BQU1VLEVBQUUsR0FBRyxTQUFMQSxFQUFLLENBQUNDLEtBQUQ7QUFBQSxXQUFXQSxLQUFLLENBQUNDLFFBQU4sR0FBaUJDLE9BQWpCLENBQXlCLGFBQXpCLEVBQXdDLEVBQXhDLENBQVg7QUFBQSxHQUFYOztBQUVBLE1BQUliLFVBQVUsQ0FBQ0ssT0FBWCxLQUF1QixFQUEzQixFQUErQjtBQUM3QixXQUFPLElBQUlKLE1BQUosY0FDQ1MsRUFBRSxDQUFDWCxJQUFJLENBQUNDLFVBQUQsQ0FBTCxDQURILGVBQzBCQSxVQUFVLENBQUNFLE9BRHJDLGNBQVA7QUFHRDs7QUFDRCxTQUFPLElBQUlELE1BQUosY0FDQ1MsRUFBRSxDQUFDWCxJQUFJLENBQUNDLFVBQUQsQ0FBTCxDQURILGNBQ3lCVSxFQUFFLENBQUNQLElBQUksQ0FBQ0gsVUFBRCxDQUFMLENBRDNCLGVBRUhBLFVBQVUsQ0FBQ0UsT0FGUixjQUFQO0FBS0Q7O0FBRUQsU0FBU1ksT0FBVCxDQUFpQmQsVUFBakIsRUFBNkI7QUFDM0IsU0FBTyxJQUFJQyxNQUFKLFlBQWVELFVBQVUsQ0FBQ0UsT0FBMUIsa0JBQVA7QUFDRDs7QUFFRGEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZqQixFQUFBQSxJQUFJLEVBQUpBLElBRGU7QUFFZkksRUFBQUEsSUFBSSxFQUFKQSxJQUZlO0FBR2ZHLEVBQUFBLFFBQVEsRUFBUkEsUUFIZTtBQUlmQyxFQUFBQSxJQUFJLEVBQUpBLElBSmU7QUFLZkUsRUFBQUEsSUFBSSxFQUFKQSxJQUxlO0FBTWZELEVBQUFBLFdBQVcsRUFBWEEsV0FOZTtBQU9mTSxFQUFBQSxPQUFPLEVBQVBBO0FBUGUsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcRGVza3RvcFxcQmxvZ1xcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuZnVuY3Rpb24gYmxvZyhzaXRlQ29uZmlnKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKGBeJHtzaXRlQ29uZmlnLmJhc2VVcmx9YmxvZy8uKmh0bWwkYCk7XG59XG5cbmZ1bmN0aW9uIGRvY3Moc2l0ZUNvbmZpZykge1xuICBjb25zdCBkb2NzUGFydCA9IGAke3NpdGVDb25maWcuZG9jc1VybCA/IGAke3NpdGVDb25maWcuZG9jc1VybH0vYCA6ICcnfWA7XG4gIHJldHVybiBuZXcgUmVnRXhwKGBeJHtzaXRlQ29uZmlnLmJhc2VVcmx9JHtkb2NzUGFydH0uKmh0bWwkYCk7XG59XG5cbmZ1bmN0aW9uIGRvdGZpbGVzKCkge1xuICByZXR1cm4gLyg/IS4qaHRtbCQpXlxcLy4qXFwuW15cXG4vXSskLztcbn1cblxuZnVuY3Rpb24gZmVlZChzaXRlQ29uZmlnKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKGBeJHtzaXRlQ29uZmlnLmJhc2VVcmx9YmxvZy8oZmVlZC54bWx8YXRvbS54bWwpJGApO1xufVxuXG5mdW5jdGlvbiBub0V4dGVuc2lvbigpIHtcbiAgcmV0dXJuIC9cXC9bXi5dKlxcLz8kLztcbn1cblxuZnVuY3Rpb24gcGFnZShzaXRlQ29uZmlnKSB7XG4gIGNvbnN0IGdyID0gKHJlZ2V4KSA9PiByZWdleC50b1N0cmluZygpLnJlcGxhY2UoLyheXFwvfFxcLyQpL2dtLCAnJyk7XG5cbiAgaWYgKHNpdGVDb25maWcuZG9jc1VybCA9PT0gJycpIHtcbiAgICByZXR1cm4gbmV3IFJlZ0V4cChcbiAgICAgIGAoPyEke2dyKGJsb2coc2l0ZUNvbmZpZykpfSleJHtzaXRlQ29uZmlnLmJhc2VVcmx9LiouaHRtbCRgLFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIG5ldyBSZWdFeHAoXG4gICAgYCg/ISR7Z3IoYmxvZyhzaXRlQ29uZmlnKSl9fCR7Z3IoZG9jcyhzaXRlQ29uZmlnKSl9KV4ke1xuICAgICAgc2l0ZUNvbmZpZy5iYXNlVXJsXG4gICAgfS4qLmh0bWwkYCxcbiAgKTtcbn1cblxuZnVuY3Rpb24gc2l0ZW1hcChzaXRlQ29uZmlnKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKGBeJHtzaXRlQ29uZmlnLmJhc2VVcmx9c2l0ZW1hcC54bWwkYCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBibG9nLFxuICBkb2NzLFxuICBkb3RmaWxlcyxcbiAgZmVlZCxcbiAgcGFnZSxcbiAgbm9FeHRlbnNpb24sXG4gIHNpdGVtYXAsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "routing.js"
      ],
      "names": [
        "blog",
        "siteConfig",
        "RegExp",
        "baseUrl",
        "docs",
        "docsPart",
        "docsUrl",
        "dotfiles",
        "feed",
        "noExtension",
        "page",
        "gr",
        "regex",
        "toString",
        "replace",
        "sitemap",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAMA,SAASA,IAAT,CAAcC,UAAd,EAA0B;AACxB,SAAO,IAAIC,MAAJ,YAAeD,UAAU,CAACE,OAA1B,kBAAP;AACD;;AAED,SAASC,IAAT,CAAcH,UAAd,EAA0B;AACxB,MAAMI,QAAQ,aAAMJ,UAAU,CAACK,OAAX,aAAwBL,UAAU,CAACK,OAAnC,SAAgD,EAAtD,CAAd;AACA,SAAO,IAAIJ,MAAJ,YAAeD,UAAU,CAACE,OAA1B,SAAoCE,QAApC,aAAP;AACD;;AAED,SAASE,QAAT,GAAoB;AAClB,SAAO,4BAAP;AACD;;AAED,SAASC,IAAT,CAAcP,UAAd,EAA0B;AACxB,SAAO,IAAIC,MAAJ,YAAeD,UAAU,CAACE,OAA1B,+BAAP;AACD;;AAED,SAASM,WAAT,GAAuB;AACrB,SAAO,aAAP;AACD;;AAED,SAASC,IAAT,CAAcT,UAAd,EAA0B;AACxB,MAAMU,EAAE,GAAG,SAALA,EAAK,CAACC,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,aAAzB,EAAwC,EAAxC,CAAX;AAAA,GAAX;;AAEA,MAAIb,UAAU,CAACK,OAAX,KAAuB,EAA3B,EAA+B;AAC7B,WAAO,IAAIJ,MAAJ,cACCS,EAAE,CAACX,IAAI,CAACC,UAAD,CAAL,CADH,eAC0BA,UAAU,CAACE,OADrC,cAAP;AAGD;;AACD,SAAO,IAAID,MAAJ,cACCS,EAAE,CAACX,IAAI,CAACC,UAAD,CAAL,CADH,cACyBU,EAAE,CAACP,IAAI,CAACH,UAAD,CAAL,CAD3B,eAEHA,UAAU,CAACE,OAFR,cAAP;AAKD;;AAED,SAASY,OAAT,CAAiBd,UAAjB,EAA6B;AAC3B,SAAO,IAAIC,MAAJ,YAAeD,UAAU,CAACE,OAA1B,kBAAP;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,IAAI,EAAJA,IADe;AAEfI,EAAAA,IAAI,EAAJA,IAFe;AAGfG,EAAAA,QAAQ,EAARA,QAHe;AAIfC,EAAAA,IAAI,EAAJA,IAJe;AAKfE,EAAAA,IAAI,EAAJA,IALe;AAMfD,EAAAA,WAAW,EAAXA,WANe;AAOfM,EAAAA,OAAO,EAAPA;AAPe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction blog(siteConfig) {\n  return new RegExp(`^${siteConfig.baseUrl}blog/.*html$`);\n}\n\nfunction docs(siteConfig) {\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  return new RegExp(`^${siteConfig.baseUrl}${docsPart}.*html$`);\n}\n\nfunction dotfiles() {\n  return /(?!.*html$)^\\/.*\\.[^\\n/]+$/;\n}\n\nfunction feed(siteConfig) {\n  return new RegExp(`^${siteConfig.baseUrl}blog/(feed.xml|atom.xml)$`);\n}\n\nfunction noExtension() {\n  return /\\/[^.]*\\/?$/;\n}\n\nfunction page(siteConfig) {\n  const gr = (regex) => regex.toString().replace(/(^\\/|\\/$)/gm, '');\n\n  if (siteConfig.docsUrl === '') {\n    return new RegExp(\n      `(?!${gr(blog(siteConfig))})^${siteConfig.baseUrl}.*.html$`,\n    );\n  }\n  return new RegExp(\n    `(?!${gr(blog(siteConfig))}|${gr(docs(siteConfig))})^${\n      siteConfig.baseUrl\n    }.*.html$`,\n  );\n}\n\nfunction sitemap(siteConfig) {\n  return new RegExp(`^${siteConfig.baseUrl}sitemap.xml$`);\n}\n\nmodule.exports = {\n  blog,\n  docs,\n  dotfiles,\n  feed,\n  page,\n  noExtension,\n  sitemap,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\env.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\env.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\env.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\env.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "env.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar fs = require('fs-extra');\n\nvar path = require('path');\n\nvar chalk = require('chalk');\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar join = path.join;\nvar languagesFile = join(CWD, 'languages.js');\nvar versionsJSONFile = join(CWD, 'versions.json');\nvar versionsFile = join(CWD, 'pages/en/versions.js');\n\nvar Translation = /*#__PURE__*/function () {\n  function Translation() {\n    var _this = this;\n\n    _classCallCheck(this, Translation);\n\n    _defineProperty(this, \"enabledLanguages\", function () {\n      return _this.languages.filter(function (lang) {\n        return lang.enabled;\n      });\n    });\n\n    this.enabled = false;\n    this.languages = [{\n      enabled: true,\n      name: 'English',\n      tag: 'en'\n    }];\n    this.load();\n  }\n\n  _createClass(Translation, [{\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(languagesFile)) {\n        this.enabled = true;\n        this.languages = require(languagesFile);\n      }\n    }\n  }]);\n\n  return Translation;\n}();\n\nvar Versioning = /*#__PURE__*/function () {\n  function Versioning() {\n    _classCallCheck(this, Versioning);\n\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n    this.load();\n  }\n\n  _createClass(Versioning, [{\n    key: \"printMissingVersionsPageError\",\n    value: function printMissingVersionsPageError() {\n      console.error(\"\".concat(chalk.yellow('No versions.js file found!')) + \"\\nYou should create your versions.js file in pages/en directory.\" + \"\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.\");\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(versionsJSONFile)) {\n        this.enabled = true;\n        this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n        this.latestVersion = this.versions[0];\n        this.defaultVersion = siteConfig.defaultVersionShown ? siteConfig.defaultVersionShown : this.latestVersion; // otherwise show the latest version (other than next/master)\n      }\n\n      if (!fs.existsSync(versionsFile)) {\n        this.missingVersionsPage = true;\n      }\n    }\n  }]);\n\n  return Versioning;\n}();\n\nvar env = {\n  translation: new Translation(),\n  versioning: new Versioning()\n};\nmodule.exports = env;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudi5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwiZnMiLCJyZXF1aXJlIiwicGF0aCIsImNoYWxrIiwic2l0ZUNvbmZpZyIsImpvaW4iLCJsYW5ndWFnZXNGaWxlIiwidmVyc2lvbnNKU09ORmlsZSIsInZlcnNpb25zRmlsZSIsIlRyYW5zbGF0aW9uIiwibGFuZ3VhZ2VzIiwiZmlsdGVyIiwibGFuZyIsImVuYWJsZWQiLCJuYW1lIiwidGFnIiwibG9hZCIsImV4aXN0c1N5bmMiLCJWZXJzaW9uaW5nIiwibGF0ZXN0VmVyc2lvbiIsImRlZmF1bHRWZXJzaW9uIiwidmVyc2lvbnMiLCJtaXNzaW5nVmVyc2lvbnNQYWdlIiwiY29uc29sZSIsImVycm9yIiwieWVsbG93IiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiZGVmYXVsdFZlcnNpb25TaG93biIsImVudiIsInRyYW5zbGF0aW9uIiwidmVyc2lvbmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFNRyxVQUFVLEdBQUdILE9BQU8sV0FBSUosR0FBSixvQkFBMUI7O0FBRUEsSUFBTVEsSUFBSSxHQUFHSCxJQUFJLENBQUNHLElBQWxCO0FBRUEsSUFBTUMsYUFBYSxHQUFHRCxJQUFJLENBQUNSLEdBQUQsRUFBTSxjQUFOLENBQTFCO0FBQ0EsSUFBTVUsZ0JBQWdCLEdBQUdGLElBQUksQ0FBQ1IsR0FBRCxFQUFNLGVBQU4sQ0FBN0I7QUFDQSxJQUFNVyxZQUFZLEdBQUdILElBQUksQ0FBQ1IsR0FBRCxFQUFNLHNCQUFOLENBQXpCOztJQUVNWSxXO0FBQ0oseUJBQWM7QUFBQTs7QUFBQTs7QUFBQSw4Q0FhSztBQUFBLGFBQU0sS0FBSSxDQUFDQyxTQUFMLENBQWVDLE1BQWYsQ0FBc0IsVUFBQ0MsSUFBRDtBQUFBLGVBQVVBLElBQUksQ0FBQ0MsT0FBZjtBQUFBLE9BQXRCLENBQU47QUFBQSxLQWJMOztBQUNaLFNBQUtBLE9BQUwsR0FBZSxLQUFmO0FBQ0EsU0FBS0gsU0FBTCxHQUFpQixDQUNmO0FBQ0VHLE1BQUFBLE9BQU8sRUFBRSxJQURYO0FBRUVDLE1BQUFBLElBQUksRUFBRSxTQUZSO0FBR0VDLE1BQUFBLEdBQUcsRUFBRTtBQUhQLEtBRGUsQ0FBakI7QUFRQSxTQUFLQyxJQUFMO0FBQ0Q7Ozs7MkJBSU07QUFDTCxVQUFJaEIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjWCxhQUFkLENBQUosRUFBa0M7QUFDaEMsYUFBS08sT0FBTCxHQUFlLElBQWY7QUFDQSxhQUFLSCxTQUFMLEdBQWlCVCxPQUFPLENBQUNLLGFBQUQsQ0FBeEI7QUFDRDtBQUNGOzs7Ozs7SUFHR1ksVTtBQUNKLHdCQUFjO0FBQUE7O0FBQ1osU0FBS0wsT0FBTCxHQUFlLEtBQWY7QUFDQSxTQUFLTSxhQUFMLEdBQXFCLElBQXJCO0FBQ0EsU0FBS0MsY0FBTCxHQUFzQixJQUF0QjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0IsRUFBaEI7QUFDQSxTQUFLQyxtQkFBTCxHQUEyQixLQUEzQjtBQUVBLFNBQUtOLElBQUw7QUFDRDs7OztvREFFK0I7QUFDOUJPLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUNFLFVBQUdyQixLQUFLLENBQUNzQixNQUFOLENBQWEsNEJBQWIsQ0FBSCwySUFERjtBQUtEOzs7MkJBRU07QUFDTCxVQUFJekIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjVixnQkFBZCxDQUFKLEVBQXFDO0FBQ25DLGFBQUtNLE9BQUwsR0FBZSxJQUFmO0FBQ0EsYUFBS1EsUUFBTCxHQUFnQkssSUFBSSxDQUFDQyxLQUFMLENBQVczQixFQUFFLENBQUM0QixZQUFILENBQWdCckIsZ0JBQWhCLEVBQWtDLE1BQWxDLENBQVgsQ0FBaEI7QUFDQSxhQUFLWSxhQUFMLEdBQXFCLEtBQUtFLFFBQUwsQ0FBYyxDQUFkLENBQXJCO0FBQ0EsYUFBS0QsY0FBTCxHQUFzQmhCLFVBQVUsQ0FBQ3lCLG1CQUFYLEdBQ2xCekIsVUFBVSxDQUFDeUIsbUJBRE8sR0FFbEIsS0FBS1YsYUFGVCxDQUptQyxDQU1YO0FBQ3pCOztBQUVELFVBQUksQ0FBQ25CLEVBQUUsQ0FBQ2lCLFVBQUgsQ0FBY1QsWUFBZCxDQUFMLEVBQWtDO0FBQ2hDLGFBQUtjLG1CQUFMLEdBQTJCLElBQTNCO0FBQ0Q7QUFDRjs7Ozs7O0FBR0gsSUFBTVEsR0FBRyxHQUFHO0FBQ1ZDLEVBQUFBLFdBQVcsRUFBRSxJQUFJdEIsV0FBSixFQURIO0FBRVZ1QixFQUFBQSxVQUFVLEVBQUUsSUFBSWQsVUFBSjtBQUZGLENBQVo7QUFLQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSixHQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpO1xuXG5jb25zdCBzaXRlQ29uZmlnID0gcmVxdWlyZShgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcblxuY29uc3Qgam9pbiA9IHBhdGguam9pbjtcblxuY29uc3QgbGFuZ3VhZ2VzRmlsZSA9IGpvaW4oQ1dELCAnbGFuZ3VhZ2VzLmpzJyk7XG5jb25zdCB2ZXJzaW9uc0pTT05GaWxlID0gam9pbihDV0QsICd2ZXJzaW9ucy5qc29uJyk7XG5jb25zdCB2ZXJzaW9uc0ZpbGUgPSBqb2luKENXRCwgJ3BhZ2VzL2VuL3ZlcnNpb25zLmpzJyk7XG5cbmNsYXNzIFRyYW5zbGF0aW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5sYW5ndWFnZXMgPSBbXG4gICAgICB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIG5hbWU6ICdFbmdsaXNoJyxcbiAgICAgICAgdGFnOiAnZW4nLFxuICAgICAgfSxcbiAgICBdO1xuXG4gICAgdGhpcy5sb2FkKCk7XG4gIH1cblxuICBlbmFibGVkTGFuZ3VhZ2VzID0gKCkgPT4gdGhpcy5sYW5ndWFnZXMuZmlsdGVyKChsYW5nKSA9PiBsYW5nLmVuYWJsZWQpO1xuXG4gIGxvYWQoKSB7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmMobGFuZ3VhZ2VzRmlsZSkpIHtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLmxhbmd1YWdlcyA9IHJlcXVpcmUobGFuZ3VhZ2VzRmlsZSk7XG4gICAgfVxuICB9XG59XG5cbmNsYXNzIFZlcnNpb25pbmcge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmVuYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmxhdGVzdFZlcnNpb24gPSBudWxsO1xuICAgIHRoaXMuZGVmYXVsdFZlcnNpb24gPSBudWxsO1xuICAgIHRoaXMudmVyc2lvbnMgPSBbXTtcbiAgICB0aGlzLm1pc3NpbmdWZXJzaW9uc1BhZ2UgPSBmYWxzZTtcblxuICAgIHRoaXMubG9hZCgpO1xuICB9XG5cbiAgcHJpbnRNaXNzaW5nVmVyc2lvbnNQYWdlRXJyb3IoKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgIGAke2NoYWxrLnllbGxvdygnTm8gdmVyc2lvbnMuanMgZmlsZSBmb3VuZCEnKX1gICtcbiAgICAgICAgYFxcbllvdSBzaG91bGQgY3JlYXRlIHlvdXIgdmVyc2lvbnMuanMgZmlsZSBpbiBwYWdlcy9lbiBkaXJlY3RvcnkuYCArXG4gICAgICAgIGBcXG5QbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kb2N1c2F1cnVzLmlvL2RvY3MvZW4vdmVyc2lvbmluZy5odG1sLmAsXG4gICAgKTtcbiAgfVxuXG4gIGxvYWQoKSB7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmModmVyc2lvbnNKU09ORmlsZSkpIHtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLnZlcnNpb25zID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmModmVyc2lvbnNKU09ORmlsZSwgJ3V0ZjgnKSk7XG4gICAgICB0aGlzLmxhdGVzdFZlcnNpb24gPSB0aGlzLnZlcnNpb25zWzBdO1xuICAgICAgdGhpcy5kZWZhdWx0VmVyc2lvbiA9IHNpdGVDb25maWcuZGVmYXVsdFZlcnNpb25TaG93blxuICAgICAgICA/IHNpdGVDb25maWcuZGVmYXVsdFZlcnNpb25TaG93blxuICAgICAgICA6IHRoaXMubGF0ZXN0VmVyc2lvbjsgLy8gb3RoZXJ3aXNlIHNob3cgdGhlIGxhdGVzdCB2ZXJzaW9uIChvdGhlciB0aGFuIG5leHQvbWFzdGVyKVxuICAgIH1cblxuICAgIGlmICghZnMuZXhpc3RzU3luYyh2ZXJzaW9uc0ZpbGUpKSB7XG4gICAgICB0aGlzLm1pc3NpbmdWZXJzaW9uc1BhZ2UgPSB0cnVlO1xuICAgIH1cbiAgfVxufVxuXG5jb25zdCBlbnYgPSB7XG4gIHRyYW5zbGF0aW9uOiBuZXcgVHJhbnNsYXRpb24oKSxcbiAgdmVyc2lvbmluZzogbmV3IFZlcnNpb25pbmcoKSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW52O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "env.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "path",
        "chalk",
        "siteConfig",
        "join",
        "languagesFile",
        "versionsJSONFile",
        "versionsFile",
        "Translation",
        "languages",
        "filter",
        "lang",
        "enabled",
        "name",
        "tag",
        "load",
        "existsSync",
        "Versioning",
        "latestVersion",
        "defaultVersion",
        "versions",
        "missingVersionsPage",
        "console",
        "error",
        "yellow",
        "JSON",
        "parse",
        "readFileSync",
        "defaultVersionShown",
        "env",
        "translation",
        "versioning",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMG,UAAU,GAAGH,OAAO,WAAIJ,GAAJ,oBAA1B;;AAEA,IAAMQ,IAAI,GAAGH,IAAI,CAACG,IAAlB;AAEA,IAAMC,aAAa,GAAGD,IAAI,CAACR,GAAD,EAAM,cAAN,CAA1B;AACA,IAAMU,gBAAgB,GAAGF,IAAI,CAACR,GAAD,EAAM,eAAN,CAA7B;AACA,IAAMW,YAAY,GAAGH,IAAI,CAACR,GAAD,EAAM,sBAAN,CAAzB;;IAEMY,W;AACJ,yBAAc;AAAA;;AAAA;;AAAA,8CAaK;AAAA,aAAM,KAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,OAAf;AAAA,OAAtB,CAAN;AAAA,KAbL;;AACZ,SAAKA,OAAL,GAAe,KAAf;AACA,SAAKH,SAAL,GAAiB,CACf;AACEG,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADe,CAAjB;AAQA,SAAKC,IAAL;AACD;;;;2BAIM;AACL,UAAIhB,EAAE,CAACiB,UAAH,CAAcX,aAAd,CAAJ,EAAkC;AAChC,aAAKO,OAAL,GAAe,IAAf;AACA,aAAKH,SAAL,GAAiBT,OAAO,CAACK,aAAD,CAAxB;AACD;AACF;;;;;;IAGGY,U;AACJ,wBAAc;AAAA;;AACZ,SAAKL,OAAL,GAAe,KAAf;AACA,SAAKM,aAAL,GAAqB,IAArB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AAEA,SAAKN,IAAL;AACD;;;;oDAE+B;AAC9BO,MAAAA,OAAO,CAACC,KAAR,CACE,UAAGrB,KAAK,CAACsB,MAAN,CAAa,4BAAb,CAAH,2IADF;AAKD;;;2BAEM;AACL,UAAIzB,EAAE,CAACiB,UAAH,CAAcV,gBAAd,CAAJ,EAAqC;AACnC,aAAKM,OAAL,GAAe,IAAf;AACA,aAAKQ,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAW3B,EAAE,CAAC4B,YAAH,CAAgBrB,gBAAhB,EAAkC,MAAlC,CAAX,CAAhB;AACA,aAAKY,aAAL,GAAqB,KAAKE,QAAL,CAAc,CAAd,CAArB;AACA,aAAKD,cAAL,GAAsBhB,UAAU,CAACyB,mBAAX,GAClBzB,UAAU,CAACyB,mBADO,GAElB,KAAKV,aAFT,CAJmC,CAMX;AACzB;;AAED,UAAI,CAACnB,EAAE,CAACiB,UAAH,CAAcT,YAAd,CAAL,EAAkC;AAChC,aAAKc,mBAAL,GAA2B,IAA3B;AACD;AACF;;;;;;AAGH,IAAMQ,GAAG,GAAG;AACVC,EAAAA,WAAW,EAAE,IAAItB,WAAJ,EADH;AAEVuB,EAAAA,UAAU,EAAE,IAAId,UAAJ;AAFF,CAAZ;AAKAe,MAAM,CAACC,OAAP,GAAiBJ,GAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('chalk');\n\nconst siteConfig = require(`${CWD}/siteConfig.js`);\n\nconst join = path.join;\n\nconst languagesFile = join(CWD, 'languages.js');\nconst versionsJSONFile = join(CWD, 'versions.json');\nconst versionsFile = join(CWD, 'pages/en/versions.js');\n\nclass Translation {\n  constructor() {\n    this.enabled = false;\n    this.languages = [\n      {\n        enabled: true,\n        name: 'English',\n        tag: 'en',\n      },\n    ];\n\n    this.load();\n  }\n\n  enabledLanguages = () => this.languages.filter((lang) => lang.enabled);\n\n  load() {\n    if (fs.existsSync(languagesFile)) {\n      this.enabled = true;\n      this.languages = require(languagesFile);\n    }\n  }\n}\n\nclass Versioning {\n  constructor() {\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n\n    this.load();\n  }\n\n  printMissingVersionsPageError() {\n    console.error(\n      `${chalk.yellow('No versions.js file found!')}` +\n        `\\nYou should create your versions.js file in pages/en directory.` +\n        `\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.`,\n    );\n  }\n\n  load() {\n    if (fs.existsSync(versionsJSONFile)) {\n      this.enabled = true;\n      this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n      this.latestVersion = this.versions[0];\n      this.defaultVersion = siteConfig.defaultVersionShown\n        ? siteConfig.defaultVersionShown\n        : this.latestVersion; // otherwise show the latest version (other than next/master)\n    }\n\n    if (!fs.existsSync(versionsFile)) {\n      this.missingVersionsPage = true;\n    }\n  }\n}\n\nconst env = {\n  translation: new Translation(),\n  versioning: new Versioning(),\n};\n\nmodule.exports = env;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\pages\\\\en\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\pages\\\\en\\\\tempindex.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\pages\\en\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\pages\\en\\tempindex.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\pages\\en\\tempindex.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\pages\\en\\tempindex.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\pages\\en\\",
        "sourceFileName": "tempindex.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar CompLibrary = require('../../core/CompLibrary.js');\n\nvar MarkdownBlock = CompLibrary.MarkdownBlock;\n/* Used to read markdown */\n\nvar Container = CompLibrary.Container;\nvar GridBlock = CompLibrary.GridBlock;\n\nvar HomeSplash = /*#__PURE__*/function (_React$Component) {\n  _inherits(HomeSplash, _React$Component);\n\n  var _super = _createSuper(HomeSplash);\n\n  function HomeSplash() {\n    _classCallCheck(this, HomeSplash);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomeSplash, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          siteConfig = _this$props.siteConfig,\n          _this$props$language = _this$props.language,\n          language = _this$props$language === void 0 ? '' : _this$props$language;\n      var baseUrl = siteConfig.baseUrl,\n          docsUrl = siteConfig.docsUrl;\n      var docsPart = \"\".concat(docsUrl ? \"\".concat(docsUrl, \"/\") : '');\n      var langPart = \"\".concat(language ? \"\".concat(language, \"/\") : '');\n\n      var docUrl = function docUrl(doc) {\n        return \"\".concat(baseUrl).concat(docsPart).concat(langPart).concat(doc);\n      };\n\n      var SplashContainer = function SplashContainer(props) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"homeContainer\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"homeSplashFade\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper homeWrapper\"\n        }, props.children)));\n      };\n\n      var Logo = function Logo(props) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"projectLogo\"\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: props.img_src,\n          alt: \"Project Logo\"\n        }));\n      };\n\n      var ProjectTitle = function ProjectTitle(props) {\n        return /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"projectTitle\"\n        }, props.title, /*#__PURE__*/React.createElement(\"small\", null, props.tagline));\n      };\n\n      var PromoSection = function PromoSection(props) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"section promoSection\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"promoRow\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pluginRowBlock\"\n        }, props.children)));\n      };\n\n      var Button = function Button(props) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pluginWrapper buttonWrapper\"\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"button\",\n          href: props.href,\n          target: props.target\n        }, props.children));\n      };\n\n      return /*#__PURE__*/React.createElement(SplashContainer, null, /*#__PURE__*/React.createElement(Logo, {\n        img_src: \"\".concat(baseUrl, \"img/undraw_monitor.svg\")\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inner\"\n      }, /*#__PURE__*/React.createElement(ProjectTitle, {\n        tagline: siteConfig.tagline,\n        title: siteConfig.title\n      }), /*#__PURE__*/React.createElement(PromoSection, null, /*#__PURE__*/React.createElement(Button, {\n        href: \"#try\"\n      }, \"Try It Out\"), /*#__PURE__*/React.createElement(Button, {\n        href: docUrl('doc1.html')\n      }, \"Example Link\"), /*#__PURE__*/React.createElement(Button, {\n        href: docUrl('doc2.html')\n      }, \"Example Link 2\"))));\n    }\n  }]);\n\n  return HomeSplash;\n}(React.Component);\n\nvar Index = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Index, _React$Component2);\n\n  var _super2 = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          siteConfig = _this$props2.config,\n          _this$props2$language = _this$props2.language,\n          language = _this$props2$language === void 0 ? '' : _this$props2$language;\n      var baseUrl = siteConfig.baseUrl;\n\n      var Block = function Block(props) {\n        return /*#__PURE__*/React.createElement(Container, {\n          padding: ['bottom', 'top'],\n          id: props.id,\n          background: props.background\n        }, /*#__PURE__*/React.createElement(GridBlock, {\n          align: \"center\",\n          contents: props.children,\n          layout: props.layout\n        }));\n      };\n\n      var FeatureCallout = function FeatureCallout() {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"productShowcaseSection paddingBottom\",\n          style: {\n            textAlign: 'center'\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", null, \"Feature Callout\"), /*#__PURE__*/React.createElement(MarkdownBlock, null, \"These are features of this project\"));\n      };\n\n      var TryOut = function TryOut() {\n        return /*#__PURE__*/React.createElement(Block, {\n          id: \"try\"\n        }, [{\n          content: 'To make your landing page more attractive, use illustrations! Check out ' + '[**unDraw**](https://undraw.co/) which provides you with customizable illustrations which are free to use. ' + 'The illustrations you see on this page are from unDraw.',\n          image: \"\".concat(baseUrl, \"img/undraw_code_review.svg\"),\n          imageAlign: 'left',\n          title: 'Wonderful SVG Illustrations'\n        }]);\n      };\n\n      var Description = function Description() {\n        return /*#__PURE__*/React.createElement(Block, {\n          background: \"dark\"\n        }, [{\n          content: 'This is another description of how this project is useful',\n          image: \"\".concat(baseUrl, \"img/undraw_note_list.svg\"),\n          imageAlign: 'right',\n          title: 'Description'\n        }]);\n      };\n\n      var LearnHow = function LearnHow() {\n        return /*#__PURE__*/React.createElement(Block, {\n          background: \"light\"\n        }, [{\n          content: 'Each new Docusaurus project has **randomly-generated** theme colors.',\n          image: \"\".concat(baseUrl, \"img/undraw_youtube_tutorial.svg\"),\n          imageAlign: 'right',\n          title: 'Randomly Generated Theme Colors'\n        }]);\n      };\n\n      var Features = function Features() {\n        return /*#__PURE__*/React.createElement(Block, {\n          layout: \"fourColumn\"\n        }, [{\n          content: 'This is the content of my feature',\n          image: \"\".concat(baseUrl, \"img/undraw_react.svg\"),\n          imageAlign: 'top',\n          title: 'Feature One'\n        }, {\n          content: 'The content of my second feature',\n          image: \"\".concat(baseUrl, \"img/undraw_operating_system.svg\"),\n          imageAlign: 'top',\n          title: 'Feature Two'\n        }]);\n      };\n\n      var Showcase = function Showcase() {\n        if ((siteConfig.users || []).length === 0) {\n          return null;\n        }\n\n        var showcase = siteConfig.users.filter(function (user) {\n          return user.pinned;\n        }).map(function (user) {\n          return /*#__PURE__*/React.createElement(\"a\", {\n            href: user.infoLink,\n            key: user.infoLink\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: user.image,\n            alt: user.caption,\n            title: user.caption\n          }));\n        });\n\n        var pageUrl = function pageUrl(page) {\n          return baseUrl + (language ? \"\".concat(language, \"/\") : '') + page;\n        };\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"productShowcaseSection paddingBottom\"\n        }, /*#__PURE__*/React.createElement(\"h2\", null, \"Who is Using This?\"), /*#__PURE__*/React.createElement(\"p\", null, \"This project is used by all these people\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"logos\"\n        }, showcase), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"more-users\"\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"button\",\n          href: pageUrl('users.html')\n        }, \"More \", siteConfig.title, \" Users\")));\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(HomeSplash, {\n        siteConfig: siteConfig,\n        language: language\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mainContainer\"\n      }, /*#__PURE__*/React.createElement(Features, null), /*#__PURE__*/React.createElement(FeatureCallout, null), /*#__PURE__*/React.createElement(LearnHow, null), /*#__PURE__*/React.createElement(TryOut, null), /*#__PURE__*/React.createElement(Description, null), /*#__PURE__*/React.createElement(Showcase, null)));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nmodule.exports = Index;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "tempindex.js"
      ],
      "names": [
        "React",
        "require",
        "CompLibrary",
        "MarkdownBlock",
        "Container",
        "GridBlock",
        "HomeSplash",
        "props",
        "siteConfig",
        "language",
        "baseUrl",
        "docsUrl",
        "docsPart",
        "langPart",
        "docUrl",
        "doc",
        "SplashContainer",
        "children",
        "Logo",
        "img_src",
        "ProjectTitle",
        "title",
        "tagline",
        "PromoSection",
        "Button",
        "href",
        "target",
        "Component",
        "Index",
        "config",
        "Block",
        "id",
        "background",
        "layout",
        "FeatureCallout",
        "textAlign",
        "TryOut",
        "content",
        "image",
        "imageAlign",
        "Description",
        "LearnHow",
        "Features",
        "Showcase",
        "users",
        "length",
        "showcase",
        "filter",
        "user",
        "pinned",
        "map",
        "infoLink",
        "caption",
        "pageUrl",
        "page",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\pages\\en\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\n\nconst CompLibrary = require('../../core/CompLibrary.js');\n\nconst MarkdownBlock = CompLibrary.MarkdownBlock; /* Used to read markdown */\nconst Container = CompLibrary.Container;\nconst GridBlock = CompLibrary.GridBlock;\n\nclass HomeSplash extends React.Component {\n  render() {\n    const {siteConfig, language = ''} = this.props;\n    const {baseUrl, docsUrl} = siteConfig;\n    const docsPart = `${docsUrl ? `${docsUrl}/` : ''}`;\n    const langPart = `${language ? `${language}/` : ''}`;\n    const docUrl = (doc) => `${baseUrl}${docsPart}${langPart}${doc}`;\n\n    const SplashContainer = (props) => (\n      <div className=\"homeContainer\">\n        <div className=\"homeSplashFade\">\n          <div className=\"wrapper homeWrapper\">{props.children}</div>\n        </div>\n      </div>\n    );\n\n    const Logo = (props) => (\n      <div className=\"projectLogo\">\n        <img src={props.img_src} alt=\"Project Logo\" />\n      </div>\n    );\n\n    const ProjectTitle = (props) => (\n      <h2 className=\"projectTitle\">\n        {props.title}\n        <small>{props.tagline}</small>\n      </h2>\n    );\n\n    const PromoSection = (props) => (\n      <div className=\"section promoSection\">\n        <div className=\"promoRow\">\n          <div className=\"pluginRowBlock\">{props.children}</div>\n        </div>\n      </div>\n    );\n\n    const Button = (props) => (\n      <div className=\"pluginWrapper buttonWrapper\">\n        <a className=\"button\" href={props.href} target={props.target}>\n          {props.children}\n        </a>\n      </div>\n    );\n\n    return (\n      <SplashContainer>\n        <Logo img_src={`${baseUrl}img/undraw_monitor.svg`} />\n        <div className=\"inner\">\n          <ProjectTitle tagline={siteConfig.tagline} title={siteConfig.title} />\n          <PromoSection>\n            <Button href=\"#try\">Try It Out</Button>\n            <Button href={docUrl('doc1.html')}>Example Link</Button>\n            <Button href={docUrl('doc2.html')}>Example Link 2</Button>\n          </PromoSection>\n        </div>\n      </SplashContainer>\n    );\n  }\n}\n\nclass Index extends React.Component {\n  render() {\n    const {config: siteConfig, language = ''} = this.props;\n    const {baseUrl} = siteConfig;\n\n    const Block = (props) => (\n      <Container\n        padding={['bottom', 'top']}\n        id={props.id}\n        background={props.background}>\n        <GridBlock\n          align=\"center\"\n          contents={props.children}\n          layout={props.layout}\n        />\n      </Container>\n    );\n\n    const FeatureCallout = () => (\n      <div\n        className=\"productShowcaseSection paddingBottom\"\n        style={{textAlign: 'center'}}>\n        <h2>Feature Callout</h2>\n        <MarkdownBlock>These are features of this project</MarkdownBlock>\n      </div>\n    );\n\n    const TryOut = () => (\n      <Block id=\"try\">\n        {[\n          {\n            content:\n              'To make your landing page more attractive, use illustrations! Check out ' +\n              '[**unDraw**](https://undraw.co/) which provides you with customizable illustrations which are free to use. ' +\n              'The illustrations you see on this page are from unDraw.',\n            image: `${baseUrl}img/undraw_code_review.svg`,\n            imageAlign: 'left',\n            title: 'Wonderful SVG Illustrations',\n          },\n        ]}\n      </Block>\n    );\n\n    const Description = () => (\n      <Block background=\"dark\">\n        {[\n          {\n            content:\n              'This is another description of how this project is useful',\n            image: `${baseUrl}img/undraw_note_list.svg`,\n            imageAlign: 'right',\n            title: 'Description',\n          },\n        ]}\n      </Block>\n    );\n\n    const LearnHow = () => (\n      <Block background=\"light\">\n        {[\n          {\n            content:\n              'Each new Docusaurus project has **randomly-generated** theme colors.',\n            image: `${baseUrl}img/undraw_youtube_tutorial.svg`,\n            imageAlign: 'right',\n            title: 'Randomly Generated Theme Colors',\n          },\n        ]}\n      </Block>\n    );\n\n    const Features = () => (\n      <Block layout=\"fourColumn\">\n        {[\n          {\n            content: 'This is the content of my feature',\n            image: `${baseUrl}img/undraw_react.svg`,\n            imageAlign: 'top',\n            title: 'Feature One',\n          },\n          {\n            content: 'The content of my second feature',\n            image: `${baseUrl}img/undraw_operating_system.svg`,\n            imageAlign: 'top',\n            title: 'Feature Two',\n          },\n        ]}\n      </Block>\n    );\n\n    const Showcase = () => {\n      if ((siteConfig.users || []).length === 0) {\n        return null;\n      }\n\n      const showcase = siteConfig.users\n        .filter((user) => user.pinned)\n        .map((user) => (\n          <a href={user.infoLink} key={user.infoLink}>\n            <img src={user.image} alt={user.caption} title={user.caption} />\n          </a>\n        ));\n\n      const pageUrl = (page) =>\n        baseUrl + (language ? `${language}/` : '') + page;\n\n      return (\n        <div className=\"productShowcaseSection paddingBottom\">\n          <h2>Who is Using This?</h2>\n          <p>This project is used by all these people</p>\n          <div className=\"logos\">{showcase}</div>\n          <div className=\"more-users\">\n            <a className=\"button\" href={pageUrl('users.html')}>\n              More {siteConfig.title} Users\n            </a>\n          </div>\n        </div>\n      );\n    };\n\n    return (\n      <div>\n        <HomeSplash siteConfig={siteConfig} language={language} />\n        <div className=\"mainContainer\">\n          <Features />\n          <FeatureCallout />\n          <LearnHow />\n          <TryOut />\n          <Description />\n          <Showcase />\n        </div>\n      </div>\n    );\n  }\n}\n\nmodule.exports = Index;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\CompLibrary.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\CompLibrary.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\CompLibrary.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\CompLibrary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "CompLibrary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar MarkdownBlock = require('./MarkdownBlock.js');\n\nvar Container = require('./Container.js');\n\nvar GridBlock = require('./GridBlock.js'); // A collection of components to provide to users\n\n\nmodule.exports = {\n  MarkdownBlock: MarkdownBlock,\n  Container: Container,\n  GridBlock: GridBlock\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbXBMaWJyYXJ5LmpzIl0sIm5hbWVzIjpbIk1hcmtkb3duQmxvY2siLCJyZXF1aXJlIiwiQ29udGFpbmVyIiwiR3JpZEJsb2NrIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsYUFBYSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBN0I7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBQ0EsSUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsZ0JBQUQsQ0FBekIsQyxDQUVBOzs7QUFDQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZMLEVBQUFBLGFBQWEsRUFBYkEsYUFEZTtBQUVmRSxFQUFBQSxTQUFTLEVBQVRBLFNBRmU7QUFHZkMsRUFBQUEsU0FBUyxFQUFUQTtBQUhlLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXERlc2t0b3BcXEJsb2dcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxjb3JlXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IE1hcmtkb3duQmxvY2sgPSByZXF1aXJlKCcuL01hcmtkb3duQmxvY2suanMnKTtcbmNvbnN0IENvbnRhaW5lciA9IHJlcXVpcmUoJy4vQ29udGFpbmVyLmpzJyk7XG5jb25zdCBHcmlkQmxvY2sgPSByZXF1aXJlKCcuL0dyaWRCbG9jay5qcycpO1xuXG4vLyBBIGNvbGxlY3Rpb24gb2YgY29tcG9uZW50cyB0byBwcm92aWRlIHRvIHVzZXJzXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgTWFya2Rvd25CbG9jayxcbiAgQ29udGFpbmVyLFxuICBHcmlkQmxvY2ssXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "CompLibrary.js"
      ],
      "names": [
        "MarkdownBlock",
        "require",
        "Container",
        "GridBlock",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,aAAa,GAAGC,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,gBAAD,CAAzB,C,CAEA;;;AACAG,MAAM,CAACC,OAAP,GAAiB;AACfL,EAAAA,aAAa,EAAbA,aADe;AAEfE,EAAAA,SAAS,EAATA,SAFe;AAGfC,EAAAA,SAAS,EAATA;AAHe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst MarkdownBlock = require('./MarkdownBlock.js');\nconst Container = require('./Container.js');\nconst GridBlock = require('./GridBlock.js');\n\n// A collection of components to provide to users\nmodule.exports = {\n  MarkdownBlock,\n  Container,\n  GridBlock,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\MarkdownBlock.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\MarkdownBlock.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\MarkdownBlock.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\MarkdownBlock.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "MarkdownBlock.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar Remarkable = require('./Remarkable');\n/**\n * The MarkdownBlock component is used to parse markdown and render to HTML.\n */\n\n\nvar MarkdownBlock = /*#__PURE__*/function (_React$Component) {\n  _inherits(MarkdownBlock, _React$Component);\n\n  var _super = _createSuper(MarkdownBlock);\n\n  function MarkdownBlock() {\n    _classCallCheck(this, MarkdownBlock);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MarkdownBlock, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Remarkable, {\n        source: this.props.children\n      });\n    }\n  }]);\n\n  return MarkdownBlock;\n}(React.Component);\n\nmodule.exports = MarkdownBlock;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1hcmtkb3duQmxvY2suanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwiUmVtYXJrYWJsZSIsIk1hcmtkb3duQmxvY2siLCJwcm9wcyIsImNoaWxkcmVuIiwiQ29tcG9uZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7OztBQU9BLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsSUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsY0FBRCxDQUExQjtBQUVBOzs7OztJQUdNRSxhOzs7Ozs7Ozs7Ozs7OzZCQUNLO0FBQ1AsMEJBQU8sb0JBQUMsVUFBRDtBQUFZLFFBQUEsTUFBTSxFQUFFLEtBQUtDLEtBQUwsQ0FBV0M7QUFBL0IsUUFBUDtBQUNEOzs7O0VBSHlCTCxLQUFLLENBQUNNLFM7O0FBTWxDQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJMLGFBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXERlc2t0b3BcXEJsb2dcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxjb3JlXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IFJlbWFya2FibGUgPSByZXF1aXJlKCcuL1JlbWFya2FibGUnKTtcblxuLyoqXG4gKiBUaGUgTWFya2Rvd25CbG9jayBjb21wb25lbnQgaXMgdXNlZCB0byBwYXJzZSBtYXJrZG93biBhbmQgcmVuZGVyIHRvIEhUTUwuXG4gKi9cbmNsYXNzIE1hcmtkb3duQmxvY2sgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIDxSZW1hcmthYmxlIHNvdXJjZT17dGhpcy5wcm9wcy5jaGlsZHJlbn0gLz47XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNYXJrZG93bkJsb2NrO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "MarkdownBlock.js"
      ],
      "names": [
        "React",
        "require",
        "Remarkable",
        "MarkdownBlock",
        "props",
        "children",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAA1B;AAEA;;;;;IAGME,a;;;;;;;;;;;;;6BACK;AACP,0BAAO,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC;AAA/B,QAAP;AACD;;;;EAHyBL,KAAK,CAACM,S;;AAMlCC,MAAM,CAACC,OAAP,GAAiBL,aAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst Remarkable = require('./Remarkable');\n\n/**\n * The MarkdownBlock component is used to parse markdown and render to HTML.\n */\nclass MarkdownBlock extends React.Component {\n  render() {\n    return <Remarkable source={this.props.children} />;\n  }\n}\n\nmodule.exports = MarkdownBlock;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\Remarkable.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Remarkable.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Remarkable.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Remarkable.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "Remarkable.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar renderMarkdown = require('./renderMarkdown.js');\n\nvar Remarkable = /*#__PURE__*/function (_React$Component) {\n  _inherits(Remarkable, _React$Component);\n\n  var _super = _createSuper(Remarkable);\n\n  function Remarkable() {\n    _classCallCheck(this, Remarkable);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Remarkable, [{\n    key: \"content\",\n    value: function content() {\n      if (this.props.source) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: renderMarkdown(this.props.source)\n          }\n        });\n      }\n\n      return React.Children.map(this.props.children, function (child) {\n        if (typeof child === 'string') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: renderMarkdown(child)\n            }\n          });\n        }\n\n        return child;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Container = this.props.container;\n      return /*#__PURE__*/React.createElement(Container, null, this.content());\n    }\n  }]);\n\n  return Remarkable;\n}(React.Component);\n\nRemarkable.defaultProps = {\n  container: 'div'\n};\nmodule.exports = Remarkable;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlbWFya2FibGUuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwicmVuZGVyTWFya2Rvd24iLCJSZW1hcmthYmxlIiwicHJvcHMiLCJzb3VyY2UiLCJfX2h0bWwiLCJDaGlsZHJlbiIsIm1hcCIsImNoaWxkcmVuIiwiY2hpbGQiLCJDb250YWluZXIiLCJjb250YWluZXIiLCJjb250ZW50IiwiQ29tcG9uZW50IiwiZGVmYXVsdFByb3BzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7OztBQU9BLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsSUFBTUMsY0FBYyxHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FBOUI7O0lBRU1FLFU7Ozs7Ozs7Ozs7Ozs7OEJBQ007QUFDUixVQUFJLEtBQUtDLEtBQUwsQ0FBV0MsTUFBZixFQUF1QjtBQUNyQiw0QkFDRTtBQUNFLFVBQUEsdUJBQXVCLEVBQUU7QUFDdkJDLFlBQUFBLE1BQU0sRUFBRUosY0FBYyxDQUFDLEtBQUtFLEtBQUwsQ0FBV0MsTUFBWjtBQURDO0FBRDNCLFVBREY7QUFPRDs7QUFFRCxhQUFPTCxLQUFLLENBQUNPLFFBQU4sQ0FBZUMsR0FBZixDQUFtQixLQUFLSixLQUFMLENBQVdLLFFBQTlCLEVBQXdDLFVBQUNDLEtBQUQsRUFBVztBQUN4RCxZQUFJLE9BQU9BLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7QUFDN0IsOEJBQ0U7QUFBTSxZQUFBLHVCQUF1QixFQUFFO0FBQUNKLGNBQUFBLE1BQU0sRUFBRUosY0FBYyxDQUFDUSxLQUFEO0FBQXZCO0FBQS9CLFlBREY7QUFHRDs7QUFFRCxlQUFPQSxLQUFQO0FBQ0QsT0FSTSxDQUFQO0FBU0Q7Ozs2QkFFUTtBQUNQLFVBQU1DLFNBQVMsR0FBRyxLQUFLUCxLQUFMLENBQVdRLFNBQTdCO0FBQ0EsMEJBQU8sb0JBQUMsU0FBRCxRQUFZLEtBQUtDLE9BQUwsRUFBWixDQUFQO0FBQ0Q7Ozs7RUExQnNCYixLQUFLLENBQUNjLFM7O0FBNkIvQlgsVUFBVSxDQUFDWSxZQUFYLEdBQTBCO0FBQ3hCSCxFQUFBQSxTQUFTLEVBQUU7QUFEYSxDQUExQjtBQUlBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJkLFVBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXERlc2t0b3BcXEJsb2dcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxjb3JlXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHJlbmRlck1hcmtkb3duID0gcmVxdWlyZSgnLi9yZW5kZXJNYXJrZG93bi5qcycpO1xuXG5jbGFzcyBSZW1hcmthYmxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29udGVudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5zb3VyY2UpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcbiAgICAgICAgICAgIF9faHRtbDogcmVuZGVyTWFya2Rvd24odGhpcy5wcm9wcy5zb3VyY2UpLFxuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5DaGlsZHJlbi5tYXAodGhpcy5wcm9wcy5jaGlsZHJlbiwgKGNoaWxkKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGNoaWxkID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxzcGFuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7X19odG1sOiByZW5kZXJNYXJrZG93bihjaGlsZCl9fSAvPlxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY2hpbGQ7XG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gdGhpcy5wcm9wcy5jb250YWluZXI7XG4gICAgcmV0dXJuIDxDb250YWluZXI+e3RoaXMuY29udGVudCgpfTwvQ29udGFpbmVyPjtcbiAgfVxufVxuXG5SZW1hcmthYmxlLmRlZmF1bHRQcm9wcyA9IHtcbiAgY29udGFpbmVyOiAnZGl2Jyxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVtYXJrYWJsZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Remarkable.js"
      ],
      "names": [
        "React",
        "require",
        "renderMarkdown",
        "Remarkable",
        "props",
        "source",
        "__html",
        "Children",
        "map",
        "children",
        "child",
        "Container",
        "container",
        "content",
        "Component",
        "defaultProps",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,cAAc,GAAGD,OAAO,CAAC,qBAAD,CAA9B;;IAEME,U;;;;;;;;;;;;;8BACM;AACR,UAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,4BACE;AACE,UAAA,uBAAuB,EAAE;AACvBC,YAAAA,MAAM,EAAEJ,cAAc,CAAC,KAAKE,KAAL,CAAWC,MAAZ;AADC;AAD3B,UADF;AAOD;;AAED,aAAOL,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmB,KAAKJ,KAAL,CAAWK,QAA9B,EAAwC,UAACC,KAAD,EAAW;AACxD,YAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,8BACE;AAAM,YAAA,uBAAuB,EAAE;AAACJ,cAAAA,MAAM,EAAEJ,cAAc,CAACQ,KAAD;AAAvB;AAA/B,YADF;AAGD;;AAED,eAAOA,KAAP;AACD,OARM,CAAP;AASD;;;6BAEQ;AACP,UAAMC,SAAS,GAAG,KAAKP,KAAL,CAAWQ,SAA7B;AACA,0BAAO,oBAAC,SAAD,QAAY,KAAKC,OAAL,EAAZ,CAAP;AACD;;;;EA1BsBb,KAAK,CAACc,S;;AA6B/BX,UAAU,CAACY,YAAX,GAA0B;AACxBH,EAAAA,SAAS,EAAE;AADa,CAA1B;AAIAI,MAAM,CAACC,OAAP,GAAiBd,UAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst renderMarkdown = require('./renderMarkdown.js');\n\nclass Remarkable extends React.Component {\n  content() {\n    if (this.props.source) {\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html: renderMarkdown(this.props.source),\n          }}\n        />\n      );\n    }\n\n    return React.Children.map(this.props.children, (child) => {\n      if (typeof child === 'string') {\n        return (\n          <span dangerouslySetInnerHTML={{__html: renderMarkdown(child)}} />\n        );\n      }\n\n      return child;\n    });\n  }\n\n  render() {\n    const Container = this.props.container;\n    return <Container>{this.content()}</Container>;\n  }\n}\n\nRemarkable.defaultProps = {\n  container: 'div',\n};\n\nmodule.exports = Remarkable;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\Container.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Container.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Container.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Container.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "Container.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar classNames = require('classnames');\n\nvar Container = /*#__PURE__*/function (_React$Component) {\n  _inherits(Container, _React$Component);\n\n  var _super = _createSuper(Container);\n\n  function Container() {\n    _classCallCheck(this, Container);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var containerClasses = classNames('container', this.props.className, {\n        darkBackground: this.props.background === 'dark',\n        highlightBackground: this.props.background === 'highlight',\n        lightBackground: this.props.background === 'light',\n        paddingAll: this.props.padding.indexOf('all') >= 0,\n        paddingBottom: this.props.padding.indexOf('bottom') >= 0,\n        paddingLeft: this.props.padding.indexOf('left') >= 0,\n        paddingRight: this.props.padding.indexOf('right') >= 0,\n        paddingTop: this.props.padding.indexOf('top') >= 0\n      });\n      var wrappedChildren;\n\n      if (this.props.wrapper) {\n        wrappedChildren = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper\"\n        }, this.props.children);\n      } else {\n        wrappedChildren = this.props.children;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: containerClasses,\n        id: this.props.id\n      }, wrappedChildren);\n    }\n  }]);\n\n  return Container;\n}(React.Component);\n\nContainer.defaultProps = {\n  background: null,\n  padding: [],\n  wrapper: true\n};\nmodule.exports = Container;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbnRhaW5lci5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJjbGFzc05hbWVzIiwiQ29udGFpbmVyIiwiY29udGFpbmVyQ2xhc3NlcyIsInByb3BzIiwiY2xhc3NOYW1lIiwiZGFya0JhY2tncm91bmQiLCJiYWNrZ3JvdW5kIiwiaGlnaGxpZ2h0QmFja2dyb3VuZCIsImxpZ2h0QmFja2dyb3VuZCIsInBhZGRpbmdBbGwiLCJwYWRkaW5nIiwiaW5kZXhPZiIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdUb3AiLCJ3cmFwcGVkQ2hpbGRyZW4iLCJ3cmFwcGVyIiwiY2hpbGRyZW4iLCJpZCIsIkNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLFlBQUQsQ0FBMUI7O0lBRU1FLFM7Ozs7Ozs7Ozs7Ozs7NkJBQ0s7QUFDUCxVQUFNQyxnQkFBZ0IsR0FBR0YsVUFBVSxDQUFDLFdBQUQsRUFBYyxLQUFLRyxLQUFMLENBQVdDLFNBQXpCLEVBQW9DO0FBQ3JFQyxRQUFBQSxjQUFjLEVBQUUsS0FBS0YsS0FBTCxDQUFXRyxVQUFYLEtBQTBCLE1BRDJCO0FBRXJFQyxRQUFBQSxtQkFBbUIsRUFBRSxLQUFLSixLQUFMLENBQVdHLFVBQVgsS0FBMEIsV0FGc0I7QUFHckVFLFFBQUFBLGVBQWUsRUFBRSxLQUFLTCxLQUFMLENBQVdHLFVBQVgsS0FBMEIsT0FIMEI7QUFJckVHLFFBQUFBLFVBQVUsRUFBRSxLQUFLTixLQUFMLENBQVdPLE9BQVgsQ0FBbUJDLE9BQW5CLENBQTJCLEtBQTNCLEtBQXFDLENBSm9CO0FBS3JFQyxRQUFBQSxhQUFhLEVBQUUsS0FBS1QsS0FBTCxDQUFXTyxPQUFYLENBQW1CQyxPQUFuQixDQUEyQixRQUEzQixLQUF3QyxDQUxjO0FBTXJFRSxRQUFBQSxXQUFXLEVBQUUsS0FBS1YsS0FBTCxDQUFXTyxPQUFYLENBQW1CQyxPQUFuQixDQUEyQixNQUEzQixLQUFzQyxDQU5rQjtBQU9yRUcsUUFBQUEsWUFBWSxFQUFFLEtBQUtYLEtBQUwsQ0FBV08sT0FBWCxDQUFtQkMsT0FBbkIsQ0FBMkIsT0FBM0IsS0FBdUMsQ0FQZ0I7QUFRckVJLFFBQUFBLFVBQVUsRUFBRSxLQUFLWixLQUFMLENBQVdPLE9BQVgsQ0FBbUJDLE9BQW5CLENBQTJCLEtBQTNCLEtBQXFDO0FBUm9CLE9BQXBDLENBQW5DO0FBVUEsVUFBSUssZUFBSjs7QUFFQSxVQUFJLEtBQUtiLEtBQUwsQ0FBV2MsT0FBZixFQUF3QjtBQUN0QkQsUUFBQUEsZUFBZSxnQkFBRztBQUFLLFVBQUEsU0FBUyxFQUFDO0FBQWYsV0FBMEIsS0FBS2IsS0FBTCxDQUFXZSxRQUFyQyxDQUFsQjtBQUNELE9BRkQsTUFFTztBQUNMRixRQUFBQSxlQUFlLEdBQUcsS0FBS2IsS0FBTCxDQUFXZSxRQUE3QjtBQUNEOztBQUNELDBCQUNFO0FBQUssUUFBQSxTQUFTLEVBQUVoQixnQkFBaEI7QUFBa0MsUUFBQSxFQUFFLEVBQUUsS0FBS0MsS0FBTCxDQUFXZ0I7QUFBakQsU0FDR0gsZUFESCxDQURGO0FBS0Q7Ozs7RUF4QnFCbEIsS0FBSyxDQUFDc0IsUzs7QUEyQjlCbkIsU0FBUyxDQUFDb0IsWUFBVixHQUF5QjtBQUN2QmYsRUFBQUEsVUFBVSxFQUFFLElBRFc7QUFFdkJJLEVBQUFBLE9BQU8sRUFBRSxFQUZjO0FBR3ZCTyxFQUFBQSxPQUFPLEVBQUU7QUFIYyxDQUF6QjtBQU1BSyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ0QixTQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcY29yZVxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG5jbGFzcyBDb250YWluZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3QgY29udGFpbmVyQ2xhc3NlcyA9IGNsYXNzTmFtZXMoJ2NvbnRhaW5lcicsIHRoaXMucHJvcHMuY2xhc3NOYW1lLCB7XG4gICAgICBkYXJrQmFja2dyb3VuZDogdGhpcy5wcm9wcy5iYWNrZ3JvdW5kID09PSAnZGFyaycsXG4gICAgICBoaWdobGlnaHRCYWNrZ3JvdW5kOiB0aGlzLnByb3BzLmJhY2tncm91bmQgPT09ICdoaWdobGlnaHQnLFxuICAgICAgbGlnaHRCYWNrZ3JvdW5kOiB0aGlzLnByb3BzLmJhY2tncm91bmQgPT09ICdsaWdodCcsXG4gICAgICBwYWRkaW5nQWxsOiB0aGlzLnByb3BzLnBhZGRpbmcuaW5kZXhPZignYWxsJykgPj0gMCxcbiAgICAgIHBhZGRpbmdCb3R0b206IHRoaXMucHJvcHMucGFkZGluZy5pbmRleE9mKCdib3R0b20nKSA+PSAwLFxuICAgICAgcGFkZGluZ0xlZnQ6IHRoaXMucHJvcHMucGFkZGluZy5pbmRleE9mKCdsZWZ0JykgPj0gMCxcbiAgICAgIHBhZGRpbmdSaWdodDogdGhpcy5wcm9wcy5wYWRkaW5nLmluZGV4T2YoJ3JpZ2h0JykgPj0gMCxcbiAgICAgIHBhZGRpbmdUb3A6IHRoaXMucHJvcHMucGFkZGluZy5pbmRleE9mKCd0b3AnKSA+PSAwLFxuICAgIH0pO1xuICAgIGxldCB3cmFwcGVkQ2hpbGRyZW47XG5cbiAgICBpZiAodGhpcy5wcm9wcy53cmFwcGVyKSB7XG4gICAgICB3cmFwcGVkQ2hpbGRyZW4gPSA8ZGl2IGNsYXNzTmFtZT1cIndyYXBwZXJcIj57dGhpcy5wcm9wcy5jaGlsZHJlbn08L2Rpdj47XG4gICAgfSBlbHNlIHtcbiAgICAgIHdyYXBwZWRDaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y29udGFpbmVyQ2xhc3Nlc30gaWQ9e3RoaXMucHJvcHMuaWR9PlxuICAgICAgICB7d3JhcHBlZENoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5Db250YWluZXIuZGVmYXVsdFByb3BzID0ge1xuICBiYWNrZ3JvdW5kOiBudWxsLFxuICBwYWRkaW5nOiBbXSxcbiAgd3JhcHBlcjogdHJ1ZSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ29udGFpbmVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Container.js"
      ],
      "names": [
        "React",
        "require",
        "classNames",
        "Container",
        "containerClasses",
        "props",
        "className",
        "darkBackground",
        "background",
        "highlightBackground",
        "lightBackground",
        "paddingAll",
        "padding",
        "indexOf",
        "paddingBottom",
        "paddingLeft",
        "paddingRight",
        "paddingTop",
        "wrappedChildren",
        "wrapper",
        "children",
        "id",
        "Component",
        "defaultProps",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;IAEME,S;;;;;;;;;;;;;6BACK;AACP,UAAMC,gBAAgB,GAAGF,UAAU,CAAC,WAAD,EAAc,KAAKG,KAAL,CAAWC,SAAzB,EAAoC;AACrEC,QAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWG,UAAX,KAA0B,MAD2B;AAErEC,QAAAA,mBAAmB,EAAE,KAAKJ,KAAL,CAAWG,UAAX,KAA0B,WAFsB;AAGrEE,QAAAA,eAAe,EAAE,KAAKL,KAAL,CAAWG,UAAX,KAA0B,OAH0B;AAIrEG,QAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,KAA3B,KAAqC,CAJoB;AAKrEC,QAAAA,aAAa,EAAE,KAAKT,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B,KAAwC,CALc;AAMrEE,QAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,MAA3B,KAAsC,CANkB;AAOrEG,QAAAA,YAAY,EAAE,KAAKX,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,OAA3B,KAAuC,CAPgB;AAQrEI,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,KAA3B,KAAqC;AARoB,OAApC,CAAnC;AAUA,UAAIK,eAAJ;;AAEA,UAAI,KAAKb,KAAL,CAAWc,OAAf,EAAwB;AACtBD,QAAAA,eAAe,gBAAG;AAAK,UAAA,SAAS,EAAC;AAAf,WAA0B,KAAKb,KAAL,CAAWe,QAArC,CAAlB;AACD,OAFD,MAEO;AACLF,QAAAA,eAAe,GAAG,KAAKb,KAAL,CAAWe,QAA7B;AACD;;AACD,0BACE;AAAK,QAAA,SAAS,EAAEhB,gBAAhB;AAAkC,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWgB;AAAjD,SACGH,eADH,CADF;AAKD;;;;EAxBqBlB,KAAK,CAACsB,S;;AA2B9BnB,SAAS,CAACoB,YAAV,GAAyB;AACvBf,EAAAA,UAAU,EAAE,IADW;AAEvBI,EAAAA,OAAO,EAAE,EAFc;AAGvBO,EAAAA,OAAO,EAAE;AAHc,CAAzB;AAMAK,MAAM,CAACC,OAAP,GAAiBtB,SAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst classNames = require('classnames');\n\nclass Container extends React.Component {\n  render() {\n    const containerClasses = classNames('container', this.props.className, {\n      darkBackground: this.props.background === 'dark',\n      highlightBackground: this.props.background === 'highlight',\n      lightBackground: this.props.background === 'light',\n      paddingAll: this.props.padding.indexOf('all') >= 0,\n      paddingBottom: this.props.padding.indexOf('bottom') >= 0,\n      paddingLeft: this.props.padding.indexOf('left') >= 0,\n      paddingRight: this.props.padding.indexOf('right') >= 0,\n      paddingTop: this.props.padding.indexOf('top') >= 0,\n    });\n    let wrappedChildren;\n\n    if (this.props.wrapper) {\n      wrappedChildren = <div className=\"wrapper\">{this.props.children}</div>;\n    } else {\n      wrappedChildren = this.props.children;\n    }\n    return (\n      <div className={containerClasses} id={this.props.id}>\n        {wrappedChildren}\n      </div>\n    );\n  }\n}\n\nContainer.defaultProps = {\n  background: null,\n  padding: [],\n  wrapper: true,\n};\n\nmodule.exports = Container;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\GridBlock.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\GridBlock.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\GridBlock.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\GridBlock.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "GridBlock.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar classNames = require('classnames');\n\nvar MarkdownBlock = require('./MarkdownBlock.js');\n\nvar GridBlock = /*#__PURE__*/function (_React$Component) {\n  _inherits(GridBlock, _React$Component);\n\n  var _super = _createSuper(GridBlock);\n\n  function GridBlock() {\n    _classCallCheck(this, GridBlock);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GridBlock, [{\n    key: \"renderBlock\",\n    value: function renderBlock(origBlock) {\n      var blockDefaults = {\n        imageAlign: 'left'\n      };\n\n      var block = _objectSpread(_objectSpread({}, blockDefaults), origBlock);\n\n      var blockClasses = classNames('blockElement', this.props.className, {\n        alignCenter: this.props.align === 'center',\n        alignRight: this.props.align === 'right',\n        fourByGridBlock: this.props.layout === 'fourColumn',\n        imageAlignSide: block.image && (block.imageAlign === 'left' || block.imageAlign === 'right'),\n        imageAlignTop: block.image && block.imageAlign === 'top',\n        imageAlignRight: block.image && block.imageAlign === 'right',\n        imageAlignBottom: block.image && block.imageAlign === 'bottom',\n        imageAlignLeft: block.image && block.imageAlign === 'left',\n        threeByGridBlock: this.props.layout === 'threeColumn',\n        twoByGridBlock: this.props.layout === 'twoColumn'\n      });\n      var topLeftImage = (block.imageAlign === 'top' || block.imageAlign === 'left') && this.renderBlockImage(block.image, block.imageLink, block.imageAlt);\n      var bottomRightImage = (block.imageAlign === 'bottom' || block.imageAlign === 'right') && this.renderBlockImage(block.image, block.imageLink, block.imageAlt);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: blockClasses,\n        key: block.title\n      }, topLeftImage, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blockContent\"\n      }, this.renderBlockTitle(block.title), /*#__PURE__*/React.createElement(MarkdownBlock, null, block.content)), bottomRightImage);\n    }\n  }, {\n    key: \"renderBlockImage\",\n    value: function renderBlockImage(image, imageLink, imageAlt) {\n      if (!image) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blockImage\"\n      }, imageLink ? /*#__PURE__*/React.createElement(\"a\", {\n        href: imageLink\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        alt: imageAlt\n      })) : /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        alt: imageAlt\n      }));\n    }\n  }, {\n    key: \"renderBlockTitle\",\n    value: function renderBlockTitle(title) {\n      if (!title) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"h2\", null, /*#__PURE__*/React.createElement(MarkdownBlock, null, title));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gridBlock\"\n      }, this.props.contents.map(this.renderBlock, this));\n    }\n  }]);\n\n  return GridBlock;\n}(React.Component);\n\nGridBlock.defaultProps = {\n  align: 'left',\n  contents: [],\n  layout: 'twoColumn'\n};\nmodule.exports = GridBlock;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdyaWRCbG9jay5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJjbGFzc05hbWVzIiwiTWFya2Rvd25CbG9jayIsIkdyaWRCbG9jayIsIm9yaWdCbG9jayIsImJsb2NrRGVmYXVsdHMiLCJpbWFnZUFsaWduIiwiYmxvY2siLCJibG9ja0NsYXNzZXMiLCJwcm9wcyIsImNsYXNzTmFtZSIsImFsaWduQ2VudGVyIiwiYWxpZ24iLCJhbGlnblJpZ2h0IiwiZm91ckJ5R3JpZEJsb2NrIiwibGF5b3V0IiwiaW1hZ2VBbGlnblNpZGUiLCJpbWFnZSIsImltYWdlQWxpZ25Ub3AiLCJpbWFnZUFsaWduUmlnaHQiLCJpbWFnZUFsaWduQm90dG9tIiwiaW1hZ2VBbGlnbkxlZnQiLCJ0aHJlZUJ5R3JpZEJsb2NrIiwidHdvQnlHcmlkQmxvY2siLCJ0b3BMZWZ0SW1hZ2UiLCJyZW5kZXJCbG9ja0ltYWdlIiwiaW1hZ2VMaW5rIiwiaW1hZ2VBbHQiLCJib3R0b21SaWdodEltYWdlIiwidGl0bGUiLCJyZW5kZXJCbG9ja1RpdGxlIiwiY29udGVudCIsImNvbnRlbnRzIiwibWFwIiwicmVuZGVyQmxvY2siLCJDb21wb25lbnQiLCJkZWZhdWx0UHJvcHMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxZQUFELENBQTFCOztBQUVBLElBQU1FLGFBQWEsR0FBR0YsT0FBTyxDQUFDLG9CQUFELENBQTdCOztJQUVNRyxTOzs7Ozs7Ozs7Ozs7O2dDQUNRQyxTLEVBQVc7QUFDckIsVUFBTUMsYUFBYSxHQUFHO0FBQ3BCQyxRQUFBQSxVQUFVLEVBQUU7QUFEUSxPQUF0Qjs7QUFJQSxVQUFNQyxLQUFLLG1DQUNORixhQURNLEdBRU5ELFNBRk0sQ0FBWDs7QUFL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QUFELFFBQWdCQSxLQUFoQixDQURGLENBREY7QUFLRDs7OzZCQUVRO0FBQ1AsMEJBQ0U7QUFBSyxRQUFBLFNBQVMsRUFBQztBQUFmLFNBQ0csS0FBS3BCLEtBQUwsQ0FBV3VCLFFBQVgsQ0FBb0JDLEdBQXBCLENBQXdCLEtBQUtDLFdBQTdCLEVBQTBDLElBQTFDLENBREgsQ0FERjtBQUtEOzs7O0VBbEZxQm5DLEtBQUssQ0FBQ29DLFM7O0FBcUY5QmhDLFNBQVMsQ0FBQ2lDLFlBQVYsR0FBeUI7QUFDdkJ4QixFQUFBQSxLQUFLLEVBQUUsTUFEZ0I7QUFFdkJvQixFQUFBQSxRQUFRLEVBQUUsRUFGYTtBQUd2QmpCLEVBQUFBLE1BQU0sRUFBRTtBQUhlLENBQXpCO0FBTUFzQixNQUFNLENBQUNDLE9BQVAsR0FBaUJuQyxTQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcY29yZVxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG5jb25zdCBNYXJrZG93bkJsb2NrID0gcmVxdWlyZSgnLi9NYXJrZG93bkJsb2NrLmpzJyk7XG5cbmNsYXNzIEdyaWRCbG9jayBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlckJsb2NrKG9yaWdCbG9jaykge1xuICAgIGNvbnN0IGJsb2NrRGVmYXVsdHMgPSB7XG4gICAgICBpbWFnZUFsaWduOiAnbGVmdCcsXG4gICAgfTtcblxuICAgIGNvbnN0IGJsb2NrID0ge1xuICAgICAgLi4uYmxvY2tEZWZhdWx0cyxcbiAgICAgIC4uLm9yaWdCbG9jayxcbiAgICB9O1xuXG4gICAgY29uc3QgYmxvY2tDbGFzc2VzID0gY2xhc3NOYW1lcygnYmxvY2tFbGVtZW50JywgdGhpcy5wcm9wcy5jbGFzc05hbWUsIHtcbiAgICAgIGFsaWduQ2VudGVyOiB0aGlzLnByb3BzLmFsaWduID09PSAnY2VudGVyJyxcbiAgICAgIGFsaWduUmlnaHQ6IHRoaXMucHJvcHMuYWxpZ24gPT09ICdyaWdodCcsXG4gICAgICBmb3VyQnlHcmlkQmxvY2s6IHRoaXMucHJvcHMubGF5b3V0ID09PSAnZm91ckNvbHVtbicsXG4gICAgICBpbWFnZUFsaWduU2lkZTpcbiAgICAgICAgYmxvY2suaW1hZ2UgJiZcbiAgICAgICAgKGJsb2NrLmltYWdlQWxpZ24gPT09ICdsZWZ0JyB8fCBibG9jay5pbWFnZUFsaWduID09PSAncmlnaHQnKSxcbiAgICAgIGltYWdlQWxpZ25Ub3A6IGJsb2NrLmltYWdlICYmIGJsb2NrLmltYWdlQWxpZ24gPT09ICd0b3AnLFxuICAgICAgaW1hZ2VBbGlnblJpZ2h0OiBibG9jay5pbWFnZSAmJiBibG9jay5pbWFnZUFsaWduID09PSAncmlnaHQnLFxuICAgICAgaW1hZ2VBbGlnbkJvdHRvbTogYmxvY2suaW1hZ2UgJiYgYmxvY2suaW1hZ2VBbGlnbiA9PT0gJ2JvdHRvbScsXG4gICAgICBpbWFnZUFsaWduTGVmdDogYmxvY2suaW1hZ2UgJiYgYmxvY2suaW1hZ2VBbGlnbiA9PT0gJ2xlZnQnLFxuICAgICAgdGhyZWVCeUdyaWRCbG9jazogdGhpcy5wcm9wcy5sYXlvdXQgPT09ICd0aHJlZUNvbHVtbicsXG4gICAgICB0d29CeUdyaWRCbG9jazogdGhpcy5wcm9wcy5sYXlvdXQgPT09ICd0d29Db2x1bW4nLFxuICAgIH0pO1xuXG4gICAgY29uc3QgdG9wTGVmdEltYWdlID1cbiAgICAgIChibG9jay5pbWFnZUFsaWduID09PSAndG9wJyB8fCBibG9jay5pbWFnZUFsaWduID09PSAnbGVmdCcpICYmXG4gICAgICB0aGlzLnJlbmRlckJsb2NrSW1hZ2UoYmxvY2suaW1hZ2UsIGJsb2NrLmltYWdlTGluaywgYmxvY2suaW1hZ2VBbHQpO1xuXG4gICAgY29uc3QgYm90dG9tUmlnaHRJbWFnZSA9XG4gICAgICAoYmxvY2suaW1hZ2VBbGlnbiA9PT0gJ2JvdHRvbScgfHwgYmxvY2suaW1hZ2VBbGlnbiA9PT0gJ3JpZ2h0JykgJiZcbiAgICAgIHRoaXMucmVuZGVyQmxvY2tJbWFnZShibG9jay5pbWFnZSwgYmxvY2suaW1hZ2VMaW5rLCBibG9jay5pbWFnZUFsdCk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Jsb2NrQ2xhc3Nlc30ga2V5PXtibG9jay50aXRsZX0+XG4gICAgICAgIHt0b3BMZWZ0SW1hZ2V9XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmxvY2tDb250ZW50XCI+XG4gICAgICAgICAge3RoaXMucmVuZGVyQmxvY2tUaXRsZShibG9jay50aXRsZSl9XG4gICAgICAgICAgPE1hcmtkb3duQmxvY2s+e2Jsb2NrLmNvbnRlbnR9PC9NYXJrZG93bkJsb2NrPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge2JvdHRvbVJpZ2h0SW1hZ2V9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyQmxvY2tJbWFnZShpbWFnZSwgaW1hZ2VMaW5rLCBpbWFnZUFsdCkge1xuICAgIGlmICghaW1hZ2UpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJsb2NrSW1hZ2VcIj5cbiAgICAgICAge2ltYWdlTGluayA/IChcbiAgICAgICAgICA8YSBocmVmPXtpbWFnZUxpbmt9PlxuICAgICAgICAgICAgPGltZyBzcmM9e2ltYWdlfSBhbHQ9e2ltYWdlQWx0fSAvPlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8aW1nIHNyYz17aW1hZ2V9IGFsdD17aW1hZ2VBbHR9IC8+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyQmxvY2tUaXRsZSh0aXRsZSkge1xuICAgIGlmICghdGl0bGUpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8aDI+XG4gICAgICAgIDxNYXJrZG93bkJsb2NrPnt0aXRsZX08L01hcmtkb3duQmxvY2s+XG4gICAgICA8L2gyPlxuICAgICk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZEJsb2NrXCI+XG4gICAgICAgIHt0aGlzLnByb3BzLmNvbnRlbnRzLm1hcCh0aGlzLnJlbmRlckJsb2NrLCB0aGlzKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuR3JpZEJsb2NrLmRlZmF1bHRQcm9wcyA9IHtcbiAgYWxpZ246ICdsZWZ0JyxcbiAgY29udGVudHM6IFtdLFxuICBsYXlvdXQ6ICd0d29Db2x1bW4nLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBHcmlkQmxvY2s7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "GridBlock.js"
      ],
      "names": [
        "React",
        "require",
        "classNames",
        "MarkdownBlock",
        "GridBlock",
        "origBlock",
        "blockDefaults",
        "imageAlign",
        "block",
        "blockClasses",
        "props",
        "className",
        "alignCenter",
        "align",
        "alignRight",
        "fourByGridBlock",
        "layout",
        "imageAlignSide",
        "image",
        "imageAlignTop",
        "imageAlignRight",
        "imageAlignBottom",
        "imageAlignLeft",
        "threeByGridBlock",
        "twoByGridBlock",
        "topLeftImage",
        "renderBlockImage",
        "imageLink",
        "imageAlt",
        "bottomRightImage",
        "title",
        "renderBlockTitle",
        "content",
        "contents",
        "map",
        "renderBlock",
        "Component",
        "defaultProps",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst classNames = require('classnames');\n\nconst MarkdownBlock = require('./MarkdownBlock.js');\n\nclass GridBlock extends React.Component {\n  renderBlock(origBlock) {\n    const blockDefaults = {\n      imageAlign: 'left',\n    };\n\n    const block = {\n      ...blockDefaults,\n      ...origBlock,\n    };\n\n    const blockClasses = classNames('blockElement', this.props.className, {\n      alignCenter: this.props.align === 'center',\n      alignRight: this.props.align === 'right',\n      fourByGridBlock: this.props.layout === 'fourColumn',\n      imageAlignSide:\n        block.image &&\n        (block.imageAlign === 'left' || block.imageAlign === 'right'),\n      imageAlignTop: block.image && block.imageAlign === 'top',\n      imageAlignRight: block.image && block.imageAlign === 'right',\n      imageAlignBottom: block.image && block.imageAlign === 'bottom',\n      imageAlignLeft: block.image && block.imageAlign === 'left',\n      threeByGridBlock: this.props.layout === 'threeColumn',\n      twoByGridBlock: this.props.layout === 'twoColumn',\n    });\n\n    const topLeftImage =\n      (block.imageAlign === 'top' || block.imageAlign === 'left') &&\n      this.renderBlockImage(block.image, block.imageLink, block.imageAlt);\n\n    const bottomRightImage =\n      (block.imageAlign === 'bottom' || block.imageAlign === 'right') &&\n      this.renderBlockImage(block.image, block.imageLink, block.imageAlt);\n\n    return (\n      <div className={blockClasses} key={block.title}>\n        {topLeftImage}\n        <div className=\"blockContent\">\n          {this.renderBlockTitle(block.title)}\n          <MarkdownBlock>{block.content}</MarkdownBlock>\n        </div>\n        {bottomRightImage}\n      </div>\n    );\n  }\n\n  renderBlockImage(image, imageLink, imageAlt) {\n    if (!image) {\n      return null;\n    }\n\n    return (\n      <div className=\"blockImage\">\n        {imageLink ? (\n          <a href={imageLink}>\n            <img src={image} alt={imageAlt} />\n          </a>\n        ) : (\n          <img src={image} alt={imageAlt} />\n        )}\n      </div>\n    );\n  }\n\n  renderBlockTitle(title) {\n    if (!title) {\n      return null;\n    }\n\n    return (\n      <h2>\n        <MarkdownBlock>{title}</MarkdownBlock>\n      </h2>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"gridBlock\">\n        {this.props.contents.map(this.renderBlock, this)}\n      </div>\n    );\n  }\n}\n\nGridBlock.defaultProps = {\n  align: 'left',\n  contents: [],\n  layout: 'twoColumn',\n};\n\nmodule.exports = GridBlock;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\Site.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Site.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Site.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Site.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "Site.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar fs = require('fs');\n\nvar classNames = require('classnames');\n\nvar HeaderNav = require('./nav/HeaderNav.js');\n\nvar Head = require('./Head.js');\n\nvar Footer = require(\"\".concat(process.cwd(), \"/core/Footer.js\"));\n\nvar translation = require('../server/translation.js');\n\nvar env = require('../server/env.js');\n\nvar liveReloadServer = require('../server/liveReloadServer.js');\n\nvar _require = require('./utils.js'),\n    idx = _require.idx,\n    getPath = _require.getPath;\n\nvar CWD = process.cwd(); // Component used to provide same head, header, footer, other scripts to all pages\n\nvar Site = /*#__PURE__*/function (_React$Component) {\n  _inherits(Site, _React$Component);\n\n  var _super = _createSuper(Site);\n\n  function Site() {\n    _classCallCheck(this, Site);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Site, [{\n    key: \"mobileNavHasOneRow\",\n    value: function mobileNavHasOneRow(headerLinks) {\n      var hasLanguageDropdown = env.translation.enabled && env.translation.enabledLanguages().length > 1;\n      var hasOrdinaryHeaderLinks = headerLinks.some(function (link) {\n        return !(link.languages || link.search);\n      });\n      return !(hasLanguageDropdown || hasOrdinaryHeaderLinks);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tagline = idx(translation, [this.props.language, 'localized-strings', 'tagline']) || this.props.config.tagline;\n      var title = this.props.title ? \"\".concat(this.props.title, \" \\xB7 \").concat(this.props.config.title) : !this.props.config.disableTitleTagline && \"\".concat(this.props.config.title, \" \\xB7 \").concat(tagline) || this.props.config.title;\n      var description = this.props.description || tagline;\n      var path = getPath(this.props.config.baseUrl + (this.props.url || 'index.html'), this.props.config.cleanUrl);\n      var url = this.props.config.url + path;\n      var docsVersion = this.props.version;\n      var liveReloadScriptUrl = liveReloadServer.getReloadScriptUrl();\n\n      if (!docsVersion && fs.existsSync(\"\".concat(CWD, \"/versions.json\"))) {\n        var latestVersion = require(\"\".concat(CWD, \"/versions.json\"))[0];\n\n        docsVersion = latestVersion;\n      }\n\n      var navPusherClasses = classNames('navPusher', {\n        singleRowMobileNav: this.mobileNavHasOneRow(this.props.config.headerLinks)\n      });\n      return /*#__PURE__*/React.createElement(\"html\", {\n        lang: this.props.language\n      }, /*#__PURE__*/React.createElement(Head, {\n        config: this.props.config,\n        description: description,\n        title: title,\n        url: url,\n        language: this.props.language,\n        version: this.props.version\n      }), /*#__PURE__*/React.createElement(\"body\", {\n        className: this.props.className\n      }, /*#__PURE__*/React.createElement(HeaderNav, {\n        config: this.props.config,\n        baseUrl: this.props.config.baseUrl,\n        title: this.props.config.title,\n        language: this.props.language,\n        version: this.props.version,\n        current: this.props.metadata\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: navPusherClasses\n      }, this.props.children, /*#__PURE__*/React.createElement(Footer, {\n        config: this.props.config,\n        language: this.props.language\n      })), this.props.config.algolia && /*#__PURE__*/React.createElement(\"script\", {\n        type: \"text/javascript\",\n        src: \"https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js\"\n      }), this.props.config.facebookAppId && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"window.fbAsyncInit = function() {FB.init({appId:'\".concat(this.props.config.facebookAppId, \"',xfbml:true,version:'v2.7'});};(function(d, s, id){var js, fjs = d.getElementsByTagName(s)[0];if (d.getElementById(id)) {return;}js = d.createElement(s); js.id = id;js.src = '//connect.facebook.net/en_US/sdk.js';fjs.parentNode.insertBefore(js, fjs);}(document, 'script','facebook-jssdk'));\\n                \")\n        }\n      }), this.props.config.facebookPixelId && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              !function(f,b,e,v,n,t,s)\\n              {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\\n              n.callMethod.apply(n,arguments):n.queue.push(arguments)};\\n              if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\\n              n.queue=[];t=b.createElement(e);t.async=!0;\\n              t.src=v;s=b.getElementsByTagName(e)[0];\\n              s.parentNode.insertBefore(t,s)}(window, document,'script',\\n              'https://connect.facebook.net/en_US/fbevents.js');\\n              fbq('init', '\".concat(this.props.config.facebookPixelId, \"');\\n              fbq('track', 'PageView');\\n                \")\n        }\n      }), (this.props.config.twitter || this.props.config.twitterUsername) && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"window.twttr=(function(d,s, id){var js,fjs=d.getElementsByTagName(s)[0],t=window.twttr||{};if(d.getElementById(id))return t;js=d.createElement(s);js.id=id;js.src='https://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js, fjs);t._e = [];t.ready = function(f) {t._e.push(f);};return t;}(document, 'script', 'twitter-wjs'));\"\n        }\n      }), this.props.config.algolia && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n                document.addEventListener('keyup', function(e) {\\n                  if (e.target !== document.body) {\\n                    return;\\n                  }\\n                  // keyCode for '/' (slash)\\n                  if (e.keyCode === 191) {\\n                    const search = document.getElementById('search_input_react');\\n                    search && search.focus();\\n                  }\\n                });\\n              \"\n        }\n      }), this.props.config.algolia && (this.props.config.algolia.algoliaOptions ? /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              var search = docsearch({\\n                \".concat(this.props.config.algolia.appId ? \"appId: '\".concat(this.props.config.algolia.appId, \"',\") : '', \"\\n                apiKey: '\").concat(this.props.config.algolia.apiKey, \"',\\n                indexName: '\").concat(this.props.config.algolia.indexName, \"',\\n                inputSelector: '#search_input_react',\\n                algoliaOptions: \").concat(JSON.stringify(this.props.config.algolia.algoliaOptions).replace('VERSION', docsVersion).replace('LANGUAGE', this.props.language), \"\\n              });\\n            \")\n        }\n      }) : /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              var search = docsearch({\\n                \".concat(this.props.config.algolia.appId ? \"appId: '\".concat(this.props.config.algolia.appId, \"',\") : '', \"\\n                apiKey: '\").concat(this.props.config.algolia.apiKey, \"',\\n                indexName: '\").concat(this.props.config.algolia.indexName, \"',\\n                inputSelector: '#search_input_react'\\n              });\\n            \")\n        }\n      })), process.env.NODE_ENV === 'development' && liveReloadScriptUrl && /*#__PURE__*/React.createElement(\"script\", {\n        src: liveReloadScriptUrl\n      })));\n    }\n  }]);\n\n  return Site;\n}(React.Component);\n\nmodule.exports = Site;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Site.js"
      ],
      "names": [
        "React",
        "require",
        "fs",
        "classNames",
        "HeaderNav",
        "Head",
        "Footer",
        "process",
        "cwd",
        "translation",
        "env",
        "liveReloadServer",
        "idx",
        "getPath",
        "CWD",
        "Site",
        "headerLinks",
        "hasLanguageDropdown",
        "enabled",
        "enabledLanguages",
        "length",
        "hasOrdinaryHeaderLinks",
        "some",
        "link",
        "languages",
        "search",
        "tagline",
        "props",
        "language",
        "config",
        "title",
        "disableTitleTagline",
        "description",
        "path",
        "baseUrl",
        "url",
        "cleanUrl",
        "docsVersion",
        "version",
        "liveReloadScriptUrl",
        "getReloadScriptUrl",
        "existsSync",
        "latestVersion",
        "navPusherClasses",
        "singleRowMobileNav",
        "mobileNavHasOneRow",
        "className",
        "metadata",
        "children",
        "algolia",
        "facebookAppId",
        "__html",
        "facebookPixelId",
        "twitter",
        "twitterUsername",
        "algoliaOptions",
        "appId",
        "apiKey",
        "indexName",
        "JSON",
        "stringify",
        "replace",
        "NODE_ENV",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAMG,SAAS,GAAGH,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,WAAD,CAApB;;AAEA,IAAMK,MAAM,GAAGL,OAAO,WAAIM,OAAO,CAACC,GAAR,EAAJ,qBAAtB;;AACA,IAAMC,WAAW,GAAGR,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAMS,GAAG,GAAGT,OAAO,CAAC,kBAAD,CAAnB;;AACA,IAAMU,gBAAgB,GAAGV,OAAO,CAAC,+BAAD,CAAhC;;eACuBA,OAAO,CAAC,YAAD,C;IAAvBW,G,YAAAA,G;IAAKC,O,YAAAA,O;;AAEZ,IAAMC,GAAG,GAAGP,OAAO,CAACC,GAAR,EAAZ,C,CAEA;;IACMO,I;;;;;;;;;;;;;uCACeC,W,EAAa;AAC9B,UAAMC,mBAAmB,GACvBP,GAAG,CAACD,WAAJ,CAAgBS,OAAhB,IAA2BR,GAAG,CAACD,WAAJ,CAAgBU,gBAAhB,GAAmCC,MAAnC,GAA4C,CADzE;AAEA,UAAMC,sBAAsB,GAAGL,WAAW,CAACM,IAAZ,CAC7B,UAACC,IAAD;AAAA,eAAU,EAAEA,IAAI,CAACC,SAAL,IAAkBD,IAAI,CAACE,MAAzB,CAAV;AAAA,OAD6B,CAA/B;AAGA,aAAO,EAAER,mBAAmB,IAAII,sBAAzB,CAAP;AACD;;;6BAEQ;AACP,UAAMK,OAAO,GACXd,GAAG,CAACH,WAAD,EAAc,CAAC,KAAKkB,KAAL,CAAWC,QAAZ,EAAsB,mBAAtB,EAA2C,SAA3C,CAAd,CAAH,IACA,KAAKD,KAAL,CAAWE,MAAX,CAAkBH,OAFpB;AAGA,UAAMI,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAX,aACP,KAAKH,KAAL,CAAWG,KADJ,mBACe,KAAKH,KAAL,CAAWE,MAAX,CAAkBC,KADjC,IAET,CAAC,KAAKH,KAAL,CAAWE,MAAX,CAAkBE,mBAAnB,cACI,KAAKJ,KAAL,CAAWE,MAAX,CAAkBC,KADtB,mBACiCJ,OADjC,CAAD,IAEA,KAAKC,KAAL,CAAWE,MAAX,CAAkBC,KAJtB;AAKA,UAAME,WAAW,GAAG,KAAKL,KAAL,CAAWK,WAAX,IAA0BN,OAA9C;AACA,UAAMO,IAAI,GAAGpB,OAAO,CAClB,KAAKc,KAAL,CAAWE,MAAX,CAAkBK,OAAlB,IAA6B,KAAKP,KAAL,CAAWQ,GAAX,IAAkB,YAA/C,CADkB,EAElB,KAAKR,KAAL,CAAWE,MAAX,CAAkBO,QAFA,CAApB;AAIA,UAAMD,GAAG,GAAG,KAAKR,KAAL,CAAWE,MAAX,CAAkBM,GAAlB,GAAwBF,IAApC;AACA,UAAII,WAAW,GAAG,KAAKV,KAAL,CAAWW,OAA7B;AAEA,UAAMC,mBAAmB,GAAG5B,gBAAgB,CAAC6B,kBAAjB,EAA5B;;AAEA,UAAI,CAACH,WAAD,IAAgBnC,EAAE,CAACuC,UAAH,WAAiB3B,GAAjB,oBAApB,EAA2D;AACzD,YAAM4B,aAAa,GAAGzC,OAAO,WAAIa,GAAJ,oBAAP,CAAgC,CAAhC,CAAtB;;AACAuB,QAAAA,WAAW,GAAGK,aAAd;AACD;;AAED,UAAMC,gBAAgB,GAAGxC,UAAU,CAAC,WAAD,EAAc;AAC/CyC,QAAAA,kBAAkB,EAAE,KAAKC,kBAAL,CAClB,KAAKlB,KAAL,CAAWE,MAAX,CAAkBb,WADA;AAD2B,OAAd,CAAnC;AAMA,0BACE;AAAM,QAAA,IAAI,EAAE,KAAKW,KAAL,CAAWC;AAAvB,sBACE,oBAAC,IAAD;AACE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MADrB;AAEE,QAAA,WAAW,EAAEG,WAFf;AAGE,QAAA,KAAK,EAAEF,KAHT;AAIE,QAAA,GAAG,EAAEK,GAJP;AAKE,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,QALvB;AAME,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWW;AANtB,QADF,eASE;AAAM,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWmB;AAA5B,sBACE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWE,MADrB;AAEE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,MAAX,CAAkBK,OAF7B;AAGE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,MAAX,CAAkBC,KAH3B;AAIE,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC,QAJvB;AAKE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWW,OALtB;AAME,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWoB;AANtB,QADF,eASE;AAAK,QAAA,SAAS,EAAEJ;AAAhB,SACG,KAAKhB,KAAL,CAAWqB,QADd,eAEE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWE,MAA3B;AAAmC,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAAxD,QAFF,CATF,EAaG,KAAKD,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,iBACC;AACE,QAAA,IAAI,EAAC,iBADP;AAEE,QAAA,GAAG,EAAC;AAFN,QAdJ,EAmBG,KAAKtB,KAAL,CAAWE,MAAX,CAAkBqB,aAAlB,iBACC;AACE,QAAA,uBAAuB,EAAE;AACvBC,UAAAA,MAAM,6DAAsD,KAAKxB,KAAL,CAAWE,MAAX,CAAkBqB,aAAxE;AADiB;AAD3B,QApBJ,EA2BG,KAAKvB,KAAL,CAAWE,MAAX,CAAkBuB,eAAlB,iBACC;AACE,QAAA,uBAAuB,EAAE;AACvBD,UAAAA,MAAM,kiBASO,KAAKxB,KAAL,CAAWE,MAAX,CAAkBuB,eATzB;AADiB;AAD3B,QA5BJ,EA6CG,CAAC,KAAKzB,KAAL,CAAWE,MAAX,CAAkBwB,OAAlB,IAA6B,KAAK1B,KAAL,CAAWE,MAAX,CAAkByB,eAAhD,kBACC;AACE,QAAA,uBAAuB,EAAE;AACvBH,UAAAA,MAAM;AADiB;AAD3B,QA9CJ,EAoDG,KAAKxB,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,iBACC;AACE,QAAA,uBAAuB,EAAE;AACvBE,UAAAA,MAAM;AADiB;AAD3B,QArDJ,EAsEG,KAAKxB,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,KACE,KAAKtB,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BM,cAA1B,gBACC;AACE,QAAA,uBAAuB,EAAE;AACvBJ,UAAAA,MAAM,sEAGN,KAAKxB,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BO,KAA1B,qBACe,KAAK7B,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BO,KADzC,UAEI,EALE,wCAOG,KAAK7B,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BQ,MAP7B,6CAQM,KAAK9B,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BS,SARhC,wGAUUC,IAAI,CAACC,SAAL,CAChB,KAAKjC,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BM,cADV,EAGfM,OAHe,CAGP,SAHO,EAGIxB,WAHJ,EAIfwB,OAJe,CAIP,UAJO,EAIK,KAAKlC,KAAL,CAAWC,QAJhB,CAVV;AADiB;AAD3B,QADD,gBAuBC;AACE,QAAA,uBAAuB,EAAE;AACvBuB,UAAAA,MAAM,sEAGN,KAAKxB,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BO,KAA1B,qBACe,KAAK7B,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BO,KADzC,UAEI,EALE,wCAOG,KAAK7B,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BQ,MAP7B,6CAQM,KAAK9B,KAAL,CAAWE,MAAX,CAAkBoB,OAAlB,CAA0BS,SARhC;AADiB;AAD3B,QAxBH,CAtEH,EAgHGnD,OAAO,CAACG,GAAR,CAAYoD,QAAZ,KAAyB,aAAzB,IAA0CvB,mBAA1C,iBACC;AAAQ,QAAA,GAAG,EAAEA;AAAb,QAjHJ,CATF,CADF;AAgID;;;;EAxKgBvC,KAAK,CAAC+D,S;;AA0KzBC,MAAM,CAACC,OAAP,GAAiBlD,IAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst fs = require('fs');\nconst classNames = require('classnames');\n\nconst HeaderNav = require('./nav/HeaderNav.js');\nconst Head = require('./Head.js');\n\nconst Footer = require(`${process.cwd()}/core/Footer.js`);\nconst translation = require('../server/translation.js');\nconst env = require('../server/env.js');\nconst liveReloadServer = require('../server/liveReloadServer.js');\nconst {idx, getPath} = require('./utils.js');\n\nconst CWD = process.cwd();\n\n// Component used to provide same head, header, footer, other scripts to all pages\nclass Site extends React.Component {\n  mobileNavHasOneRow(headerLinks) {\n    const hasLanguageDropdown =\n      env.translation.enabled && env.translation.enabledLanguages().length > 1;\n    const hasOrdinaryHeaderLinks = headerLinks.some(\n      (link) => !(link.languages || link.search),\n    );\n    return !(hasLanguageDropdown || hasOrdinaryHeaderLinks);\n  }\n\n  render() {\n    const tagline =\n      idx(translation, [this.props.language, 'localized-strings', 'tagline']) ||\n      this.props.config.tagline;\n    const title = this.props.title\n      ? `${this.props.title} · ${this.props.config.title}`\n      : (!this.props.config.disableTitleTagline &&\n          `${this.props.config.title} · ${tagline}`) ||\n        this.props.config.title;\n    const description = this.props.description || tagline;\n    const path = getPath(\n      this.props.config.baseUrl + (this.props.url || 'index.html'),\n      this.props.config.cleanUrl,\n    );\n    const url = this.props.config.url + path;\n    let docsVersion = this.props.version;\n\n    const liveReloadScriptUrl = liveReloadServer.getReloadScriptUrl();\n\n    if (!docsVersion && fs.existsSync(`${CWD}/versions.json`)) {\n      const latestVersion = require(`${CWD}/versions.json`)[0];\n      docsVersion = latestVersion;\n    }\n\n    const navPusherClasses = classNames('navPusher', {\n      singleRowMobileNav: this.mobileNavHasOneRow(\n        this.props.config.headerLinks,\n      ),\n    });\n\n    return (\n      <html lang={this.props.language}>\n        <Head\n          config={this.props.config}\n          description={description}\n          title={title}\n          url={url}\n          language={this.props.language}\n          version={this.props.version}\n        />\n        <body className={this.props.className}>\n          <HeaderNav\n            config={this.props.config}\n            baseUrl={this.props.config.baseUrl}\n            title={this.props.config.title}\n            language={this.props.language}\n            version={this.props.version}\n            current={this.props.metadata}\n          />\n          <div className={navPusherClasses}>\n            {this.props.children}\n            <Footer config={this.props.config} language={this.props.language} />\n          </div>\n          {this.props.config.algolia && (\n            <script\n              type=\"text/javascript\"\n              src=\"https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js\"\n            />\n          )}\n          {this.props.config.facebookAppId && (\n            <script\n              dangerouslySetInnerHTML={{\n                __html: `window.fbAsyncInit = function() {FB.init({appId:'${this.props.config.facebookAppId}',xfbml:true,version:'v2.7'});};(function(d, s, id){var js, fjs = d.getElementsByTagName(s)[0];if (d.getElementById(id)) {return;}js = d.createElement(s); js.id = id;js.src = '//connect.facebook.net/en_US/sdk.js';fjs.parentNode.insertBefore(js, fjs);}(document, 'script','facebook-jssdk'));\n                `,\n              }}\n            />\n          )}\n          {this.props.config.facebookPixelId && (\n            <script\n              dangerouslySetInnerHTML={{\n                __html: `\n              !function(f,b,e,v,n,t,s)\n              {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n              n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n              if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n              n.queue=[];t=b.createElement(e);t.async=!0;\n              t.src=v;s=b.getElementsByTagName(e)[0];\n              s.parentNode.insertBefore(t,s)}(window, document,'script',\n              'https://connect.facebook.net/en_US/fbevents.js');\n              fbq('init', '${this.props.config.facebookPixelId}');\n              fbq('track', 'PageView');\n                `,\n              }}\n            />\n          )}\n          {(this.props.config.twitter || this.props.config.twitterUsername) && (\n            <script\n              dangerouslySetInnerHTML={{\n                __html: `window.twttr=(function(d,s, id){var js,fjs=d.getElementsByTagName(s)[0],t=window.twttr||{};if(d.getElementById(id))return t;js=d.createElement(s);js.id=id;js.src='https://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js, fjs);t._e = [];t.ready = function(f) {t._e.push(f);};return t;}(document, 'script', 'twitter-wjs'));`,\n              }}\n            />\n          )}\n          {this.props.config.algolia && (\n            <script\n              dangerouslySetInnerHTML={{\n                __html: `\n                document.addEventListener('keyup', function(e) {\n                  if (e.target !== document.body) {\n                    return;\n                  }\n                  // keyCode for '/' (slash)\n                  if (e.keyCode === 191) {\n                    const search = document.getElementById('search_input_react');\n                    search && search.focus();\n                  }\n                });\n              `,\n              }}\n            />\n          )}\n          {this.props.config.algolia &&\n            (this.props.config.algolia.algoliaOptions ? (\n              <script\n                dangerouslySetInnerHTML={{\n                  __html: `\n              var search = docsearch({\n                ${\n                  this.props.config.algolia.appId\n                    ? `appId: '${this.props.config.algolia.appId}',`\n                    : ''\n                }\n                apiKey: '${this.props.config.algolia.apiKey}',\n                indexName: '${this.props.config.algolia.indexName}',\n                inputSelector: '#search_input_react',\n                algoliaOptions: ${JSON.stringify(\n                  this.props.config.algolia.algoliaOptions,\n                )\n                  .replace('VERSION', docsVersion)\n                  .replace('LANGUAGE', this.props.language)}\n              });\n            `,\n                }}\n              />\n            ) : (\n              <script\n                dangerouslySetInnerHTML={{\n                  __html: `\n              var search = docsearch({\n                ${\n                  this.props.config.algolia.appId\n                    ? `appId: '${this.props.config.algolia.appId}',`\n                    : ''\n                }\n                apiKey: '${this.props.config.algolia.apiKey}',\n                indexName: '${this.props.config.algolia.indexName}',\n                inputSelector: '#search_input_react'\n              });\n            `,\n                }}\n              />\n            ))}\n\n          {process.env.NODE_ENV === 'development' && liveReloadScriptUrl && (\n            <script src={liveReloadScriptUrl} />\n          )}\n        </body>\n      </html>\n    );\n  }\n}\nmodule.exports = Site;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\nav\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\nav\\\\HeaderNav.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\nav\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\nav\\HeaderNav.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\nav\\HeaderNav.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\nav\\HeaderNav.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\nav\\",
        "sourceFileName": "HeaderNav.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar React = require('react');\n\nvar fs = require('fs');\n\nvar classNames = require('classnames');\n\nvar loadConfig = require('../../server/config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar translation = require('../../server/translation.js');\n\nvar env = require('../../server/env.js');\n\nvar translate = require('../../server/translate.js').translate;\n\nvar setLanguage = require('../../server/translate.js').setLanguage;\n\nvar readMetadata = require('../../server/readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\n\nvar Metadata = require('../metadata.js');\n\nvar _require = require('../utils.js'),\n    idx = _require.idx,\n    getPath = _require.getPath;\n\nvar extension = siteConfig.cleanUrl ? '' : '.html'; // language dropdown nav item for when translations are enabled\n\nvar LanguageDropDown = /*#__PURE__*/function (_React$Component) {\n  _inherits(LanguageDropDown, _React$Component);\n\n  var _super = _createSuper(LanguageDropDown);\n\n  function LanguageDropDown() {\n    _classCallCheck(this, LanguageDropDown);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LanguageDropDown, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      setLanguage(this.props.language || 'en');\n      var helpTranslateString = translate('Help Translate|recruit community translators for your project');\n      var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : ''); // add all enabled languages to dropdown\n\n      var enabledLanguages = env.translation.enabledLanguages().filter(function (lang) {\n        return lang.tag !== _this.props.language;\n      }).map(function (lang) {\n        // build the href so that we try to stay in current url but change the language.\n        var href = siteConfig.baseUrl + lang.tag;\n\n        if (_this.props.current && _this.props.current.permalink && _this.props.language) {\n          href = siteConfig.baseUrl + _this.props.current.permalink.replace(new RegExp(\"^\".concat(docsPart).concat(_this.props.language, \"/\")), \"\".concat(docsPart).concat(lang.tag, \"/\"));\n        } else if (_this.props.current.id && _this.props.current.id !== 'index') {\n          href = \"\".concat(siteConfig.baseUrl + lang.tag, \"/\").concat(_this.props.current.id);\n        }\n\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: lang.tag\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: getPath(href, _this.props.cleanUrl)\n        }, lang.name));\n      }); // if no languages are enabled besides English, return null\n\n      if (enabledLanguages.length < 1) {\n        return null;\n      } // Get the current language full name for display in the header nav\n\n\n      var currentLanguage = env.translation.enabledLanguages().filter(function (lang) {\n        return lang.tag === _this.props.language;\n      }).map(function (lang) {\n        return lang.name;\n      }); // add Crowdin project recruiting link\n\n      if (siteConfig.translationRecruitingLink) {\n        enabledLanguages.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: \"recruiting\"\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: siteConfig.translationRecruitingLink,\n          target: \"_blank\",\n          rel: \"noreferrer noopener\"\n        }, helpTranslateString)));\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(\"li\", {\n        key: \"languages\"\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        id: \"languages-menu\",\n        href: \"#\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"languages-icon\",\n        src: \"\".concat(this.props.baseUrl, \"img/language.svg\"),\n        alt: \"Languages icon\"\n      }), currentLanguage), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"languages-dropdown\",\n        className: \"hide\"\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        id: \"languages-dropdown-items\"\n      }, enabledLanguages))), /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n        const languagesMenuItem = document.getElementById(\\\"languages-menu\\\");\\n        const languagesDropDown = document.getElementById(\\\"languages-dropdown\\\");\\n        languagesMenuItem.addEventListener(\\\"click\\\", function(event) {\\n          event.preventDefault();\\n\\n          if (languagesDropDown.className == \\\"hide\\\") {\\n            languagesDropDown.className = \\\"visible\\\";\\n          } else {\\n            languagesDropDown.className = \\\"hide\\\";\\n          }\\n        });\\n      \"\n        }\n      }));\n    }\n  }]);\n\n  return LanguageDropDown;\n}(React.Component); // header navbar used by all pages generated with docusaurus\n\n\nvar HeaderNav = /*#__PURE__*/function (_React$Component2) {\n  _inherits(HeaderNav, _React$Component2);\n\n  var _super2 = _createSuper(HeaderNav);\n\n  function HeaderNav() {\n    _classCallCheck(this, HeaderNav);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(HeaderNav, [{\n    key: \"makeLinks\",\n    // function to generate each header link, used with each object in siteConfig.headerLinks\n    value: function makeLinks(link) {\n      var href;\n      var docItemActive = false;\n      var docGroupActive = false;\n\n      if (link.search && this.props.config.algolia) {\n        // return algolia search bar\n        var placeholder = this.props.config.algolia.placeholder || 'Search';\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"navSearchWrapper reactNavSearchWrapper\",\n          key: \"search\"\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          id: \"search_input_react\",\n          type: \"text\",\n          placeholder: placeholder,\n          title: placeholder\n        }));\n      }\n\n      if (link.languages) {\n        if (env.translation.enabled && env.translation.enabledLanguages().length > 1) {\n          return /*#__PURE__*/React.createElement(LanguageDropDown, {\n            baseUrl: this.props.baseUrl,\n            language: this.props.language,\n            current: this.props.current,\n            cleanUrl: this.props.config.cleanUrl,\n            key: \"languagedropdown\"\n          });\n        }\n\n        return null;\n      }\n\n      if (link.doc) {\n        // set link to document with current page's language/version\n        var langPart = env.translation.enabled ? \"\".concat(this.props.language || 'en', \"-\") : '';\n        var versionPart = env.versioning.enabled && this.props.version !== 'next' ? \"version-\".concat(this.props.version || env.versioning.defaultVersion, \"-\") : '';\n        var id = langPart + versionPart + link.doc;\n\n        if (!Metadata[id]) {\n          var errorStr = \"Processing the following `doc` field in `headerLinks` within `siteConfig.js`: '\".concat(link.doc, \"'\");\n\n          if (id === link.doc) {\n            errorStr += ' It looks like there is no document with that id that exists in your docs directory. Please double check the spelling of your `doc` field and the `id` fields of your docs.';\n          } else {\n            errorStr += \"\".concat('. Check the spelling of your `doc` field. If that seems sane, and a document in your docs folder exists with that `id` value, \\nthen this is likely a bug in Docusaurus.' + ' Docusaurus thinks one or both of translations (currently set to: ').concat(env.translation.enabled, \") or versioning (currently set to: \").concat(env.versioning.enabled, \") is enabled when maybe they should not be. \\nThus my internal id for this doc is: '\").concat(id, \"'. Please file an issue for this possible bug on GitHub.\");\n          }\n\n          throw new Error(errorStr);\n        }\n\n        href = this.props.config.baseUrl + getPath(Metadata[id].permalink, this.props.config.cleanUrl);\n        var _this$props$current = this.props.current,\n            currentID = _this$props$current.id,\n            sidebar = _this$props$current.sidebar;\n        docItemActive = currentID && currentID === id;\n        docGroupActive = sidebar && sidebar === Metadata[id].sidebar;\n      } else if (link.page) {\n        // set link to page with current page's language if appropriate\n        var language = this.props.language || '';\n\n        if (fs.existsSync(\"\".concat(CWD, \"/pages/en/\").concat(link.page, \".js\"))) {\n          href = siteConfig.baseUrl + (env.translation.enabled ? \"\".concat(language, \"/\") : '') + link.page + extension;\n        } else {\n          href = siteConfig.baseUrl + link.page + extension;\n        }\n      } else if (link.href) {\n        // set link to specified href\n        href = link.href;\n      } else if (link.blog) {\n        // set link to blog url\n        href = \"\".concat(this.props.baseUrl, \"blog/\");\n      }\n\n      var itemClasses = classNames({\n        siteNavGroupActive: link.doc && docGroupActive || link.blog && this.props.current.blog,\n        siteNavItemActive: docItemActive || link.blog && this.props.current.blogListing || link.page && link.page === this.props.current.id\n      });\n      var i18n = translation[this.props.language];\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: \"\".concat(link.label, \"page\"),\n        className: itemClasses\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: href,\n        target: link.external ? '_blank' : '_self'\n      }, idx(i18n, ['localized-strings', 'links', link.label]) || link.label));\n    }\n  }, {\n    key: \"renderResponsiveNav\",\n    value: function renderResponsiveNav() {\n      var headerLinks = this.props.config.headerLinks; // add language drop down to end if location not specified\n\n      var languages = false;\n      headerLinks.forEach(function (link) {\n        if (link.languages) {\n          languages = true;\n        }\n      });\n\n      if (!languages) {\n        headerLinks.push({\n          languages: true\n        });\n      }\n\n      var search = false;\n      headerLinks.forEach(function (link) {\n        if (link.doc && !fs.existsSync(\"\".concat(CWD, \"/../\").concat(readMetadata.getDocsPath(), \"/\"))) {\n          throw new Error(\"You have 'doc' in your headerLinks, but no '\".concat(readMetadata.getDocsPath(), \"' folder exists one level up from \") + \"'website' folder. Did you run `docusaurus-init` or `npm run examples`? If so, \" + \"make sure you rename 'docs-examples-from-docusaurus' to 'docs'.\");\n        }\n\n        if (link.blog && !fs.existsSync(\"\".concat(CWD, \"/blog/\"))) {\n          throw new Error(\"You have 'blog' in your headerLinks, but no 'blog' folder exists in your \" + \"'website' folder. Did you run `docusaurus-init` or `npm run examples`? If so, \" + \"make sure you rename 'blog-examples-from-docusaurus' to 'blog'.\");\n        }\n\n        if (link.page && !fs.existsSync(\"\".concat(CWD, \"/pages/\"))) {\n          throw new Error(\"You have 'page' in your headerLinks, but no 'pages' folder exists in your \" + \"'website' folder.\");\n        } // We will add search bar to end if location not specified\n\n\n        if (link.search) {\n          search = true;\n        }\n      });\n\n      if (!search && this.props.config.algolia) {\n        headerLinks.push({\n          search: true\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navigationWrapper navigationSlider\"\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"slidingNav\"\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav-site nav-site-internal\"\n      }, headerLinks.map(this.makeLinks, this))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var headerClass = siteConfig.headerIcon ? 'headerTitleWithLogo' : 'headerTitle';\n      var versionsLink = this.props.baseUrl + (env.translation.enabled ? \"\".concat(this.props.language, \"/versions\").concat(extension) : \"versions\".concat(extension));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixedHeaderContainer\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headerWrapper wrapper\"\n      }, /*#__PURE__*/React.createElement(\"header\", null, /*#__PURE__*/React.createElement(\"a\", {\n        href: this.props.baseUrl + (env.translation.enabled ? this.props.language : '')\n      }, siteConfig.headerIcon && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"logo\",\n        src: this.props.baseUrl + siteConfig.headerIcon,\n        alt: siteConfig.title\n      }), !this.props.config.disableHeaderTitle && /*#__PURE__*/React.createElement(\"h2\", {\n        className: headerClass\n      }, this.props.title)), env.versioning.enabled && /*#__PURE__*/React.createElement(\"a\", {\n        href: versionsLink\n      }, /*#__PURE__*/React.createElement(\"h3\", null, this.props.version || env.versioning.defaultVersion)), this.renderResponsiveNav())));\n    }\n  }]);\n\n  return HeaderNav;\n}(React.Component);\n\nHeaderNav.defaultProps = {\n  current: {}\n};\nmodule.exports = HeaderNav;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhlYWRlck5hdi5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwiUmVhY3QiLCJyZXF1aXJlIiwiZnMiLCJjbGFzc05hbWVzIiwibG9hZENvbmZpZyIsInNpdGVDb25maWciLCJ0cmFuc2xhdGlvbiIsImVudiIsInRyYW5zbGF0ZSIsInNldExhbmd1YWdlIiwicmVhZE1ldGFkYXRhIiwiZ2VuZXJhdGVNZXRhZGF0YURvY3MiLCJNZXRhZGF0YSIsImlkeCIsImdldFBhdGgiLCJleHRlbnNpb24iLCJjbGVhblVybCIsIkxhbmd1YWdlRHJvcERvd24iLCJwcm9wcyIsImxhbmd1YWdlIiwiaGVscFRyYW5zbGF0ZVN0cmluZyIsImRvY3NQYXJ0IiwiZG9jc1VybCIsImVuYWJsZWRMYW5ndWFnZXMiLCJmaWx0ZXIiLCJsYW5nIiwidGFnIiwibWFwIiwiaHJlZiIsImJhc2VVcmwiLCJjdXJyZW50IiwicGVybWFsaW5rIiwicmVwbGFjZSIsIlJlZ0V4cCIsImlkIiwibmFtZSIsImxlbmd0aCIsImN1cnJlbnRMYW5ndWFnZSIsInRyYW5zbGF0aW9uUmVjcnVpdGluZ0xpbmsiLCJwdXNoIiwiX19odG1sIiwiQ29tcG9uZW50IiwiSGVhZGVyTmF2IiwibGluayIsImRvY0l0ZW1BY3RpdmUiLCJkb2NHcm91cEFjdGl2ZSIsInNlYXJjaCIsImNvbmZpZyIsImFsZ29saWEiLCJwbGFjZWhvbGRlciIsImxhbmd1YWdlcyIsImVuYWJsZWQiLCJkb2MiLCJsYW5nUGFydCIsInZlcnNpb25QYXJ0IiwidmVyc2lvbmluZyIsInZlcnNpb24iLCJkZWZhdWx0VmVyc2lvbiIsImVycm9yU3RyIiwiRXJyb3IiLCJjdXJyZW50SUQiLCJzaWRlYmFyIiwicGFnZSIsImV4aXN0c1N5bmMiLCJibG9nIiwiaXRlbUNsYXNzZXMiLCJzaXRlTmF2R3JvdXBBY3RpdmUiLCJzaXRlTmF2SXRlbUFjdGl2ZSIsImJsb2dMaXN0aW5nIiwiaTE4biIsImxhYmVsIiwiZXh0ZXJuYWwiLCJoZWFkZXJMaW5rcyIsImZvckVhY2giLCJnZXREb2NzUGF0aCIsIm1ha2VMaW5rcyIsImhlYWRlckNsYXNzIiwiaGVhZGVySWNvbiIsInZlcnNpb25zTGluayIsInRpdGxlIiwiZGlzYWJsZUhlYWRlclRpdGxlIiwicmVuZGVyUmVzcG9uc2l2ZU5hdiIsImRlZmF1bHRQcm9wcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFaOztBQUVBLElBQU1DLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsSUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBQTFCOztBQUVBLElBQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLHFCQUFELENBQTFCOztBQUVBLElBQU1JLFVBQVUsR0FBR0QsVUFBVSxXQUFJUCxHQUFKLG9CQUE3Qjs7QUFDQSxJQUFNUyxXQUFXLEdBQUdMLE9BQU8sQ0FBQyw2QkFBRCxDQUEzQjs7QUFDQSxJQUFNTSxHQUFHLEdBQUdOLE9BQU8sQ0FBQyxxQkFBRCxDQUFuQjs7QUFFQSxJQUFNTyxTQUFTLEdBQUdQLE9BQU8sQ0FBQywyQkFBRCxDQUFQLENBQXFDTyxTQUF2RDs7QUFDQSxJQUFNQyxXQUFXLEdBQUdSLE9BQU8sQ0FBQywyQkFBRCxDQUFQLENBQXFDUSxXQUF6RDs7QUFFQSxJQUFNQyxZQUFZLEdBQUdULE9BQU8sQ0FBQyw4QkFBRCxDQUE1Qjs7QUFFQVMsWUFBWSxDQUFDQyxvQkFBYjs7QUFDQSxJQUFNQyxRQUFRLEdBQUdYLE9BQU8sQ0FBQyxnQkFBRCxDQUF4Qjs7ZUFDdUJBLE9BQU8sQ0FBQyxhQUFELEM7SUFBdkJZLEcsWUFBQUEsRztJQUFLQyxPLFlBQUFBLE87O0FBRVosSUFBTUMsU0FBUyxHQUFHVixVQUFVLENBQUNXLFFBQVgsR0FBc0IsRUFBdEIsR0FBMkIsT0FBN0MsQyxDQUVBOztJQUNNQyxnQjs7Ozs7Ozs7Ozs7Ozs2QkFDSztBQUFBOztBQUNQUixNQUFBQSxXQUFXLENBQUMsS0FBS1MsS0FBTCxDQUFXQyxRQUFYLElBQXVCLElBQXhCLENBQVg7QUFDQSxVQUFNQyxtQkFBbUIsR0FBR1osU0FBUyxDQUNuQywrREFEbUMsQ0FBckM7QUFHQSxVQUFNYSxRQUFRLGFBQU1oQixVQUFVLENBQUNpQixPQUFYLGFBQXdCakIsVUFBVSxDQUFDaUIsT0FBbkMsU0FBZ0QsRUFBdEQsQ0FBZCxDQUxPLENBTVA7O0FBQ0EsVUFBTUMsZ0JBQWdCLEdBQUdoQixHQUFHLENBQUNELFdBQUosQ0FDdEJpQixnQkFEc0IsR0FFdEJDLE1BRnNCLENBRWYsVUFBQ0MsSUFBRDtBQUFBLGVBQVVBLElBQUksQ0FBQ0MsR0FBTCxLQUFhLEtBQUksQ0FBQ1IsS0FBTCxDQUFXQyxRQUFsQztBQUFBLE9BRmUsRUFHdEJRLEdBSHNCLENBR2xCLFVBQUNGLElBQUQsRUFBVTtBQUNiO0FBQ0EsWUFBSUcsSUFBSSxHQUFHdkIsVUFBVSxDQUFDd0IsT0FBWCxHQUFxQkosSUFBSSxDQUFDQyxHQUFyQzs7QUFDQSxZQUNFLEtBQUksQ0FBQ1IsS0FBTCxDQUFXWSxPQUFYLElBQ0EsS0FBSSxDQUFDWixLQUFMLENBQVdZLE9BQVgsQ0FBbUJDLFNBRG5CLElBRUEsS0FBSSxDQUFDYixLQUFMLENBQVdDLFFBSGIsRUFJRTtBQUNBUyxVQUFBQSxJQUFJLEdBQ0Z2QixVQUFVLENBQUN3QixPQUFYLEdBQ0EsS0FBSSxDQUFDWCxLQUFMLENBQVdZLE9BQVgsQ0FBbUJDLFNBQW5CLENBQTZCQyxPQUE3QixDQUNFLElBQUlDLE1BQUosWUFBZVosUUFBZixTQUEwQixLQUFJLENBQUNILEtBQUwsQ0FBV0MsUUFBckMsT0FERixZQUVLRSxRQUZMLFNBRWdCSSxJQUFJLENBQUNDLEdBRnJCLE9BRkY7QUFNRCxTQVhELE1BV08sSUFBSSxLQUFJLENBQUNSLEtBQUwsQ0FBV1ksT0FBWCxDQUFtQkksRUFBbkIsSUFBeUIsS0FBSSxDQUFDaEIsS0FBTCxDQUFXWSxPQUFYLENBQW1CSSxFQUFuQixLQUEwQixPQUF2RCxFQUFnRTtBQUNyRU4sVUFBQUEsSUFBSSxhQUFNdkIsVUFBVSxDQUFDd0IsT0FBWCxHQUFxQkosSUFBSSxDQUFDQyxHQUFoQyxjQUF1QyxLQUFJLENBQUNSLEtBQUwsQ0FBV1ksT0FBWCxDQUFtQkksRUFBMUQsQ0FBSjtBQUNEOztBQUNELDRCQUNFO0FBQUksVUFBQSxHQUFHLEVBQUVULElBQUksQ0FBQ0M7QUFBZCx3QkFDRTtBQUFHLFVBQUEsSUFBSSxFQUFFWixPQUFPLENBQUNjLElBQUQsRUFBTyxLQUFJLENBQUNWLEtBQUwsQ0FBV0YsUUFBbEI7QUFBaEIsV0FBOENTLElBQUksQ0FBQ1UsSUFBbkQsQ0FERixDQURGO0FBS0QsT0F6QnNCLENBQXpCLENBUE8sQ0FpQ1A7O0FBQ0EsVUFBSVosZ0JBQWdCLENBQUNhLE1BQWpCLEdBQTBCLENBQTlCLEVBQWlDO0FBQy9CLGVBQU8sSUFBUDtBQUNELE9BcENNLENBc0NQOzs7QUFDQSxVQUFNQyxlQUFlLEdBQUc5QixHQUFHLENBQUNELFdBQUosQ0FDckJpQixnQkFEcUIsR0FFckJDLE1BRnFCLENBRWQsVUFBQ0MsSUFBRDtBQUFBLGVBQVVBLElBQUksQ0FBQ0MsR0FBTCxLQUFhLEtBQUksQ0FBQ1IsS0FBTCxDQUFXQyxRQUFsQztBQUFBLE9BRmMsRUFHckJRLEdBSHFCLENBR2pCLFVBQUNGLElBQUQ7QUFBQSxlQUFVQSxJQUFJLENBQUNVLElBQWY7QUFBQSxPQUhpQixDQUF4QixDQXZDTyxDQTRDUDs7QUFDQSxVQUFJOUIsVUFBVSxDQUFDaUMseUJBQWYsRUFBMEM7QUFDeENmLFFBQUFBLGdCQUFnQixDQUFDZ0IsSUFBakIsZUFDRTtBQUFJLFVBQUEsR0FBRyxFQUFDO0FBQVIsd0JBQ0U7QUFDRSxVQUFBLElBQUksRUFBRWxDLFVBQVUsQ0FBQ2lDLHlCQURuQjtBQUVFLFVBQUEsTUFBTSxFQUFDLFFBRlQ7QUFHRSxVQUFBLEdBQUcsRUFBQztBQUhOLFdBSUdsQixtQkFKSCxDQURGLENBREY7QUFVRDs7QUFFRCwwQkFDRSwrQ0FDRTtBQUFJLFFBQUEsR0FBRyxFQUFDO0FBQVIsc0JBQ0U7QUFBRyxRQUFBLEVBQUUsRUFBQyxnQkFBTjtBQUF1QixRQUFBLElBQUksRUFBQztBQUE1QixzQkFDRTtBQUNFLFFBQUEsU0FBUyxFQUFDLGdCQURaO0FBRUUsUUFBQSxHQUFHLFlBQUssS0FBS0YsS0FBTCxDQUFXVyxPQUFoQixxQkFGTDtBQUdFLFFBQUEsR0FBRyxFQUFDO0FBSE4sUUFERixFQU1HUSxlQU5ILENBREYsZUFTRTtBQUFLLFFBQUEsRUFBRSxFQUFDLG9CQUFSO0FBQTZCLFFBQUEsU0FBUyxFQUFDO0FBQXZDLHNCQUNFO0FBQUksUUFBQSxFQUFFLEVBQUM7QUFBUCxTQUFtQ2QsZ0JBQW5DLENBREYsQ0FURixDQURGLGVBY0U7QUFDRSxRQUFBLHVCQUF1QixFQUFFO0FBQ3ZCaUIsVUFBQUEsTUFBTTtBQURpQjtBQUQzQixRQWRGLENBREY7QUFrQ0Q7Ozs7RUE3RjRCeEMsS0FBSyxDQUFDeUMsUyxHQWdHckM7OztJQUNNQyxTOzs7Ozs7Ozs7Ozs7O0FBQ0o7OEJBQ1VDLEksRUFBTTtBQUNkLFVBQUlmLElBQUo7QUFDQSxVQUFJZ0IsYUFBYSxHQUFHLEtBQXBCO0FBQ0EsVUFBSUMsY0FBYyxHQUFHLEtBQXJCOztBQUNBLFVBQUlGLElBQUksQ0FBQ0csTUFBTCxJQUFlLEtBQUs1QixLQUFMLENBQVc2QixNQUFYLENBQWtCQyxPQUFyQyxFQUE4QztBQUM1QztBQUNBLFlBQU1DLFdBQVcsR0FBRyxLQUFLL0IsS0FBTCxDQUFXNkIsTUFBWCxDQUFrQkMsT0FBbEIsQ0FBMEJDLFdBQTFCLElBQXlDLFFBQTdEO0FBQ0EsNEJBQ0U7QUFBSSxVQUFBLFNBQVMsRUFBQyx3Q0FBZDtBQUF1RCxVQUFBLEdBQUcsRUFBQztBQUEzRCx3QkFDRTtBQUNFLFVBQUEsRUFBRSxFQUFDLG9CQURMO0FBRUUsVUFBQSxJQUFJLEVBQUMsTUFGUDtBQUdFLFVBQUEsV0FBVyxFQUFFQSxXQUhmO0FBSUUsVUFBQSxLQUFLLEVBQUVBO0FBSlQsVUFERixDQURGO0FBVUQ7O0FBQ0QsVUFBSU4sSUFBSSxDQUFDTyxTQUFULEVBQW9CO0FBQ2xCLFlBQ0UzQyxHQUFHLENBQUNELFdBQUosQ0FBZ0I2QyxPQUFoQixJQUNBNUMsR0FBRyxDQUFDRCxXQUFKLENBQWdCaUIsZ0JBQWhCLEdBQW1DYSxNQUFuQyxHQUE0QyxDQUY5QyxFQUdFO0FBQ0EsOEJBQ0Usb0JBQUMsZ0JBQUQ7QUFDRSxZQUFBLE9BQU8sRUFBRSxLQUFLbEIsS0FBTCxDQUFXVyxPQUR0QjtBQUVFLFlBQUEsUUFBUSxFQUFFLEtBQUtYLEtBQUwsQ0FBV0MsUUFGdkI7QUFHRSxZQUFBLE9BQU8sRUFBRSxLQUFLRCxLQUFMLENBQVdZLE9BSHRCO0FBSUUsWUFBQSxRQUFRLEVBQUUsS0FBS1osS0FBTCxDQUFXNkIsTUFBWCxDQUFrQi9CLFFBSjlCO0FBS0UsWUFBQSxHQUFHLEVBQUM7QUFMTixZQURGO0FBU0Q7O0FBQ0QsZUFBTyxJQUFQO0FBQ0Q7O0FBQ0QsVUFBSTJCLElBQUksQ0FBQ1MsR0FBVCxFQUFjO0FBQ1o7QUFDQSxZQUFNQyxRQUFRLEdBQUc5QyxHQUFHLENBQUNELFdBQUosQ0FBZ0I2QyxPQUFoQixhQUNWLEtBQUtqQyxLQUFMLENBQVdDLFFBQVgsSUFBdUIsSUFEYixTQUViLEVBRko7QUFHQSxZQUFNbUMsV0FBVyxHQUNmL0MsR0FBRyxDQUFDZ0QsVUFBSixDQUFlSixPQUFmLElBQTBCLEtBQUtqQyxLQUFMLENBQVdzQyxPQUFYLEtBQXVCLE1BQWpELHFCQUNlLEtBQUt0QyxLQUFMLENBQVdzQyxPQUFYLElBQXNCakQsR0FBRyxDQUFDZ0QsVUFBSixDQUFlRSxjQURwRCxTQUVJLEVBSE47QUFJQSxZQUFNdkIsRUFBRSxHQUFHbUIsUUFBUSxHQUFHQyxXQUFYLEdBQXlCWCxJQUFJLENBQUNTLEdBQXpDOztBQUNBLFlBQUksQ0FBQ3hDLFFBQVEsQ0FBQ3NCLEVBQUQsQ0FBYixFQUFtQjtBQUNqQixjQUFJd0IsUUFBUSw0RkFBMkZmLElBQUksQ0FBQ1MsR0FBaEcsTUFBWjs7QUFDQSxjQUFJbEIsRUFBRSxLQUFLUyxJQUFJLENBQUNTLEdBQWhCLEVBQXFCO0FBQ25CTSxZQUFBQSxRQUFRLElBQ04sNktBREY7QUFFRCxXQUhELE1BR087QUFDTEEsWUFBQUEsUUFBUSxjQUNOLDZLQUNBLG9FQUZNLFNBR0xuRCxHQUFHLENBQUNELFdBQUosQ0FBZ0I2QyxPQUhYLGdEQUlONUMsR0FBRyxDQUFDZ0QsVUFBSixDQUFlSixPQUpULGlHQUsrRWpCLEVBTC9FLDZEQUFSO0FBTUQ7O0FBQ0QsZ0JBQU0sSUFBSXlCLEtBQUosQ0FBVUQsUUFBVixDQUFOO0FBQ0Q7O0FBQ0Q5QixRQUFBQSxJQUFJLEdBQ0YsS0FBS1YsS0FBTCxDQUFXNkIsTUFBWCxDQUFrQmxCLE9BQWxCLEdBQ0FmLE9BQU8sQ0FBQ0YsUUFBUSxDQUFDc0IsRUFBRCxDQUFSLENBQWFILFNBQWQsRUFBeUIsS0FBS2IsS0FBTCxDQUFXNkIsTUFBWCxDQUFrQi9CLFFBQTNDLENBRlQ7QUF6Qlksa0NBNkJxQixLQUFLRSxLQUFMLENBQVdZLE9BN0JoQztBQUFBLFlBNkJEOEIsU0E3QkMsdUJBNkJMMUIsRUE3Qks7QUFBQSxZQTZCVTJCLE9BN0JWLHVCQTZCVUEsT0E3QlY7QUE4QlpqQixRQUFBQSxhQUFhLEdBQUdnQixTQUFTLElBQUlBLFNBQVMsS0FBSzFCLEVBQTNDO0FBQ0FXLFFBQUFBLGNBQWMsR0FBR2dCLE9BQU8sSUFBSUEsT0FBTyxLQUFLakQsUUFBUSxDQUFDc0IsRUFBRCxDQUFSLENBQWEyQixPQUFyRDtBQUNELE9BaENELE1BZ0NPLElBQUlsQixJQUFJLENBQUNtQixJQUFULEVBQWU7QUFDcEI7QUFDQSxZQUFNM0MsUUFBUSxHQUFHLEtBQUtELEtBQUwsQ0FBV0MsUUFBWCxJQUF1QixFQUF4Qzs7QUFDQSxZQUFJakIsRUFBRSxDQUFDNkQsVUFBSCxXQUFpQmxFLEdBQWpCLHVCQUFpQzhDLElBQUksQ0FBQ21CLElBQXRDLFNBQUosRUFBc0Q7QUFDcERsQyxVQUFBQSxJQUFJLEdBQ0Z2QixVQUFVLENBQUN3QixPQUFYLElBQ0N0QixHQUFHLENBQUNELFdBQUosQ0FBZ0I2QyxPQUFoQixhQUE2QmhDLFFBQTdCLFNBQTJDLEVBRDVDLElBRUF3QixJQUFJLENBQUNtQixJQUZMLEdBR0EvQyxTQUpGO0FBS0QsU0FORCxNQU1PO0FBQ0xhLFVBQUFBLElBQUksR0FBR3ZCLFVBQVUsQ0FBQ3dCLE9BQVgsR0FBcUJjLElBQUksQ0FBQ21CLElBQTFCLEdBQWlDL0MsU0FBeEM7QUFDRDtBQUNGLE9BWk0sTUFZQSxJQUFJNEIsSUFBSSxDQUFDZixJQUFULEVBQWU7QUFDcEI7QUFDQUEsUUFBQUEsSUFBSSxHQUFHZSxJQUFJLENBQUNmLElBQVo7QUFDRCxPQUhNLE1BR0EsSUFBSWUsSUFBSSxDQUFDcUIsSUFBVCxFQUFlO0FBQ3BCO0FBQ0FwQyxRQUFBQSxJQUFJLGFBQU0sS0FBS1YsS0FBTCxDQUFXVyxPQUFqQixVQUFKO0FBQ0Q7O0FBQ0QsVUFBTW9DLFdBQVcsR0FBRzlELFVBQVUsQ0FBQztBQUM3QitELFFBQUFBLGtCQUFrQixFQUNmdkIsSUFBSSxDQUFDUyxHQUFMLElBQVlQLGNBQWIsSUFBaUNGLElBQUksQ0FBQ3FCLElBQUwsSUFBYSxLQUFLOUMsS0FBTCxDQUFXWSxPQUFYLENBQW1Ca0MsSUFGdEM7QUFHN0JHLFFBQUFBLGlCQUFpQixFQUNmdkIsYUFBYSxJQUNaRCxJQUFJLENBQUNxQixJQUFMLElBQWEsS0FBSzlDLEtBQUwsQ0FBV1ksT0FBWCxDQUFtQnNDLFdBRGpDLElBRUN6QixJQUFJLENBQUNtQixJQUFMLElBQWFuQixJQUFJLENBQUNtQixJQUFMLEtBQWMsS0FBSzVDLEtBQUwsQ0FBV1ksT0FBWCxDQUFtQkk7QUFOcEIsT0FBRCxDQUE5QjtBQVFBLFVBQU1tQyxJQUFJLEdBQUcvRCxXQUFXLENBQUMsS0FBS1ksS0FBTCxDQUFXQyxRQUFaLENBQXhCO0FBQ0EsMEJBQ0U7QUFBSSxRQUFBLEdBQUcsWUFBS3dCLElBQUksQ0FBQzJCLEtBQVYsU0FBUDtBQUE4QixRQUFBLFNBQVMsRUFBRUw7QUFBekMsc0JBQ0U7QUFBRyxRQUFBLElBQUksRUFBRXJDLElBQVQ7QUFBZSxRQUFBLE1BQU0sRUFBRWUsSUFBSSxDQUFDNEIsUUFBTCxHQUFnQixRQUFoQixHQUEyQjtBQUFsRCxTQUNHMUQsR0FBRyxDQUFDd0QsSUFBRCxFQUFPLENBQUMsbUJBQUQsRUFBc0IsT0FBdEIsRUFBK0IxQixJQUFJLENBQUMyQixLQUFwQyxDQUFQLENBQUgsSUFBeUQzQixJQUFJLENBQUMyQixLQURqRSxDQURGLENBREY7QUFPRDs7OzBDQUVxQjtBQUNwQixVQUFNRSxXQUFXLEdBQUcsS0FBS3RELEtBQUwsQ0FBVzZCLE1BQVgsQ0FBa0J5QixXQUF0QyxDQURvQixDQUVwQjs7QUFDQSxVQUFJdEIsU0FBUyxHQUFHLEtBQWhCO0FBQ0FzQixNQUFBQSxXQUFXLENBQUNDLE9BQVosQ0FBb0IsVUFBQzlCLElBQUQsRUFBVTtBQUM1QixZQUFJQSxJQUFJLENBQUNPLFNBQVQsRUFBb0I7QUFDbEJBLFVBQUFBLFNBQVMsR0FBRyxJQUFaO0FBQ0Q7QUFDRixPQUpEOztBQUtBLFVBQUksQ0FBQ0EsU0FBTCxFQUFnQjtBQUNkc0IsUUFBQUEsV0FBVyxDQUFDakMsSUFBWixDQUFpQjtBQUFDVyxVQUFBQSxTQUFTLEVBQUU7QUFBWixTQUFqQjtBQUNEOztBQUNELFVBQUlKLE1BQU0sR0FBRyxLQUFiO0FBQ0EwQixNQUFBQSxXQUFXLENBQUNDLE9BQVosQ0FBb0IsVUFBQzlCLElBQUQsRUFBVTtBQUM1QixZQUNFQSxJQUFJLENBQUNTLEdBQUwsSUFDQSxDQUFDbEQsRUFBRSxDQUFDNkQsVUFBSCxXQUFpQmxFLEdBQWpCLGlCQUEyQmEsWUFBWSxDQUFDZ0UsV0FBYixFQUEzQixPQUZILEVBR0U7QUFDQSxnQkFBTSxJQUFJZixLQUFKLENBQ0osc0RBQStDakQsWUFBWSxDQUFDZ0UsV0FBYixFQUEvQyw4TEFESSxDQUFOO0FBS0Q7O0FBQ0QsWUFBSS9CLElBQUksQ0FBQ3FCLElBQUwsSUFBYSxDQUFDOUQsRUFBRSxDQUFDNkQsVUFBSCxXQUFpQmxFLEdBQWpCLFlBQWxCLEVBQWlEO0FBQy9DLGdCQUFNLElBQUk4RCxLQUFKLENBQ0osOEVBQ0UsZ0ZBREYsR0FFRSxpRUFIRSxDQUFOO0FBS0Q7O0FBQ0QsWUFBSWhCLElBQUksQ0FBQ21CLElBQUwsSUFBYSxDQUFDNUQsRUFBRSxDQUFDNkQsVUFBSCxXQUFpQmxFLEdBQWpCLGFBQWxCLEVBQWtEO0FBQ2hELGdCQUFNLElBQUk4RCxLQUFKLENBQ0osK0VBQ0UsbUJBRkUsQ0FBTjtBQUlELFNBdkIyQixDQXdCNUI7OztBQUNBLFlBQUloQixJQUFJLENBQUNHLE1BQVQsRUFBaUI7QUFDZkEsVUFBQUEsTUFBTSxHQUFHLElBQVQ7QUFDRDtBQUNGLE9BNUJEOztBQTZCQSxVQUFJLENBQUNBLE1BQUQsSUFBVyxLQUFLNUIsS0FBTCxDQUFXNkIsTUFBWCxDQUFrQkMsT0FBakMsRUFBMEM7QUFDeEN3QixRQUFBQSxXQUFXLENBQUNqQyxJQUFaLENBQWlCO0FBQUNPLFVBQUFBLE1BQU0sRUFBRTtBQUFULFNBQWpCO0FBQ0Q7O0FBQ0QsMEJBQ0U7QUFBSyxRQUFBLFNBQVMsRUFBQztBQUFmLHNCQUNFO0FBQUssUUFBQSxTQUFTLEVBQUM7QUFBZixzQkFDRTtBQUFJLFFBQUEsU0FBUyxFQUFDO0FBQWQsU0FDRzBCLFdBQVcsQ0FBQzdDLEdBQVosQ0FBZ0IsS0FBS2dELFNBQXJCLEVBQWdDLElBQWhDLENBREgsQ0FERixDQURGLENBREY7QUFTRDs7OzZCQUVRO0FBQ1AsVUFBTUMsV0FBVyxHQUFHdkUsVUFBVSxDQUFDd0UsVUFBWCxHQUNoQixxQkFEZ0IsR0FFaEIsYUFGSjtBQUdBLFVBQU1DLFlBQVksR0FDaEIsS0FBSzVELEtBQUwsQ0FBV1csT0FBWCxJQUNDdEIsR0FBRyxDQUFDRCxXQUFKLENBQWdCNkMsT0FBaEIsYUFDTSxLQUFLakMsS0FBTCxDQUFXQyxRQURqQixzQkFDcUNKLFNBRHJDLHNCQUVjQSxTQUZkLENBREQsQ0FERjtBQUtBLDBCQUNFO0FBQUssUUFBQSxTQUFTLEVBQUM7QUFBZixzQkFDRTtBQUFLLFFBQUEsU0FBUyxFQUFDO0FBQWYsc0JBQ0UsaURBQ0U7QUFDRSxRQUFBLElBQUksRUFDRixLQUFLRyxLQUFMLENBQVdXLE9BQVgsSUFDQ3RCLEdBQUcsQ0FBQ0QsV0FBSixDQUFnQjZDLE9BQWhCLEdBQTBCLEtBQUtqQyxLQUFMLENBQVdDLFFBQXJDLEdBQWdELEVBRGpEO0FBRkosU0FLR2QsVUFBVSxDQUFDd0UsVUFBWCxpQkFDQztBQUNFLFFBQUEsU0FBUyxFQUFDLE1BRFo7QUFFRSxRQUFBLEdBQUcsRUFBRSxLQUFLM0QsS0FBTCxDQUFXVyxPQUFYLEdBQXFCeEIsVUFBVSxDQUFDd0UsVUFGdkM7QUFHRSxRQUFBLEdBQUcsRUFBRXhFLFVBQVUsQ0FBQzBFO0FBSGxCLFFBTkosRUFZRyxDQUFDLEtBQUs3RCxLQUFMLENBQVc2QixNQUFYLENBQWtCaUMsa0JBQW5CLGlCQUNDO0FBQUksUUFBQSxTQUFTLEVBQUVKO0FBQWYsU0FBNkIsS0FBSzFELEtBQUwsQ0FBVzZELEtBQXhDLENBYkosQ0FERixFQWlCR3hFLEdBQUcsQ0FBQ2dELFVBQUosQ0FBZUosT0FBZixpQkFDQztBQUFHLFFBQUEsSUFBSSxFQUFFMkI7QUFBVCxzQkFDRSxnQ0FBSyxLQUFLNUQsS0FBTCxDQUFXc0MsT0FBWCxJQUFzQmpELEdBQUcsQ0FBQ2dELFVBQUosQ0FBZUUsY0FBMUMsQ0FERixDQWxCSixFQXNCRyxLQUFLd0IsbUJBQUwsRUF0QkgsQ0FERixDQURGLENBREY7QUE4QkQ7Ozs7RUF6TXFCakYsS0FBSyxDQUFDeUMsUzs7QUE0TTlCQyxTQUFTLENBQUN3QyxZQUFWLEdBQXlCO0FBQ3ZCcEQsRUFBQUEsT0FBTyxFQUFFO0FBRGMsQ0FBekI7QUFJQXFELE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjFDLFNBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXERlc2t0b3BcXEJsb2dcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxjb3JlXFxuYXZcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgY2xhc3NOYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxuY29uc3QgbG9hZENvbmZpZyA9IHJlcXVpcmUoJy4uLy4uL3NlcnZlci9jb25maWcnKTtcblxuY29uc3Qgc2l0ZUNvbmZpZyA9IGxvYWRDb25maWcoYCR7Q1dEfS9zaXRlQ29uZmlnLmpzYCk7XG5jb25zdCB0cmFuc2xhdGlvbiA9IHJlcXVpcmUoJy4uLy4uL3NlcnZlci90cmFuc2xhdGlvbi5qcycpO1xuY29uc3QgZW52ID0gcmVxdWlyZSgnLi4vLi4vc2VydmVyL2Vudi5qcycpO1xuXG5jb25zdCB0cmFuc2xhdGUgPSByZXF1aXJlKCcuLi8uLi9zZXJ2ZXIvdHJhbnNsYXRlLmpzJykudHJhbnNsYXRlO1xuY29uc3Qgc2V0TGFuZ3VhZ2UgPSByZXF1aXJlKCcuLi8uLi9zZXJ2ZXIvdHJhbnNsYXRlLmpzJykuc2V0TGFuZ3VhZ2U7XG5cbmNvbnN0IHJlYWRNZXRhZGF0YSA9IHJlcXVpcmUoJy4uLy4uL3NlcnZlci9yZWFkTWV0YWRhdGEuanMnKTtcblxucmVhZE1ldGFkYXRhLmdlbmVyYXRlTWV0YWRhdGFEb2NzKCk7XG5jb25zdCBNZXRhZGF0YSA9IHJlcXVpcmUoJy4uL21ldGFkYXRhLmpzJyk7XG5jb25zdCB7aWR4LCBnZXRQYXRofSA9IHJlcXVpcmUoJy4uL3V0aWxzLmpzJyk7XG5cbmNvbnN0IGV4dGVuc2lvbiA9IHNpdGVDb25maWcuY2xlYW5VcmwgPyAnJyA6ICcuaHRtbCc7XG5cbi8vIGxhbmd1YWdlIGRyb3Bkb3duIG5hdiBpdGVtIGZvciB3aGVuIHRyYW5zbGF0aW9ucyBhcmUgZW5hYmxlZFxuY2xhc3MgTGFuZ3VhZ2VEcm9wRG93biBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBzZXRMYW5ndWFnZSh0aGlzLnByb3BzLmxhbmd1YWdlIHx8ICdlbicpO1xuICAgIGNvbnN0IGhlbHBUcmFuc2xhdGVTdHJpbmcgPSB0cmFuc2xhdGUoXG4gICAgICAnSGVscCBUcmFuc2xhdGV8cmVjcnVpdCBjb21tdW5pdHkgdHJhbnNsYXRvcnMgZm9yIHlvdXIgcHJvamVjdCcsXG4gICAgKTtcbiAgICBjb25zdCBkb2NzUGFydCA9IGAke3NpdGVDb25maWcuZG9jc1VybCA/IGAke3NpdGVDb25maWcuZG9jc1VybH0vYCA6ICcnfWA7XG4gICAgLy8gYWRkIGFsbCBlbmFibGVkIGxhbmd1YWdlcyB0byBkcm9wZG93blxuICAgIGNvbnN0IGVuYWJsZWRMYW5ndWFnZXMgPSBlbnYudHJhbnNsYXRpb25cbiAgICAgIC5lbmFibGVkTGFuZ3VhZ2VzKClcbiAgICAgIC5maWx0ZXIoKGxhbmcpID0+IGxhbmcudGFnICE9PSB0aGlzLnByb3BzLmxhbmd1YWdlKVxuICAgICAgLm1hcCgobGFuZykgPT4ge1xuICAgICAgICAvLyBidWlsZCB0aGUgaHJlZiBzbyB0aGF0IHdlIHRyeSB0byBzdGF5IGluIGN1cnJlbnQgdXJsIGJ1dCBjaGFuZ2UgdGhlIGxhbmd1YWdlLlxuICAgICAgICBsZXQgaHJlZiA9IHNpdGVDb25maWcuYmFzZVVybCArIGxhbmcudGFnO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgdGhpcy5wcm9wcy5jdXJyZW50ICYmXG4gICAgICAgICAgdGhpcy5wcm9wcy5jdXJyZW50LnBlcm1hbGluayAmJlxuICAgICAgICAgIHRoaXMucHJvcHMubGFuZ3VhZ2VcbiAgICAgICAgKSB7XG4gICAgICAgICAgaHJlZiA9XG4gICAgICAgICAgICBzaXRlQ29uZmlnLmJhc2VVcmwgK1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5jdXJyZW50LnBlcm1hbGluay5yZXBsYWNlKFxuICAgICAgICAgICAgICBuZXcgUmVnRXhwKGBeJHtkb2NzUGFydH0ke3RoaXMucHJvcHMubGFuZ3VhZ2V9L2ApLFxuICAgICAgICAgICAgICBgJHtkb2NzUGFydH0ke2xhbmcudGFnfS9gLFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLmN1cnJlbnQuaWQgJiYgdGhpcy5wcm9wcy5jdXJyZW50LmlkICE9PSAnaW5kZXgnKSB7XG4gICAgICAgICAgaHJlZiA9IGAke3NpdGVDb25maWcuYmFzZVVybCArIGxhbmcudGFnfS8ke3RoaXMucHJvcHMuY3VycmVudC5pZH1gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGxpIGtleT17bGFuZy50YWd9PlxuICAgICAgICAgICAgPGEgaHJlZj17Z2V0UGF0aChocmVmLCB0aGlzLnByb3BzLmNsZWFuVXJsKX0+e2xhbmcubmFtZX08L2E+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIC8vIGlmIG5vIGxhbmd1YWdlcyBhcmUgZW5hYmxlZCBiZXNpZGVzIEVuZ2xpc2gsIHJldHVybiBudWxsXG4gICAgaWYgKGVuYWJsZWRMYW5ndWFnZXMubGVuZ3RoIDwgMSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgLy8gR2V0IHRoZSBjdXJyZW50IGxhbmd1YWdlIGZ1bGwgbmFtZSBmb3IgZGlzcGxheSBpbiB0aGUgaGVhZGVyIG5hdlxuICAgIGNvbnN0IGN1cnJlbnRMYW5ndWFnZSA9IGVudi50cmFuc2xhdGlvblxuICAgICAgLmVuYWJsZWRMYW5ndWFnZXMoKVxuICAgICAgLmZpbHRlcigobGFuZykgPT4gbGFuZy50YWcgPT09IHRoaXMucHJvcHMubGFuZ3VhZ2UpXG4gICAgICAubWFwKChsYW5nKSA9PiBsYW5nLm5hbWUpO1xuXG4gICAgLy8gYWRkIENyb3dkaW4gcHJvamVjdCByZWNydWl0aW5nIGxpbmtcbiAgICBpZiAoc2l0ZUNvbmZpZy50cmFuc2xhdGlvblJlY3J1aXRpbmdMaW5rKSB7XG4gICAgICBlbmFibGVkTGFuZ3VhZ2VzLnB1c2goXG4gICAgICAgIDxsaSBrZXk9XCJyZWNydWl0aW5nXCI+XG4gICAgICAgICAgPGFcbiAgICAgICAgICAgIGhyZWY9e3NpdGVDb25maWcudHJhbnNsYXRpb25SZWNydWl0aW5nTGlua31cbiAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICByZWw9XCJub3JlZmVycmVyIG5vb3BlbmVyXCI+XG4gICAgICAgICAgICB7aGVscFRyYW5zbGF0ZVN0cmluZ31cbiAgICAgICAgICA8L2E+XG4gICAgICAgIDwvbGk+LFxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPHNwYW4+XG4gICAgICAgIDxsaSBrZXk9XCJsYW5ndWFnZXNcIj5cbiAgICAgICAgICA8YSBpZD1cImxhbmd1YWdlcy1tZW51XCIgaHJlZj1cIiNcIj5cbiAgICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibGFuZ3VhZ2VzLWljb25cIlxuICAgICAgICAgICAgICBzcmM9e2Ake3RoaXMucHJvcHMuYmFzZVVybH1pbWcvbGFuZ3VhZ2Uuc3ZnYH1cbiAgICAgICAgICAgICAgYWx0PVwiTGFuZ3VhZ2VzIGljb25cIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHtjdXJyZW50TGFuZ3VhZ2V9XG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDxkaXYgaWQ9XCJsYW5ndWFnZXMtZHJvcGRvd25cIiBjbGFzc05hbWU9XCJoaWRlXCI+XG4gICAgICAgICAgICA8dWwgaWQ9XCJsYW5ndWFnZXMtZHJvcGRvd24taXRlbXNcIj57ZW5hYmxlZExhbmd1YWdlc308L3VsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2xpPlxuICAgICAgICA8c2NyaXB0XG4gICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcbiAgICAgICAgICAgIF9faHRtbDogYFxuICAgICAgICBjb25zdCBsYW5ndWFnZXNNZW51SXRlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGFuZ3VhZ2VzLW1lbnVcIik7XG4gICAgICAgIGNvbnN0IGxhbmd1YWdlc0Ryb3BEb3duID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsYW5ndWFnZXMtZHJvcGRvd25cIik7XG4gICAgICAgIGxhbmd1YWdlc01lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICBpZiAobGFuZ3VhZ2VzRHJvcERvd24uY2xhc3NOYW1lID09IFwiaGlkZVwiKSB7XG4gICAgICAgICAgICBsYW5ndWFnZXNEcm9wRG93bi5jbGFzc05hbWUgPSBcInZpc2libGVcIjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGFuZ3VhZ2VzRHJvcERvd24uY2xhc3NOYW1lID0gXCJoaWRlXCI7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIGAsXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvc3Bhbj5cbiAgICApO1xuICB9XG59XG5cbi8vIGhlYWRlciBuYXZiYXIgdXNlZCBieSBhbGwgcGFnZXMgZ2VuZXJhdGVkIHdpdGggZG9jdXNhdXJ1c1xuY2xhc3MgSGVhZGVyTmF2IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgLy8gZnVuY3Rpb24gdG8gZ2VuZXJhdGUgZWFjaCBoZWFkZXIgbGluaywgdXNlZCB3aXRoIGVhY2ggb2JqZWN0IGluIHNpdGVDb25maWcuaGVhZGVyTGlua3NcbiAgbWFrZUxpbmtzKGxpbmspIHtcbiAgICBsZXQgaHJlZjtcbiAgICBsZXQgZG9jSXRlbUFjdGl2ZSA9IGZhbHNlO1xuICAgIGxldCBkb2NHcm91cEFjdGl2ZSA9IGZhbHNlO1xuICAgIGlmIChsaW5rLnNlYXJjaCAmJiB0aGlzLnByb3BzLmNvbmZpZy5hbGdvbGlhKSB7XG4gICAgICAvLyByZXR1cm4gYWxnb2xpYSBzZWFyY2ggYmFyXG4gICAgICBjb25zdCBwbGFjZWhvbGRlciA9IHRoaXMucHJvcHMuY29uZmlnLmFsZ29saWEucGxhY2Vob2xkZXIgfHwgJ1NlYXJjaCc7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8bGkgY2xhc3NOYW1lPVwibmF2U2VhcmNoV3JhcHBlciByZWFjdE5hdlNlYXJjaFdyYXBwZXJcIiBrZXk9XCJzZWFyY2hcIj5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIGlkPVwic2VhcmNoX2lucHV0X3JlYWN0XCJcbiAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cbiAgICAgICAgICAgIHRpdGxlPXtwbGFjZWhvbGRlcn1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2xpPlxuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKGxpbmsubGFuZ3VhZ2VzKSB7XG4gICAgICBpZiAoXG4gICAgICAgIGVudi50cmFuc2xhdGlvbi5lbmFibGVkICYmXG4gICAgICAgIGVudi50cmFuc2xhdGlvbi5lbmFibGVkTGFuZ3VhZ2VzKCkubGVuZ3RoID4gMVxuICAgICAgKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPExhbmd1YWdlRHJvcERvd25cbiAgICAgICAgICAgIGJhc2VVcmw9e3RoaXMucHJvcHMuYmFzZVVybH1cbiAgICAgICAgICAgIGxhbmd1YWdlPXt0aGlzLnByb3BzLmxhbmd1YWdlfVxuICAgICAgICAgICAgY3VycmVudD17dGhpcy5wcm9wcy5jdXJyZW50fVxuICAgICAgICAgICAgY2xlYW5Vcmw9e3RoaXMucHJvcHMuY29uZmlnLmNsZWFuVXJsfVxuICAgICAgICAgICAga2V5PVwibGFuZ3VhZ2Vkcm9wZG93blwiXG4gICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBpZiAobGluay5kb2MpIHtcbiAgICAgIC8vIHNldCBsaW5rIHRvIGRvY3VtZW50IHdpdGggY3VycmVudCBwYWdlJ3MgbGFuZ3VhZ2UvdmVyc2lvblxuICAgICAgY29uc3QgbGFuZ1BhcnQgPSBlbnYudHJhbnNsYXRpb24uZW5hYmxlZFxuICAgICAgICA/IGAke3RoaXMucHJvcHMubGFuZ3VhZ2UgfHwgJ2VuJ30tYFxuICAgICAgICA6ICcnO1xuICAgICAgY29uc3QgdmVyc2lvblBhcnQgPVxuICAgICAgICBlbnYudmVyc2lvbmluZy5lbmFibGVkICYmIHRoaXMucHJvcHMudmVyc2lvbiAhPT0gJ25leHQnXG4gICAgICAgICAgPyBgdmVyc2lvbi0ke3RoaXMucHJvcHMudmVyc2lvbiB8fCBlbnYudmVyc2lvbmluZy5kZWZhdWx0VmVyc2lvbn0tYFxuICAgICAgICAgIDogJyc7XG4gICAgICBjb25zdCBpZCA9IGxhbmdQYXJ0ICsgdmVyc2lvblBhcnQgKyBsaW5rLmRvYztcbiAgICAgIGlmICghTWV0YWRhdGFbaWRdKSB7XG4gICAgICAgIGxldCBlcnJvclN0ciA9IGBQcm9jZXNzaW5nIHRoZSBmb2xsb3dpbmcgXFxgZG9jXFxgIGZpZWxkIGluIFxcYGhlYWRlckxpbmtzXFxgIHdpdGhpbiBcXGBzaXRlQ29uZmlnLmpzXFxgOiAnJHtsaW5rLmRvY30nYDtcbiAgICAgICAgaWYgKGlkID09PSBsaW5rLmRvYykge1xuICAgICAgICAgIGVycm9yU3RyICs9XG4gICAgICAgICAgICAnIEl0IGxvb2tzIGxpa2UgdGhlcmUgaXMgbm8gZG9jdW1lbnQgd2l0aCB0aGF0IGlkIHRoYXQgZXhpc3RzIGluIHlvdXIgZG9jcyBkaXJlY3RvcnkuIFBsZWFzZSBkb3VibGUgY2hlY2sgdGhlIHNwZWxsaW5nIG9mIHlvdXIgYGRvY2AgZmllbGQgYW5kIHRoZSBgaWRgIGZpZWxkcyBvZiB5b3VyIGRvY3MuJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlcnJvclN0ciArPSBgJHtcbiAgICAgICAgICAgICcuIENoZWNrIHRoZSBzcGVsbGluZyBvZiB5b3VyIGBkb2NgIGZpZWxkLiBJZiB0aGF0IHNlZW1zIHNhbmUsIGFuZCBhIGRvY3VtZW50IGluIHlvdXIgZG9jcyBmb2xkZXIgZXhpc3RzIHdpdGggdGhhdCBgaWRgIHZhbHVlLCBcXG50aGVuIHRoaXMgaXMgbGlrZWx5IGEgYnVnIGluIERvY3VzYXVydXMuJyArXG4gICAgICAgICAgICAnIERvY3VzYXVydXMgdGhpbmtzIG9uZSBvciBib3RoIG9mIHRyYW5zbGF0aW9ucyAoY3VycmVudGx5IHNldCB0bzogJ1xuICAgICAgICAgIH0ke2Vudi50cmFuc2xhdGlvbi5lbmFibGVkfSkgb3IgdmVyc2lvbmluZyAoY3VycmVudGx5IHNldCB0bzogJHtcbiAgICAgICAgICAgIGVudi52ZXJzaW9uaW5nLmVuYWJsZWRcbiAgICAgICAgICB9KSBpcyBlbmFibGVkIHdoZW4gbWF5YmUgdGhleSBzaG91bGQgbm90IGJlLiBcXG5UaHVzIG15IGludGVybmFsIGlkIGZvciB0aGlzIGRvYyBpczogJyR7aWR9Jy4gUGxlYXNlIGZpbGUgYW4gaXNzdWUgZm9yIHRoaXMgcG9zc2libGUgYnVnIG9uIEdpdEh1Yi5gO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvclN0cik7XG4gICAgICB9XG4gICAgICBocmVmID1cbiAgICAgICAgdGhpcy5wcm9wcy5jb25maWcuYmFzZVVybCArXG4gICAgICAgIGdldFBhdGgoTWV0YWRhdGFbaWRdLnBlcm1hbGluaywgdGhpcy5wcm9wcy5jb25maWcuY2xlYW5VcmwpO1xuXG4gICAgICBjb25zdCB7aWQ6IGN1cnJlbnRJRCwgc2lkZWJhcn0gPSB0aGlzLnByb3BzLmN1cnJlbnQ7XG4gICAgICBkb2NJdGVtQWN0aXZlID0gY3VycmVudElEICYmIGN1cnJlbnRJRCA9PT0gaWQ7XG4gICAgICBkb2NHcm91cEFjdGl2ZSA9IHNpZGViYXIgJiYgc2lkZWJhciA9PT0gTWV0YWRhdGFbaWRdLnNpZGViYXI7XG4gICAgfSBlbHNlIGlmIChsaW5rLnBhZ2UpIHtcbiAgICAgIC8vIHNldCBsaW5rIHRvIHBhZ2Ugd2l0aCBjdXJyZW50IHBhZ2UncyBsYW5ndWFnZSBpZiBhcHByb3ByaWF0ZVxuICAgICAgY29uc3QgbGFuZ3VhZ2UgPSB0aGlzLnByb3BzLmxhbmd1YWdlIHx8ICcnO1xuICAgICAgaWYgKGZzLmV4aXN0c1N5bmMoYCR7Q1dEfS9wYWdlcy9lbi8ke2xpbmsucGFnZX0uanNgKSkge1xuICAgICAgICBocmVmID1cbiAgICAgICAgICBzaXRlQ29uZmlnLmJhc2VVcmwgK1xuICAgICAgICAgIChlbnYudHJhbnNsYXRpb24uZW5hYmxlZCA/IGAke2xhbmd1YWdlfS9gIDogJycpICtcbiAgICAgICAgICBsaW5rLnBhZ2UgK1xuICAgICAgICAgIGV4dGVuc2lvbjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGhyZWYgPSBzaXRlQ29uZmlnLmJhc2VVcmwgKyBsaW5rLnBhZ2UgKyBleHRlbnNpb247XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChsaW5rLmhyZWYpIHtcbiAgICAgIC8vIHNldCBsaW5rIHRvIHNwZWNpZmllZCBocmVmXG4gICAgICBocmVmID0gbGluay5ocmVmO1xuICAgIH0gZWxzZSBpZiAobGluay5ibG9nKSB7XG4gICAgICAvLyBzZXQgbGluayB0byBibG9nIHVybFxuICAgICAgaHJlZiA9IGAke3RoaXMucHJvcHMuYmFzZVVybH1ibG9nL2A7XG4gICAgfVxuICAgIGNvbnN0IGl0ZW1DbGFzc2VzID0gY2xhc3NOYW1lcyh7XG4gICAgICBzaXRlTmF2R3JvdXBBY3RpdmU6XG4gICAgICAgIChsaW5rLmRvYyAmJiBkb2NHcm91cEFjdGl2ZSkgfHwgKGxpbmsuYmxvZyAmJiB0aGlzLnByb3BzLmN1cnJlbnQuYmxvZyksXG4gICAgICBzaXRlTmF2SXRlbUFjdGl2ZTpcbiAgICAgICAgZG9jSXRlbUFjdGl2ZSB8fFxuICAgICAgICAobGluay5ibG9nICYmIHRoaXMucHJvcHMuY3VycmVudC5ibG9nTGlzdGluZykgfHxcbiAgICAgICAgKGxpbmsucGFnZSAmJiBsaW5rLnBhZ2UgPT09IHRoaXMucHJvcHMuY3VycmVudC5pZCksXG4gICAgfSk7XG4gICAgY29uc3QgaTE4biA9IHRyYW5zbGF0aW9uW3RoaXMucHJvcHMubGFuZ3VhZ2VdO1xuICAgIHJldHVybiAoXG4gICAgICA8bGkga2V5PXtgJHtsaW5rLmxhYmVsfXBhZ2VgfSBjbGFzc05hbWU9e2l0ZW1DbGFzc2VzfT5cbiAgICAgICAgPGEgaHJlZj17aHJlZn0gdGFyZ2V0PXtsaW5rLmV4dGVybmFsID8gJ19ibGFuaycgOiAnX3NlbGYnfT5cbiAgICAgICAgICB7aWR4KGkxOG4sIFsnbG9jYWxpemVkLXN0cmluZ3MnLCAnbGlua3MnLCBsaW5rLmxhYmVsXSkgfHwgbGluay5sYWJlbH1cbiAgICAgICAgPC9hPlxuICAgICAgPC9saT5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyUmVzcG9uc2l2ZU5hdigpIHtcbiAgICBjb25zdCBoZWFkZXJMaW5rcyA9IHRoaXMucHJvcHMuY29uZmlnLmhlYWRlckxpbmtzO1xuICAgIC8vIGFkZCBsYW5ndWFnZSBkcm9wIGRvd24gdG8gZW5kIGlmIGxvY2F0aW9uIG5vdCBzcGVjaWZpZWRcbiAgICBsZXQgbGFuZ3VhZ2VzID0gZmFsc2U7XG4gICAgaGVhZGVyTGlua3MuZm9yRWFjaCgobGluaykgPT4ge1xuICAgICAgaWYgKGxpbmsubGFuZ3VhZ2VzKSB7XG4gICAgICAgIGxhbmd1YWdlcyA9IHRydWU7XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKCFsYW5ndWFnZXMpIHtcbiAgICAgIGhlYWRlckxpbmtzLnB1c2goe2xhbmd1YWdlczogdHJ1ZX0pO1xuICAgIH1cbiAgICBsZXQgc2VhcmNoID0gZmFsc2U7XG4gICAgaGVhZGVyTGlua3MuZm9yRWFjaCgobGluaykgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICBsaW5rLmRvYyAmJlxuICAgICAgICAhZnMuZXhpc3RzU3luYyhgJHtDV0R9Ly4uLyR7cmVhZE1ldGFkYXRhLmdldERvY3NQYXRoKCl9L2ApXG4gICAgICApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgIGBZb3UgaGF2ZSAnZG9jJyBpbiB5b3VyIGhlYWRlckxpbmtzLCBidXQgbm8gJyR7cmVhZE1ldGFkYXRhLmdldERvY3NQYXRoKCl9JyBmb2xkZXIgZXhpc3RzIG9uZSBsZXZlbCB1cCBmcm9tIGAgK1xuICAgICAgICAgICAgYCd3ZWJzaXRlJyBmb2xkZXIuIERpZCB5b3UgcnVuIFxcYGRvY3VzYXVydXMtaW5pdFxcYCBvciBcXGBucG0gcnVuIGV4YW1wbGVzXFxgPyBJZiBzbywgYCArXG4gICAgICAgICAgICBgbWFrZSBzdXJlIHlvdSByZW5hbWUgJ2RvY3MtZXhhbXBsZXMtZnJvbS1kb2N1c2F1cnVzJyB0byAnZG9jcycuYCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGlmIChsaW5rLmJsb2cgJiYgIWZzLmV4aXN0c1N5bmMoYCR7Q1dEfS9ibG9nL2ApKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBcIllvdSBoYXZlICdibG9nJyBpbiB5b3VyIGhlYWRlckxpbmtzLCBidXQgbm8gJ2Jsb2cnIGZvbGRlciBleGlzdHMgaW4geW91ciBcIiArXG4gICAgICAgICAgICBcIid3ZWJzaXRlJyBmb2xkZXIuIERpZCB5b3UgcnVuIGBkb2N1c2F1cnVzLWluaXRgIG9yIGBucG0gcnVuIGV4YW1wbGVzYD8gSWYgc28sIFwiICtcbiAgICAgICAgICAgIFwibWFrZSBzdXJlIHlvdSByZW5hbWUgJ2Jsb2ctZXhhbXBsZXMtZnJvbS1kb2N1c2F1cnVzJyB0byAnYmxvZycuXCIsXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBpZiAobGluay5wYWdlICYmICFmcy5leGlzdHNTeW5jKGAke0NXRH0vcGFnZXMvYCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgIFwiWW91IGhhdmUgJ3BhZ2UnIGluIHlvdXIgaGVhZGVyTGlua3MsIGJ1dCBubyAncGFnZXMnIGZvbGRlciBleGlzdHMgaW4geW91ciBcIiArXG4gICAgICAgICAgICBcIid3ZWJzaXRlJyBmb2xkZXIuXCIsXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICAvLyBXZSB3aWxsIGFkZCBzZWFyY2ggYmFyIHRvIGVuZCBpZiBsb2NhdGlvbiBub3Qgc3BlY2lmaWVkXG4gICAgICBpZiAobGluay5zZWFyY2gpIHtcbiAgICAgICAgc2VhcmNoID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoIXNlYXJjaCAmJiB0aGlzLnByb3BzLmNvbmZpZy5hbGdvbGlhKSB7XG4gICAgICBoZWFkZXJMaW5rcy5wdXNoKHtzZWFyY2g6IHRydWV9KTtcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmF2aWdhdGlvbldyYXBwZXIgbmF2aWdhdGlvblNsaWRlclwiPlxuICAgICAgICA8bmF2IGNsYXNzTmFtZT1cInNsaWRpbmdOYXZcIj5cbiAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwibmF2LXNpdGUgbmF2LXNpdGUtaW50ZXJuYWxcIj5cbiAgICAgICAgICAgIHtoZWFkZXJMaW5rcy5tYXAodGhpcy5tYWtlTGlua3MsIHRoaXMpfVxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvbmF2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBoZWFkZXJDbGFzcyA9IHNpdGVDb25maWcuaGVhZGVySWNvblxuICAgICAgPyAnaGVhZGVyVGl0bGVXaXRoTG9nbydcbiAgICAgIDogJ2hlYWRlclRpdGxlJztcbiAgICBjb25zdCB2ZXJzaW9uc0xpbmsgPVxuICAgICAgdGhpcy5wcm9wcy5iYXNlVXJsICtcbiAgICAgIChlbnYudHJhbnNsYXRpb24uZW5hYmxlZFxuICAgICAgICA/IGAke3RoaXMucHJvcHMubGFuZ3VhZ2V9L3ZlcnNpb25zJHtleHRlbnNpb259YFxuICAgICAgICA6IGB2ZXJzaW9ucyR7ZXh0ZW5zaW9ufWApO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpeGVkSGVhZGVyQ29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyV3JhcHBlciB3cmFwcGVyXCI+XG4gICAgICAgICAgPGhlYWRlcj5cbiAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgIGhyZWY9e1xuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuYmFzZVVybCArXG4gICAgICAgICAgICAgICAgKGVudi50cmFuc2xhdGlvbi5lbmFibGVkID8gdGhpcy5wcm9wcy5sYW5ndWFnZSA6ICcnKVxuICAgICAgICAgICAgICB9PlxuICAgICAgICAgICAgICB7c2l0ZUNvbmZpZy5oZWFkZXJJY29uICYmIChcbiAgICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJsb2dvXCJcbiAgICAgICAgICAgICAgICAgIHNyYz17dGhpcy5wcm9wcy5iYXNlVXJsICsgc2l0ZUNvbmZpZy5oZWFkZXJJY29ufVxuICAgICAgICAgICAgICAgICAgYWx0PXtzaXRlQ29uZmlnLnRpdGxlfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIHshdGhpcy5wcm9wcy5jb25maWcuZGlzYWJsZUhlYWRlclRpdGxlICYmIChcbiAgICAgICAgICAgICAgICA8aDIgY2xhc3NOYW1lPXtoZWFkZXJDbGFzc30+e3RoaXMucHJvcHMudGl0bGV9PC9oMj5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIHtlbnYudmVyc2lvbmluZy5lbmFibGVkICYmIChcbiAgICAgICAgICAgICAgPGEgaHJlZj17dmVyc2lvbnNMaW5rfT5cbiAgICAgICAgICAgICAgICA8aDM+e3RoaXMucHJvcHMudmVyc2lvbiB8fCBlbnYudmVyc2lvbmluZy5kZWZhdWx0VmVyc2lvbn08L2gzPlxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge3RoaXMucmVuZGVyUmVzcG9uc2l2ZU5hdigpfVxuICAgICAgICAgIDwvaGVhZGVyPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuSGVhZGVyTmF2LmRlZmF1bHRQcm9wcyA9IHtcbiAgY3VycmVudDoge30sXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEhlYWRlck5hdjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "HeaderNav.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "React",
        "require",
        "fs",
        "classNames",
        "loadConfig",
        "siteConfig",
        "translation",
        "env",
        "translate",
        "setLanguage",
        "readMetadata",
        "generateMetadataDocs",
        "Metadata",
        "idx",
        "getPath",
        "extension",
        "cleanUrl",
        "LanguageDropDown",
        "props",
        "language",
        "helpTranslateString",
        "docsPart",
        "docsUrl",
        "enabledLanguages",
        "filter",
        "lang",
        "tag",
        "map",
        "href",
        "baseUrl",
        "current",
        "permalink",
        "replace",
        "RegExp",
        "id",
        "name",
        "length",
        "currentLanguage",
        "translationRecruitingLink",
        "push",
        "__html",
        "Component",
        "HeaderNav",
        "link",
        "docItemActive",
        "docGroupActive",
        "search",
        "config",
        "algolia",
        "placeholder",
        "languages",
        "enabled",
        "doc",
        "langPart",
        "versionPart",
        "versioning",
        "version",
        "defaultVersion",
        "errorStr",
        "Error",
        "currentID",
        "sidebar",
        "page",
        "existsSync",
        "blog",
        "itemClasses",
        "siteNavGroupActive",
        "siteNavItemActive",
        "blogListing",
        "i18n",
        "label",
        "external",
        "headerLinks",
        "forEach",
        "getDocsPath",
        "makeLinks",
        "headerClass",
        "headerIcon",
        "versionsLink",
        "title",
        "disableHeaderTitle",
        "renderResponsiveNav",
        "defaultProps",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAMG,UAAU,GAAGH,OAAO,CAAC,qBAAD,CAA1B;;AAEA,IAAMI,UAAU,GAAGD,UAAU,WAAIP,GAAJ,oBAA7B;;AACA,IAAMS,WAAW,GAAGL,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAMM,GAAG,GAAGN,OAAO,CAAC,qBAAD,CAAnB;;AAEA,IAAMO,SAAS,GAAGP,OAAO,CAAC,2BAAD,CAAP,CAAqCO,SAAvD;;AACA,IAAMC,WAAW,GAAGR,OAAO,CAAC,2BAAD,CAAP,CAAqCQ,WAAzD;;AAEA,IAAMC,YAAY,GAAGT,OAAO,CAAC,8BAAD,CAA5B;;AAEAS,YAAY,CAACC,oBAAb;;AACA,IAAMC,QAAQ,GAAGX,OAAO,CAAC,gBAAD,CAAxB;;eACuBA,OAAO,CAAC,aAAD,C;IAAvBY,G,YAAAA,G;IAAKC,O,YAAAA,O;;AAEZ,IAAMC,SAAS,GAAGV,UAAU,CAACW,QAAX,GAAsB,EAAtB,GAA2B,OAA7C,C,CAEA;;IACMC,gB;;;;;;;;;;;;;6BACK;AAAA;;AACPR,MAAAA,WAAW,CAAC,KAAKS,KAAL,CAAWC,QAAX,IAAuB,IAAxB,CAAX;AACA,UAAMC,mBAAmB,GAAGZ,SAAS,CACnC,+DADmC,CAArC;AAGA,UAAMa,QAAQ,aAAMhB,UAAU,CAACiB,OAAX,aAAwBjB,UAAU,CAACiB,OAAnC,SAAgD,EAAtD,CAAd,CALO,CAMP;;AACA,UAAMC,gBAAgB,GAAGhB,GAAG,CAACD,WAAJ,CACtBiB,gBADsB,GAEtBC,MAFsB,CAEf,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,GAAL,KAAa,KAAI,CAACR,KAAL,CAAWC,QAAlC;AAAA,OAFe,EAGtBQ,GAHsB,CAGlB,UAACF,IAAD,EAAU;AACb;AACA,YAAIG,IAAI,GAAGvB,UAAU,CAACwB,OAAX,GAAqBJ,IAAI,CAACC,GAArC;;AACA,YACE,KAAI,CAACR,KAAL,CAAWY,OAAX,IACA,KAAI,CAACZ,KAAL,CAAWY,OAAX,CAAmBC,SADnB,IAEA,KAAI,CAACb,KAAL,CAAWC,QAHb,EAIE;AACAS,UAAAA,IAAI,GACFvB,UAAU,CAACwB,OAAX,GACA,KAAI,CAACX,KAAL,CAAWY,OAAX,CAAmBC,SAAnB,CAA6BC,OAA7B,CACE,IAAIC,MAAJ,YAAeZ,QAAf,SAA0B,KAAI,CAACH,KAAL,CAAWC,QAArC,OADF,YAEKE,QAFL,SAEgBI,IAAI,CAACC,GAFrB,OAFF;AAMD,SAXD,MAWO,IAAI,KAAI,CAACR,KAAL,CAAWY,OAAX,CAAmBI,EAAnB,IAAyB,KAAI,CAAChB,KAAL,CAAWY,OAAX,CAAmBI,EAAnB,KAA0B,OAAvD,EAAgE;AACrEN,UAAAA,IAAI,aAAMvB,UAAU,CAACwB,OAAX,GAAqBJ,IAAI,CAACC,GAAhC,cAAuC,KAAI,CAACR,KAAL,CAAWY,OAAX,CAAmBI,EAA1D,CAAJ;AACD;;AACD,4BACE;AAAI,UAAA,GAAG,EAAET,IAAI,CAACC;AAAd,wBACE;AAAG,UAAA,IAAI,EAAEZ,OAAO,CAACc,IAAD,EAAO,KAAI,CAACV,KAAL,CAAWF,QAAlB;AAAhB,WAA8CS,IAAI,CAACU,IAAnD,CADF,CADF;AAKD,OAzBsB,CAAzB,CAPO,CAiCP;;AACA,UAAIZ,gBAAgB,CAACa,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,eAAO,IAAP;AACD,OApCM,CAsCP;;;AACA,UAAMC,eAAe,GAAG9B,GAAG,CAACD,WAAJ,CACrBiB,gBADqB,GAErBC,MAFqB,CAEd,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,GAAL,KAAa,KAAI,CAACR,KAAL,CAAWC,QAAlC;AAAA,OAFc,EAGrBQ,GAHqB,CAGjB,UAACF,IAAD;AAAA,eAAUA,IAAI,CAACU,IAAf;AAAA,OAHiB,CAAxB,CAvCO,CA4CP;;AACA,UAAI9B,UAAU,CAACiC,yBAAf,EAA0C;AACxCf,QAAAA,gBAAgB,CAACgB,IAAjB,eACE;AAAI,UAAA,GAAG,EAAC;AAAR,wBACE;AACE,UAAA,IAAI,EAAElC,UAAU,CAACiC,yBADnB;AAEE,UAAA,MAAM,EAAC,QAFT;AAGE,UAAA,GAAG,EAAC;AAHN,WAIGlB,mBAJH,CADF,CADF;AAUD;;AAED,0BACE,+CACE;AAAI,QAAA,GAAG,EAAC;AAAR,sBACE;AAAG,QAAA,EAAE,EAAC,gBAAN;AAAuB,QAAA,IAAI,EAAC;AAA5B,sBACE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,GAAG,YAAK,KAAKF,KAAL,CAAWW,OAAhB,qBAFL;AAGE,QAAA,GAAG,EAAC;AAHN,QADF,EAMGQ,eANH,CADF,eASE;AAAK,QAAA,EAAE,EAAC,oBAAR;AAA6B,QAAA,SAAS,EAAC;AAAvC,sBACE;AAAI,QAAA,EAAE,EAAC;AAAP,SAAmCd,gBAAnC,CADF,CATF,CADF,eAcE;AACE,QAAA,uBAAuB,EAAE;AACvBiB,UAAAA,MAAM;AADiB;AAD3B,QAdF,CADF;AAkCD;;;;EA7F4BxC,KAAK,CAACyC,S,GAgGrC;;;IACMC,S;;;;;;;;;;;;;AACJ;8BACUC,I,EAAM;AACd,UAAIf,IAAJ;AACA,UAAIgB,aAAa,GAAG,KAApB;AACA,UAAIC,cAAc,GAAG,KAArB;;AACA,UAAIF,IAAI,CAACG,MAAL,IAAe,KAAK5B,KAAL,CAAW6B,MAAX,CAAkBC,OAArC,EAA8C;AAC5C;AACA,YAAMC,WAAW,GAAG,KAAK/B,KAAL,CAAW6B,MAAX,CAAkBC,OAAlB,CAA0BC,WAA1B,IAAyC,QAA7D;AACA,4BACE;AAAI,UAAA,SAAS,EAAC,wCAAd;AAAuD,UAAA,GAAG,EAAC;AAA3D,wBACE;AACE,UAAA,EAAE,EAAC,oBADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAEA,WAHf;AAIE,UAAA,KAAK,EAAEA;AAJT,UADF,CADF;AAUD;;AACD,UAAIN,IAAI,CAACO,SAAT,EAAoB;AAClB,YACE3C,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,IACA5C,GAAG,CAACD,WAAJ,CAAgBiB,gBAAhB,GAAmCa,MAAnC,GAA4C,CAF9C,EAGE;AACA,8BACE,oBAAC,gBAAD;AACE,YAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWW,OADtB;AAEE,YAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWC,QAFvB;AAGE,YAAA,OAAO,EAAE,KAAKD,KAAL,CAAWY,OAHtB;AAIE,YAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAW6B,MAAX,CAAkB/B,QAJ9B;AAKE,YAAA,GAAG,EAAC;AALN,YADF;AASD;;AACD,eAAO,IAAP;AACD;;AACD,UAAI2B,IAAI,CAACS,GAAT,EAAc;AACZ;AACA,YAAMC,QAAQ,GAAG9C,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,aACV,KAAKjC,KAAL,CAAWC,QAAX,IAAuB,IADb,SAEb,EAFJ;AAGA,YAAMmC,WAAW,GACf/C,GAAG,CAACgD,UAAJ,CAAeJ,OAAf,IAA0B,KAAKjC,KAAL,CAAWsC,OAAX,KAAuB,MAAjD,qBACe,KAAKtC,KAAL,CAAWsC,OAAX,IAAsBjD,GAAG,CAACgD,UAAJ,CAAeE,cADpD,SAEI,EAHN;AAIA,YAAMvB,EAAE,GAAGmB,QAAQ,GAAGC,WAAX,GAAyBX,IAAI,CAACS,GAAzC;;AACA,YAAI,CAACxC,QAAQ,CAACsB,EAAD,CAAb,EAAmB;AACjB,cAAIwB,QAAQ,4FAA2Ff,IAAI,CAACS,GAAhG,MAAZ;;AACA,cAAIlB,EAAE,KAAKS,IAAI,CAACS,GAAhB,EAAqB;AACnBM,YAAAA,QAAQ,IACN,6KADF;AAED,WAHD,MAGO;AACLA,YAAAA,QAAQ,cACN,6KACA,oEAFM,SAGLnD,GAAG,CAACD,WAAJ,CAAgB6C,OAHX,gDAIN5C,GAAG,CAACgD,UAAJ,CAAeJ,OAJT,iGAK+EjB,EAL/E,6DAAR;AAMD;;AACD,gBAAM,IAAIyB,KAAJ,CAAUD,QAAV,CAAN;AACD;;AACD9B,QAAAA,IAAI,GACF,KAAKV,KAAL,CAAW6B,MAAX,CAAkBlB,OAAlB,GACAf,OAAO,CAACF,QAAQ,CAACsB,EAAD,CAAR,CAAaH,SAAd,EAAyB,KAAKb,KAAL,CAAW6B,MAAX,CAAkB/B,QAA3C,CAFT;AAzBY,kCA6BqB,KAAKE,KAAL,CAAWY,OA7BhC;AAAA,YA6BD8B,SA7BC,uBA6BL1B,EA7BK;AAAA,YA6BU2B,OA7BV,uBA6BUA,OA7BV;AA8BZjB,QAAAA,aAAa,GAAGgB,SAAS,IAAIA,SAAS,KAAK1B,EAA3C;AACAW,QAAAA,cAAc,GAAGgB,OAAO,IAAIA,OAAO,KAAKjD,QAAQ,CAACsB,EAAD,CAAR,CAAa2B,OAArD;AACD,OAhCD,MAgCO,IAAIlB,IAAI,CAACmB,IAAT,EAAe;AACpB;AACA,YAAM3C,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,IAAuB,EAAxC;;AACA,YAAIjB,EAAE,CAAC6D,UAAH,WAAiBlE,GAAjB,uBAAiC8C,IAAI,CAACmB,IAAtC,SAAJ,EAAsD;AACpDlC,UAAAA,IAAI,GACFvB,UAAU,CAACwB,OAAX,IACCtB,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,aAA6BhC,QAA7B,SAA2C,EAD5C,IAEAwB,IAAI,CAACmB,IAFL,GAGA/C,SAJF;AAKD,SAND,MAMO;AACLa,UAAAA,IAAI,GAAGvB,UAAU,CAACwB,OAAX,GAAqBc,IAAI,CAACmB,IAA1B,GAAiC/C,SAAxC;AACD;AACF,OAZM,MAYA,IAAI4B,IAAI,CAACf,IAAT,EAAe;AACpB;AACAA,QAAAA,IAAI,GAAGe,IAAI,CAACf,IAAZ;AACD,OAHM,MAGA,IAAIe,IAAI,CAACqB,IAAT,EAAe;AACpB;AACApC,QAAAA,IAAI,aAAM,KAAKV,KAAL,CAAWW,OAAjB,UAAJ;AACD;;AACD,UAAMoC,WAAW,GAAG9D,UAAU,CAAC;AAC7B+D,QAAAA,kBAAkB,EACfvB,IAAI,CAACS,GAAL,IAAYP,cAAb,IAAiCF,IAAI,CAACqB,IAAL,IAAa,KAAK9C,KAAL,CAAWY,OAAX,CAAmBkC,IAFtC;AAG7BG,QAAAA,iBAAiB,EACfvB,aAAa,IACZD,IAAI,CAACqB,IAAL,IAAa,KAAK9C,KAAL,CAAWY,OAAX,CAAmBsC,WADjC,IAECzB,IAAI,CAACmB,IAAL,IAAanB,IAAI,CAACmB,IAAL,KAAc,KAAK5C,KAAL,CAAWY,OAAX,CAAmBI;AANpB,OAAD,CAA9B;AAQA,UAAMmC,IAAI,GAAG/D,WAAW,CAAC,KAAKY,KAAL,CAAWC,QAAZ,CAAxB;AACA,0BACE;AAAI,QAAA,GAAG,YAAKwB,IAAI,CAAC2B,KAAV,SAAP;AAA8B,QAAA,SAAS,EAAEL;AAAzC,sBACE;AAAG,QAAA,IAAI,EAAErC,IAAT;AAAe,QAAA,MAAM,EAAEe,IAAI,CAAC4B,QAAL,GAAgB,QAAhB,GAA2B;AAAlD,SACG1D,GAAG,CAACwD,IAAD,EAAO,CAAC,mBAAD,EAAsB,OAAtB,EAA+B1B,IAAI,CAAC2B,KAApC,CAAP,CAAH,IAAyD3B,IAAI,CAAC2B,KADjE,CADF,CADF;AAOD;;;0CAEqB;AACpB,UAAME,WAAW,GAAG,KAAKtD,KAAL,CAAW6B,MAAX,CAAkByB,WAAtC,CADoB,CAEpB;;AACA,UAAItB,SAAS,GAAG,KAAhB;AACAsB,MAAAA,WAAW,CAACC,OAAZ,CAAoB,UAAC9B,IAAD,EAAU;AAC5B,YAAIA,IAAI,CAACO,SAAT,EAAoB;AAClBA,UAAAA,SAAS,GAAG,IAAZ;AACD;AACF,OAJD;;AAKA,UAAI,CAACA,SAAL,EAAgB;AACdsB,QAAAA,WAAW,CAACjC,IAAZ,CAAiB;AAACW,UAAAA,SAAS,EAAE;AAAZ,SAAjB;AACD;;AACD,UAAIJ,MAAM,GAAG,KAAb;AACA0B,MAAAA,WAAW,CAACC,OAAZ,CAAoB,UAAC9B,IAAD,EAAU;AAC5B,YACEA,IAAI,CAACS,GAAL,IACA,CAAClD,EAAE,CAAC6D,UAAH,WAAiBlE,GAAjB,iBAA2Ba,YAAY,CAACgE,WAAb,EAA3B,OAFH,EAGE;AACA,gBAAM,IAAIf,KAAJ,CACJ,sDAA+CjD,YAAY,CAACgE,WAAb,EAA/C,8LADI,CAAN;AAKD;;AACD,YAAI/B,IAAI,CAACqB,IAAL,IAAa,CAAC9D,EAAE,CAAC6D,UAAH,WAAiBlE,GAAjB,YAAlB,EAAiD;AAC/C,gBAAM,IAAI8D,KAAJ,CACJ,8EACE,gFADF,GAEE,iEAHE,CAAN;AAKD;;AACD,YAAIhB,IAAI,CAACmB,IAAL,IAAa,CAAC5D,EAAE,CAAC6D,UAAH,WAAiBlE,GAAjB,aAAlB,EAAkD;AAChD,gBAAM,IAAI8D,KAAJ,CACJ,+EACE,mBAFE,CAAN;AAID,SAvB2B,CAwB5B;;;AACA,YAAIhB,IAAI,CAACG,MAAT,EAAiB;AACfA,UAAAA,MAAM,GAAG,IAAT;AACD;AACF,OA5BD;;AA6BA,UAAI,CAACA,MAAD,IAAW,KAAK5B,KAAL,CAAW6B,MAAX,CAAkBC,OAAjC,EAA0C;AACxCwB,QAAAA,WAAW,CAACjC,IAAZ,CAAiB;AAACO,UAAAA,MAAM,EAAE;AAAT,SAAjB;AACD;;AACD,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACG0B,WAAW,CAAC7C,GAAZ,CAAgB,KAAKgD,SAArB,EAAgC,IAAhC,CADH,CADF,CADF,CADF;AASD;;;6BAEQ;AACP,UAAMC,WAAW,GAAGvE,UAAU,CAACwE,UAAX,GAChB,qBADgB,GAEhB,aAFJ;AAGA,UAAMC,YAAY,GAChB,KAAK5D,KAAL,CAAWW,OAAX,IACCtB,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,aACM,KAAKjC,KAAL,CAAWC,QADjB,sBACqCJ,SADrC,sBAEcA,SAFd,CADD,CADF;AAKA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,iDACE;AACE,QAAA,IAAI,EACF,KAAKG,KAAL,CAAWW,OAAX,IACCtB,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,GAA0B,KAAKjC,KAAL,CAAWC,QAArC,GAAgD,EADjD;AAFJ,SAKGd,UAAU,CAACwE,UAAX,iBACC;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,GAAG,EAAE,KAAK3D,KAAL,CAAWW,OAAX,GAAqBxB,UAAU,CAACwE,UAFvC;AAGE,QAAA,GAAG,EAAExE,UAAU,CAAC0E;AAHlB,QANJ,EAYG,CAAC,KAAK7D,KAAL,CAAW6B,MAAX,CAAkBiC,kBAAnB,iBACC;AAAI,QAAA,SAAS,EAAEJ;AAAf,SAA6B,KAAK1D,KAAL,CAAW6D,KAAxC,CAbJ,CADF,EAiBGxE,GAAG,CAACgD,UAAJ,CAAeJ,OAAf,iBACC;AAAG,QAAA,IAAI,EAAE2B;AAAT,sBACE,gCAAK,KAAK5D,KAAL,CAAWsC,OAAX,IAAsBjD,GAAG,CAACgD,UAAJ,CAAeE,cAA1C,CADF,CAlBJ,EAsBG,KAAKwB,mBAAL,EAtBH,CADF,CADF,CADF;AA8BD;;;;EAzMqBjF,KAAK,CAACyC,S;;AA4M9BC,SAAS,CAACwC,YAAV,GAAyB;AACvBpD,EAAAA,OAAO,EAAE;AADc,CAAzB;AAIAqD,MAAM,CAACC,OAAP,GAAiB1C,SAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\nav\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\n\nconst React = require('react');\nconst fs = require('fs');\nconst classNames = require('classnames');\n\nconst loadConfig = require('../../server/config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\nconst translation = require('../../server/translation.js');\nconst env = require('../../server/env.js');\n\nconst translate = require('../../server/translate.js').translate;\nconst setLanguage = require('../../server/translate.js').setLanguage;\n\nconst readMetadata = require('../../server/readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\nconst Metadata = require('../metadata.js');\nconst {idx, getPath} = require('../utils.js');\n\nconst extension = siteConfig.cleanUrl ? '' : '.html';\n\n// language dropdown nav item for when translations are enabled\nclass LanguageDropDown extends React.Component {\n  render() {\n    setLanguage(this.props.language || 'en');\n    const helpTranslateString = translate(\n      'Help Translate|recruit community translators for your project',\n    );\n    const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n    // add all enabled languages to dropdown\n    const enabledLanguages = env.translation\n      .enabledLanguages()\n      .filter((lang) => lang.tag !== this.props.language)\n      .map((lang) => {\n        // build the href so that we try to stay in current url but change the language.\n        let href = siteConfig.baseUrl + lang.tag;\n        if (\n          this.props.current &&\n          this.props.current.permalink &&\n          this.props.language\n        ) {\n          href =\n            siteConfig.baseUrl +\n            this.props.current.permalink.replace(\n              new RegExp(`^${docsPart}${this.props.language}/`),\n              `${docsPart}${lang.tag}/`,\n            );\n        } else if (this.props.current.id && this.props.current.id !== 'index') {\n          href = `${siteConfig.baseUrl + lang.tag}/${this.props.current.id}`;\n        }\n        return (\n          <li key={lang.tag}>\n            <a href={getPath(href, this.props.cleanUrl)}>{lang.name}</a>\n          </li>\n        );\n      });\n    // if no languages are enabled besides English, return null\n    if (enabledLanguages.length < 1) {\n      return null;\n    }\n\n    // Get the current language full name for display in the header nav\n    const currentLanguage = env.translation\n      .enabledLanguages()\n      .filter((lang) => lang.tag === this.props.language)\n      .map((lang) => lang.name);\n\n    // add Crowdin project recruiting link\n    if (siteConfig.translationRecruitingLink) {\n      enabledLanguages.push(\n        <li key=\"recruiting\">\n          <a\n            href={siteConfig.translationRecruitingLink}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\">\n            {helpTranslateString}\n          </a>\n        </li>,\n      );\n    }\n\n    return (\n      <span>\n        <li key=\"languages\">\n          <a id=\"languages-menu\" href=\"#\">\n            <img\n              className=\"languages-icon\"\n              src={`${this.props.baseUrl}img/language.svg`}\n              alt=\"Languages icon\"\n            />\n            {currentLanguage}\n          </a>\n          <div id=\"languages-dropdown\" className=\"hide\">\n            <ul id=\"languages-dropdown-items\">{enabledLanguages}</ul>\n          </div>\n        </li>\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n        const languagesMenuItem = document.getElementById(\"languages-menu\");\n        const languagesDropDown = document.getElementById(\"languages-dropdown\");\n        languagesMenuItem.addEventListener(\"click\", function(event) {\n          event.preventDefault();\n\n          if (languagesDropDown.className == \"hide\") {\n            languagesDropDown.className = \"visible\";\n          } else {\n            languagesDropDown.className = \"hide\";\n          }\n        });\n      `,\n          }}\n        />\n      </span>\n    );\n  }\n}\n\n// header navbar used by all pages generated with docusaurus\nclass HeaderNav extends React.Component {\n  // function to generate each header link, used with each object in siteConfig.headerLinks\n  makeLinks(link) {\n    let href;\n    let docItemActive = false;\n    let docGroupActive = false;\n    if (link.search && this.props.config.algolia) {\n      // return algolia search bar\n      const placeholder = this.props.config.algolia.placeholder || 'Search';\n      return (\n        <li className=\"navSearchWrapper reactNavSearchWrapper\" key=\"search\">\n          <input\n            id=\"search_input_react\"\n            type=\"text\"\n            placeholder={placeholder}\n            title={placeholder}\n          />\n        </li>\n      );\n    }\n    if (link.languages) {\n      if (\n        env.translation.enabled &&\n        env.translation.enabledLanguages().length > 1\n      ) {\n        return (\n          <LanguageDropDown\n            baseUrl={this.props.baseUrl}\n            language={this.props.language}\n            current={this.props.current}\n            cleanUrl={this.props.config.cleanUrl}\n            key=\"languagedropdown\"\n          />\n        );\n      }\n      return null;\n    }\n    if (link.doc) {\n      // set link to document with current page's language/version\n      const langPart = env.translation.enabled\n        ? `${this.props.language || 'en'}-`\n        : '';\n      const versionPart =\n        env.versioning.enabled && this.props.version !== 'next'\n          ? `version-${this.props.version || env.versioning.defaultVersion}-`\n          : '';\n      const id = langPart + versionPart + link.doc;\n      if (!Metadata[id]) {\n        let errorStr = `Processing the following \\`doc\\` field in \\`headerLinks\\` within \\`siteConfig.js\\`: '${link.doc}'`;\n        if (id === link.doc) {\n          errorStr +=\n            ' It looks like there is no document with that id that exists in your docs directory. Please double check the spelling of your `doc` field and the `id` fields of your docs.';\n        } else {\n          errorStr += `${\n            '. Check the spelling of your `doc` field. If that seems sane, and a document in your docs folder exists with that `id` value, \\nthen this is likely a bug in Docusaurus.' +\n            ' Docusaurus thinks one or both of translations (currently set to: '\n          }${env.translation.enabled}) or versioning (currently set to: ${\n            env.versioning.enabled\n          }) is enabled when maybe they should not be. \\nThus my internal id for this doc is: '${id}'. Please file an issue for this possible bug on GitHub.`;\n        }\n        throw new Error(errorStr);\n      }\n      href =\n        this.props.config.baseUrl +\n        getPath(Metadata[id].permalink, this.props.config.cleanUrl);\n\n      const {id: currentID, sidebar} = this.props.current;\n      docItemActive = currentID && currentID === id;\n      docGroupActive = sidebar && sidebar === Metadata[id].sidebar;\n    } else if (link.page) {\n      // set link to page with current page's language if appropriate\n      const language = this.props.language || '';\n      if (fs.existsSync(`${CWD}/pages/en/${link.page}.js`)) {\n        href =\n          siteConfig.baseUrl +\n          (env.translation.enabled ? `${language}/` : '') +\n          link.page +\n          extension;\n      } else {\n        href = siteConfig.baseUrl + link.page + extension;\n      }\n    } else if (link.href) {\n      // set link to specified href\n      href = link.href;\n    } else if (link.blog) {\n      // set link to blog url\n      href = `${this.props.baseUrl}blog/`;\n    }\n    const itemClasses = classNames({\n      siteNavGroupActive:\n        (link.doc && docGroupActive) || (link.blog && this.props.current.blog),\n      siteNavItemActive:\n        docItemActive ||\n        (link.blog && this.props.current.blogListing) ||\n        (link.page && link.page === this.props.current.id),\n    });\n    const i18n = translation[this.props.language];\n    return (\n      <li key={`${link.label}page`} className={itemClasses}>\n        <a href={href} target={link.external ? '_blank' : '_self'}>\n          {idx(i18n, ['localized-strings', 'links', link.label]) || link.label}\n        </a>\n      </li>\n    );\n  }\n\n  renderResponsiveNav() {\n    const headerLinks = this.props.config.headerLinks;\n    // add language drop down to end if location not specified\n    let languages = false;\n    headerLinks.forEach((link) => {\n      if (link.languages) {\n        languages = true;\n      }\n    });\n    if (!languages) {\n      headerLinks.push({languages: true});\n    }\n    let search = false;\n    headerLinks.forEach((link) => {\n      if (\n        link.doc &&\n        !fs.existsSync(`${CWD}/../${readMetadata.getDocsPath()}/`)\n      ) {\n        throw new Error(\n          `You have 'doc' in your headerLinks, but no '${readMetadata.getDocsPath()}' folder exists one level up from ` +\n            `'website' folder. Did you run \\`docusaurus-init\\` or \\`npm run examples\\`? If so, ` +\n            `make sure you rename 'docs-examples-from-docusaurus' to 'docs'.`,\n        );\n      }\n      if (link.blog && !fs.existsSync(`${CWD}/blog/`)) {\n        throw new Error(\n          \"You have 'blog' in your headerLinks, but no 'blog' folder exists in your \" +\n            \"'website' folder. Did you run `docusaurus-init` or `npm run examples`? If so, \" +\n            \"make sure you rename 'blog-examples-from-docusaurus' to 'blog'.\",\n        );\n      }\n      if (link.page && !fs.existsSync(`${CWD}/pages/`)) {\n        throw new Error(\n          \"You have 'page' in your headerLinks, but no 'pages' folder exists in your \" +\n            \"'website' folder.\",\n        );\n      }\n      // We will add search bar to end if location not specified\n      if (link.search) {\n        search = true;\n      }\n    });\n    if (!search && this.props.config.algolia) {\n      headerLinks.push({search: true});\n    }\n    return (\n      <div className=\"navigationWrapper navigationSlider\">\n        <nav className=\"slidingNav\">\n          <ul className=\"nav-site nav-site-internal\">\n            {headerLinks.map(this.makeLinks, this)}\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n\n  render() {\n    const headerClass = siteConfig.headerIcon\n      ? 'headerTitleWithLogo'\n      : 'headerTitle';\n    const versionsLink =\n      this.props.baseUrl +\n      (env.translation.enabled\n        ? `${this.props.language}/versions${extension}`\n        : `versions${extension}`);\n    return (\n      <div className=\"fixedHeaderContainer\">\n        <div className=\"headerWrapper wrapper\">\n          <header>\n            <a\n              href={\n                this.props.baseUrl +\n                (env.translation.enabled ? this.props.language : '')\n              }>\n              {siteConfig.headerIcon && (\n                <img\n                  className=\"logo\"\n                  src={this.props.baseUrl + siteConfig.headerIcon}\n                  alt={siteConfig.title}\n                />\n              )}\n              {!this.props.config.disableHeaderTitle && (\n                <h2 className={headerClass}>{this.props.title}</h2>\n              )}\n            </a>\n            {env.versioning.enabled && (\n              <a href={versionsLink}>\n                <h3>{this.props.version || env.versioning.defaultVersion}</h3>\n              </a>\n            )}\n            {this.renderResponsiveNav()}\n          </header>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeaderNav.defaultProps = {\n  current: {},\n};\n\nmodule.exports = HeaderNav;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\config.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\config.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath) {\n  var deleteCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n\n  var config = {};\n\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n  /* Fill default value */\n\n\n  var defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs'\n  };\n  Object.keys(defaultConfig).forEach(function (field) {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n  return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9hZENvbmZpZyIsImNvbmZpZ1BhdGgiLCJkZWxldGVDYWNoZSIsImNhY2hlIiwiY29uZmlnIiwiZXhpc3RzU3luYyIsImRlZmF1bHRDb25maWciLCJjdXN0b21Eb2NzUGF0aCIsImRvY3NVcmwiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImZpZWxkIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsVUFBVCxDQUFvQkMsVUFBcEIsRUFBb0Q7QUFBQSxNQUFwQkMsV0FBb0IsdUVBQU4sSUFBTTs7QUFDbkUsTUFBSUEsV0FBSixFQUFpQjtBQUNmLFdBQU9MLE9BQU8sQ0FBQ00sS0FBUixDQUFjRixVQUFkLENBQVA7QUFDRDs7QUFDRCxNQUFJRyxNQUFNLEdBQUcsRUFBYjs7QUFDQSxNQUFJUixFQUFFLENBQUNTLFVBQUgsQ0FBY0osVUFBZCxDQUFKLEVBQStCO0FBQzdCRyxJQUFBQSxNQUFNLEdBQUdQLE9BQU8sQ0FBQ0ksVUFBRCxDQUFoQixDQUQ2QixDQUNDO0FBQy9CO0FBRUQ7OztBQUNBLE1BQU1LLGFBQWEsR0FBRztBQUNwQkMsSUFBQUEsY0FBYyxFQUFFLE1BREk7QUFFcEJDLElBQUFBLE9BQU8sRUFBRTtBQUZXLEdBQXRCO0FBSUFDLEVBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixhQUFaLEVBQTJCSyxPQUEzQixDQUFtQyxVQUFDQyxLQUFELEVBQVc7QUFDNUMsUUFBSSxFQUFFQSxLQUFLLElBQUlSLE1BQVgsQ0FBSixFQUF3QjtBQUN0QkEsTUFBQUEsTUFBTSxDQUFDUSxLQUFELENBQU4sR0FBZ0JOLGFBQWEsQ0FBQ00sS0FBRCxDQUE3QjtBQUNEO0FBQ0YsR0FKRDtBQU1BLFNBQU9SLE1BQVA7QUFDRCxDQXJCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsb2FkQ29uZmlnKGNvbmZpZ1BhdGgsIGRlbGV0ZUNhY2hlID0gdHJ1ZSkge1xuICBpZiAoZGVsZXRlQ2FjaGUpIHtcbiAgICBkZWxldGUgcmVxdWlyZS5jYWNoZVtjb25maWdQYXRoXTtcbiAgfVxuICBsZXQgY29uZmlnID0ge307XG4gIGlmIChmcy5leGlzdHNTeW5jKGNvbmZpZ1BhdGgpKSB7XG4gICAgY29uZmlnID0gcmVxdWlyZShjb25maWdQYXRoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICB9XG5cbiAgLyogRmlsbCBkZWZhdWx0IHZhbHVlICovXG4gIGNvbnN0IGRlZmF1bHRDb25maWcgPSB7XG4gICAgY3VzdG9tRG9jc1BhdGg6ICdkb2NzJyxcbiAgICBkb2NzVXJsOiAnZG9jcycsXG4gIH07XG4gIE9iamVjdC5rZXlzKGRlZmF1bHRDb25maWcpLmZvckVhY2goKGZpZWxkKSA9PiB7XG4gICAgaWYgKCEoZmllbGQgaW4gY29uZmlnKSkge1xuICAgICAgY29uZmlnW2ZpZWxkXSA9IGRlZmF1bHRDb25maWdbZmllbGRdO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "loadConfig",
        "configPath",
        "deleteCache",
        "cache",
        "config",
        "existsSync",
        "defaultConfig",
        "customDocsPath",
        "docsUrl",
        "Object",
        "keys",
        "forEach",
        "field"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,UAApB,EAAoD;AAAA,MAApBC,WAAoB,uEAAN,IAAM;;AACnE,MAAIA,WAAJ,EAAiB;AACf,WAAOL,OAAO,CAACM,KAAR,CAAcF,UAAd,CAAP;AACD;;AACD,MAAIG,MAAM,GAAG,EAAb;;AACA,MAAIR,EAAE,CAACS,UAAH,CAAcJ,UAAd,CAAJ,EAA+B;AAC7BG,IAAAA,MAAM,GAAGP,OAAO,CAACI,UAAD,CAAhB,CAD6B,CACC;AAC/B;AAED;;;AACA,MAAMK,aAAa,GAAG;AACpBC,IAAAA,cAAc,EAAE,MADI;AAEpBC,IAAAA,OAAO,EAAE;AAFW,GAAtB;AAIAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC,UAACC,KAAD,EAAW;AAC5C,QAAI,EAAEA,KAAK,IAAIR,MAAX,CAAJ,EAAwB;AACtBA,MAAAA,MAAM,CAACQ,KAAD,CAAN,GAAgBN,aAAa,CAACM,KAAD,CAA7B;AACD;AACF,GAJD;AAMA,SAAOR,MAAP;AACD,CArBD",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath, deleteCache = true) {\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n  let config = {};\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n\n  /* Fill default value */\n  const defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs',\n  };\n  Object.keys(defaultConfig).forEach((field) => {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n\n  return config;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\readMetadata.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\readMetadata.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\readMetadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\readMetadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "readMetadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar program = require('commander');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar blog = require('./blog.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar versionFallback = require('./versionFallback.js');\n\nvar utils = require('./utils.js');\n\nvar docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : ''); // Get a list of all IDs that have been deleted in any version.\n// We will assume these should not be in the current/next version.\n\nvar allDeletedIds = new Set();\n\nif (siteConfig.deletedDocs) {\n  Object.values(siteConfig.deletedDocs).forEach(function (idList) {\n    idList.forEach(function (id) {\n      return allDeletedIds.add(id);\n    });\n  });\n}\n\nvar SupportedHeaderFields = new Set(['id', 'title', 'author', 'authorURL', 'authorFBID', 'sidebar_label', 'original_id', 'hide_title', 'layout', 'custom_edit_url', 'description']);\nvar allSidebars;\n\nif (fs.existsSync(\"\".concat(CWD, \"/sidebars.json\"))) {\n  allSidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n} else {\n  allSidebars = {};\n} // Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\n\n\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n} // returns map from id to object containing sidebar ordering info\n\n\nfunction readSidebar() {\n  var sidebars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  Object.assign(sidebars, versionFallback.sidebarData());\n  var items = {};\n  Object.keys(sidebars).forEach(function (sidebar) {\n    var categories = sidebars[sidebar];\n    var sidebarItems = [];\n    Object.keys(categories).forEach(function (category) {\n      var categoryItems = categories[category];\n      categoryItems.forEach(function (categoryItem) {\n        if (_typeof(categoryItem) === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(function (subcategoryItem) {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category: category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1\n                });\n              });\n              return;\n\n            default:\n              return;\n          }\n        } // Is a regular id value.\n\n\n        sidebarItems.push({\n          id: categoryItem,\n          category: category,\n          subcategory: null,\n          order: sidebarItems.length + 1\n        });\n      });\n    });\n\n    for (var i = 0; i < sidebarItems.length; i++) {\n      var item = sidebarItems[i];\n      var previous = null;\n      var next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous: previous,\n        next: next,\n        sidebar: sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order\n      };\n    }\n  });\n  return items;\n} // process the metadata for a document found in either 'docs' or 'translated_docs'\n\n\nfunction processMetadata(file, refDir) {\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var language = utils.getLanguage(file, refDir) || 'en';\n  var metadata = {};\n  Object.keys(result.metadata).forEach(function (fieldName) {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(\"Header field \\\"\".concat(fieldName, \"\\\" in \").concat(file, \" is not supported.\"));\n    }\n  });\n  var rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  } // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n\n\n  var subDir = utils.getSubDir(file, refDir);\n\n  if (subDir) {\n    metadata.id = \"\".concat(subDir, \"/\").concat(metadata.id);\n  } // Example: `docs/projectA/test.md` source is `projectA/test.md`\n\n\n  metadata.source = subDir ? \"\".concat(subDir, \"/\").concat(path.basename(file)) : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  var langPart = env.translation.enabled || siteConfig.useEnglishUrl ? \"\".concat(language, \"/\") : '';\n  var versionPart = '';\n\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = \"\".concat(docsPart).concat(langPart).concat(versionPart).concat(metadata.id, \".html\"); // change ids previous, next\n\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n  var items = readSidebar(allSidebars);\n  var id = metadata.localized_id;\n  var item = items[id];\n\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.next;\n    }\n\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.previous;\n    }\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: rawContent\n  };\n} // process metadata for all docs and save into core/metadata.js\n\n\nfunction generateMetadataDocs() {\n  var order;\n\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n    return language.tag;\n  });\n  var metadatas = {};\n  var defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    var docsDir = path.join(CWD, '../', getDocsPath());\n    var files = glob.sync(\"\".concat(docsDir, \"/**\"));\n    files.forEach(function (file) {\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n\n        if (allDeletedIds.has(metadata.id) || metadata.original_id && allDeletedIds.has(metadata.original_id)) {\n          return;\n        }\n\n        metadatas[metadata.id] = metadata; // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n\n        enabledLanguages.filter(function (currentLanguage) {\n          return currentLanguage !== 'en';\n        }).forEach(function (currentLanguage) {\n          var baseMetadata = Object.assign({}, metadata);\n          baseMetadata.id = baseMetadata.id.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n\n          if (baseMetadata.permalink) {\n            baseMetadata.permalink = baseMetadata.permalink.toString().replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(currentLanguage, \"/\"));\n          }\n\n          if (baseMetadata.next) {\n            baseMetadata.next = baseMetadata.next.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          if (baseMetadata.previous) {\n            baseMetadata.previous = baseMetadata.previous.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          baseMetadata.language = currentLanguage;\n          defaultMetadatas[baseMetadata.id] = baseMetadata;\n        });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    }); // metadata for non-english docs\n\n    var translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(\"\".concat(CWD, \"/translated_docs/**\"));\n    files.forEach(function (file) {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, translatedDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n\n        if (allDeletedIds.has(metadata.id) || metadata.original_id && allDeletedIds.has(metadata.original_id)) {\n          return;\n        }\n\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  } // metadata for versioned docs\n\n\n  var versionData = versionFallback.docData();\n  versionData.forEach(function (metadata) {\n    var id = metadata.localized_id;\n\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.next = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].next;\n      }\n\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.previous = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].previous;\n      }\n    }\n\n    metadatas[metadata.id] = metadata;\n  }); // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n\n  Object.keys(metadatas).forEach(function (metadata) {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title = metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title = metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/metadata.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(metadatas, null, 2), \";\\n\"));\n} // process metadata for blog posts and save into core/MetadataBlog.js\n\n\nfunction generateMetadataBlog() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : siteConfig;\n  var metadatas = [];\n  var files = glob.sync(\"\".concat(CWD, \"/blog/**/*.*\"));\n  files.sort().reverse().forEach(function (file) {\n    var extension = path.extname(file);\n\n    if (extension !== '.md' && extension !== '.markdown') {\n      return;\n    }\n\n    var metadata = blog.getMetadata(file, config); // Extract, YYYY, MM, DD from the file name\n\n    var filePathDateArr = path.basename(file).split('-');\n    metadata.date = new Date(\"\".concat(filePathDateArr[0], \"-\").concat(filePathDateArr[1], \"-\").concat(filePathDateArr[2], \"T06:00:00.000Z\")); // allow easier sorting of blog by providing seconds since epoch\n\n    metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n    metadatas.push(metadata);\n  });\n  var sortedMetadatas = metadatas.sort(function (a, b) {\n    return parseInt(b.seconds, 10) - parseInt(a.seconds, 10);\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/MetadataBlog.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(sortedMetadatas, null, 2), \";\\n\"));\n}\n\nmodule.exports = {\n  getDocsPath: getDocsPath,\n  readSidebar: readSidebar,\n  processMetadata: processMetadata,\n  generateMetadataDocs: generateMetadataDocs,\n  generateMetadataBlog: generateMetadataBlog\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRNZXRhZGF0YS5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwicGF0aCIsInJlcXVpcmUiLCJmcyIsImdsb2IiLCJwcm9ncmFtIiwibWV0YWRhdGFVdGlscyIsImVudiIsImJsb2ciLCJsb2FkQ29uZmlnIiwic2l0ZUNvbmZpZyIsInZlcnNpb25GYWxsYmFjayIsInV0aWxzIiwiZG9jc1BhcnQiLCJkb2NzVXJsIiwiYWxsRGVsZXRlZElkcyIsIlNldCIsImRlbGV0ZWREb2NzIiwiT2JqZWN0IiwidmFsdWVzIiwiZm9yRWFjaCIsImlkTGlzdCIsImlkIiwiYWRkIiwiU3VwcG9ydGVkSGVhZGVyRmllbGRzIiwiYWxsU2lkZWJhcnMiLCJleGlzdHNTeW5jIiwiZ2V0RG9jc1BhdGgiLCJjdXN0b21Eb2NzUGF0aCIsInNob3VsZEdlbmVyYXRlTmV4dFJlbGVhc2VEb2NzIiwidmVyc2lvbmluZyIsImVuYWJsZWQiLCJza2lwTmV4dFJlbGVhc2UiLCJyZWFkU2lkZWJhciIsInNpZGViYXJzIiwiYXNzaWduIiwic2lkZWJhckRhdGEiLCJpdGVtcyIsImtleXMiLCJzaWRlYmFyIiwiY2F0ZWdvcmllcyIsInNpZGViYXJJdGVtcyIsImNhdGVnb3J5IiwiY2F0ZWdvcnlJdGVtcyIsImNhdGVnb3J5SXRlbSIsInR5cGUiLCJpZHMiLCJzdWJjYXRlZ29yeUl0ZW0iLCJwdXNoIiwic3ViY2F0ZWdvcnkiLCJsYWJlbCIsIm9yZGVyIiwibGVuZ3RoIiwiaSIsIml0ZW0iLCJwcmV2aW91cyIsIm5leHQiLCJwcm9jZXNzTWV0YWRhdGEiLCJmaWxlIiwicmVmRGlyIiwicmVzdWx0IiwiZXh0cmFjdE1ldGFkYXRhIiwicmVhZEZpbGVTeW5jIiwibGFuZ3VhZ2UiLCJnZXRMYW5ndWFnZSIsIm1ldGFkYXRhIiwiZmllbGROYW1lIiwiaGFzIiwiY29uc29sZSIsIndhcm4iLCJyYXdDb250ZW50IiwicGFyc2UiLCJuYW1lIiwiaW5jbHVkZXMiLCJFcnJvciIsInN1YkRpciIsImdldFN1YkRpciIsInNvdXJjZSIsImJhc2VuYW1lIiwidGl0bGUiLCJsYW5nUGFydCIsInRyYW5zbGF0aW9uIiwidXNlRW5nbGlzaFVybCIsInZlcnNpb25QYXJ0IiwidmVyc2lvbiIsInBlcm1hbGluayIsImxvY2FsaXplZF9pZCIsIm5leHRfaWQiLCJwcmV2aW91c19pZCIsImdlbmVyYXRlTWV0YWRhdGFEb2NzIiwiZSIsImVycm9yIiwiZXhpdCIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJ0YWciLCJtZXRhZGF0YXMiLCJkZWZhdWx0TWV0YWRhdGFzIiwiZG9jc0RpciIsImpvaW4iLCJmaWxlcyIsInN5bmMiLCJleHRlbnNpb24iLCJleHRuYW1lIiwicmVzIiwib3JpZ2luYWxfaWQiLCJmaWx0ZXIiLCJjdXJyZW50TGFuZ3VhZ2UiLCJiYXNlTWV0YWRhdGEiLCJ0b1N0cmluZyIsInJlcGxhY2UiLCJSZWdFeHAiLCJ0cmFuc2xhdGVkRGlyIiwidmVyc2lvbkRhdGEiLCJkb2NEYXRhIiwicHJldmlvdXNfdGl0bGUiLCJuZXh0X3RpdGxlIiwid3JpdGVGaWxlU3luYyIsIl9fZGlybmFtZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJnZW5lcmF0ZU1ldGFkYXRhQmxvZyIsImNvbmZpZyIsInNvcnQiLCJyZXZlcnNlIiwiZ2V0TWV0YWRhdGEiLCJmaWxlUGF0aERhdGVBcnIiLCJzcGxpdCIsImRhdGUiLCJEYXRlIiwic2Vjb25kcyIsIk1hdGgiLCJyb3VuZCIsImdldFRpbWUiLCJzb3J0ZWRNZXRhZGF0YXMiLCJhIiwiYiIsInBhcnNlSW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFaOztBQUVBLElBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxJQUFNRSxJQUFJLEdB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Q0FBQyxDQUFELENBRGhELG9CQUFoQixDQVJpQixDQVdqQjs7QUFDQTdELElBQUFBLFFBQVEsQ0FBQ2lFLE9BQVQsR0FBbUJDLElBQUksQ0FBQ0MsS0FBTCxDQUFXbkUsUUFBUSxDQUFDK0QsSUFBVCxDQUFjSyxPQUFkLEtBQTBCLElBQXJDLENBQW5CO0FBRUFyQyxJQUFBQSxTQUFTLENBQUNoRCxJQUFWLENBQWVpQixRQUFmO0FBQ0QsR0FsQkg7QUFvQkEsTUFBTXFFLGVBQWUsR0FBR3RDLFNBQVMsQ0FBQzJCLElBQVYsQ0FDdEIsVUFBQ1ksQ0FBRCxFQUFJQyxDQUFKO0FBQUEsV0FBVUMsUUFBUSxDQUFDRCxDQUFDLENBQUNOLE9BQUgsRUFBWSxFQUFaLENBQVIsR0FBMEJPLFFBQVEsQ0FBQ0YsQ0FBQyxDQUFDTCxPQUFILEVBQVksRUFBWixDQUE1QztBQUFBLEdBRHNCLENBQXhCO0FBSUEvSCxFQUFBQSxFQUFFLENBQUNrSCxhQUFILENBQ0VwSCxJQUFJLENBQUNrRyxJQUFMLENBQVVtQixTQUFWLEVBQXFCLDBCQUFyQixDQURGLFlBR0ksVUFDQSxNQURBLEdBRUEsYUFGQSxHQUVnQjtBQUNoQixTQUhBLEdBSUEsbUJBUEosU0FRS0MsSUFBSSxDQUFDQyxTQUFMLENBQWVjLGVBQWYsRUFBZ0MsSUFBaEMsRUFBc0MsQ0FBdEMsQ0FSTDtBQVVEOztBQUVESSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmhILEVBQUFBLFdBQVcsRUFBWEEsV0FEZTtBQUVmTSxFQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZndCLEVBQUFBLGVBQWUsRUFBZkEsZUFIZTtBQUlmZ0MsRUFBQUEsb0JBQW9CLEVBQXBCQSxvQkFKZTtBQUtmZ0MsRUFBQUEsb0JBQW9CLEVBQXBCQTtBQUxlLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXERlc2t0b3BcXEJsb2dcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxzZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG5jb25zdCBwcm9ncmFtID0gcmVxdWlyZSgnY29tbWFuZGVyJyk7XG5cbmNvbnN0IG1ldGFkYXRhVXRpbHMgPSByZXF1aXJlKCcuL21ldGFkYXRhVXRpbHMnKTtcblxuY29uc3QgZW52ID0gcmVxdWlyZSgnLi9lbnYuanMnKTtcbmNvbnN0IGJsb2cgPSByZXF1aXJlKCcuL2Jsb2cuanMnKTtcblxuY29uc3QgbG9hZENvbmZpZyA9IHJlcXVpcmUoJy4vY29uZmlnJyk7XG5cbmNvbnN0IHNpdGVDb25maWcgPSBsb2FkQ29uZmlnKGAke0NXRH0vc2l0ZUNvbmZpZy5qc2ApO1xuY29uc3QgdmVyc2lvbkZhbGxiYWNrID0gcmVxdWlyZSgnLi92ZXJzaW9uRmFsbGJhY2suanMnKTtcbmNvbnN0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscy5qcycpO1xuXG5jb25zdCBkb2NzUGFydCA9IGAke3NpdGVDb25maWcuZG9jc1VybCA/IGAke3NpdGVDb25maWcuZG9jc1VybH0vYCA6ICcnfWA7XG5cbi8vIEdldCBhIGxpc3Qgb2YgYWxsIElEcyB0aGF0IGhhdmUgYmVlbiBkZWxldGVkIGluIGFueSB2ZXJzaW9uLlxuLy8gV2Ugd2lsbCBhc3N1bWUgdGhlc2Ugc2hvdWxkIG5vdCBiZSBpbiB0aGUgY3VycmVudC9uZXh0IHZlcnNpb24uXG5jb25zdCBhbGxEZWxldGVkSWRzID0gbmV3IFNldCgpO1xuaWYgKHNpdGVDb25maWcuZGVsZXRlZERvY3MpIHtcbiAgT2JqZWN0LnZhbHVlcyhzaXRlQ29uZmlnLmRlbGV0ZWREb2NzKS5mb3JFYWNoKChpZExpc3QpID0+IHtcbiAgICBpZExpc3QuZm9yRWFjaCgoaWQpID0+IGFsbERlbGV0ZWRJZHMuYWRkKGlkKSk7XG4gIH0pO1xufVxuXG5jb25zdCBTdXBwb3J0ZWRIZWFkZXJGaWVsZHMgPSBuZXcgU2V0KFtcbiAgJ2lkJyxcbiAgJ3RpdGxlJyxcbiAgJ2F1dGhvcicsXG4gICdhdXRob3JVUkwnLFxuICAnYXV0aG9yRkJJRCcsXG4gICdzaWRlYmFyX2xhYmVsJyxcbiAgJ29yaWdpbmFsX2lkJyxcbiAgJ2hpZGVfdGl0bGUnLFxuICAnbGF5b3V0JyxcbiAgJ2N1c3RvbV9lZGl0X3VybCcsXG4gICdkZXNjcmlwdGlvbicsXG5dKTtcblxubGV0IGFsbFNpZGViYXJzO1xuaWYgKGZzLmV4aXN0c1N5bmMoYCR7Q1dEfS9zaWRlYmFycy5qc29uYCkpIHtcbiAgYWxsU2lkZWJhcnMgPSByZXF1aXJlKGAke0NXRH0vc2lkZWJhcnMuanNvbmApO1xufSBlbHNlIHtcbiAgYWxsU2lkZWJhcnMgPSB7fTtcbn1cblxuLy8gQ2FuIGhhdmUgYSBjdXN0b20gZG9jcyBwYXRoLiBUb3AgbGV2ZWwgZm9sZGVyIHN0aWxsIG5lZWRzIHRvIGJlIGluIGRpcmVjdG9yeVxuLy8gYXQgdGhlIHNhbWUgbGV2ZWwgYXMgYHdlYnNpdGVgLCBub3QgaW5zaWRlIGB3ZWJzaXRlYC5cbi8vICAgZS5nLiwgZG9jcy93aGVyZURvY3NSZWFsbHlFeGlzdFxuLy8gICAgICAgICB3ZWJzaXRlLWRvY3MvXG4vLyBBbGwgLm1kIGRvY3Mgc3RpbGwgKGN1cnJlbnRseSkgbXVzdCBiZSBpbiBvbmUgZmxhdCBkaXJlY3RvcnkgaGllcmFyY2h5LlxuLy8gICBlLmcuLCBkb2NzL3doZXJlRG9jc1JlYWxseUV4aXN0LyoubWQgKGFsbCAubWQgZmlsZXMgaW4gdGhpcyBkaXIpXG5mdW5jdGlvbiBnZXREb2NzUGF0aCgpIHtcbiAgcmV0dXJuIHNpdGVDb25maWcuY3VzdG9tRG9jc1BhdGggPyBzaXRlQ29uZmlnLmN1c3RvbURvY3NQYXRoIDogJ2RvY3MnO1xufVxuXG5mdW5jdGlvbiBzaG91bGRHZW5lcmF0ZU5leHRSZWxlYXNlRG9jcygpIHtcbiAgcmV0dXJuICEoZW52LnZlcnNpb25pbmcuZW5hYmxlZCAmJiBwcm9ncmFtLnNraXBOZXh0UmVsZWFzZSk7XG59XG5cbi8vIHJldHVybnMgbWFwIGZyb20gaWQgdG8gb2JqZWN0IGNvbnRhaW5pbmcgc2lkZWJhciBvcmRlcmluZyBpbmZvXG5mdW5jdGlvbiByZWFkU2lkZWJhcihzaWRlYmFycyA9IHt9KSB7XG4gIE9iamVjdC5hc3NpZ24oc2lkZWJhcnMsIHZlcnNpb25GYWxsYmFjay5zaWRlYmFyRGF0YSgpKTtcblxuICBjb25zdCBpdGVtcyA9IHt9O1xuXG4gIE9iamVjdC5rZXlzKHNpZGViYXJzKS5mb3JFYWNoKChzaWRlYmFyKSA9PiB7XG4gICAgY29uc3QgY2F0ZWdvcmllcyA9IHNpZGViYXJzW3NpZGViYXJdO1xuICAgIGNvbnN0IHNpZGViYXJJdGVtcyA9IFtdO1xuXG4gICAgT2JqZWN0LmtleXMoY2F0ZWdvcmllcykuZm9yRWFjaCgoY2F0ZWdvcnkpID0+IHtcbiAgICAgIGNvbnN0IGNhdGVnb3J5SXRlbXMgPSBjYXRlZ29yaWVzW2NhdGVnb3J5XTtcbiAgICAgIGNhdGVnb3J5SXRlbXMuZm9yRWFjaCgoY2F0ZWdvcnlJdGVtKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgY2F0ZWdvcnlJdGVtID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgIHN3aXRjaCAoY2F0ZWdvcnlJdGVtLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgJ3N1YmNhdGVnb3J5JzpcbiAgICAgICAgICAgICAgY2F0ZWdvcnlJdGVtLmlkcy5mb3JFYWNoKChzdWJjYXRlZ29yeUl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBzaWRlYmFySXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICBpZDogc3ViY2F0ZWdvcnlJdGVtLFxuICAgICAgICAgICAgICAgICAgY2F0ZWdvcnksXG4gICAgICAgICAgICAgICAgICBzdWJjYXRlZ29yeTogY2F0ZWdvcnlJdGVtLmxhYmVsLFxuICAgICAgICAgICAgICAgICAgb3JkZXI6IHNpZGViYXJJdGVtcy5sZW5ndGggKyAxLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIElzIGEgcmVndWxhciBpZCB2YWx1ZS5cbiAgICAgICAgc2lkZWJhckl0ZW1zLnB1c2goe1xuICAgICAgICAgIGlkOiBjYXRlZ29yeUl0ZW0sXG4gICAgICAgICAgY2F0ZWdvcnksXG4gICAgICAgICAgc3ViY2F0ZWdvcnk6IG51bGwsXG4gICAgICAgICAgb3JkZXI6IHNpZGViYXJJdGVtcy5sZW5ndGggKyAxLFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaWRlYmFySXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGl0ZW0gPSBzaWRlYmFySXRlbXNbaV07XG4gICAgICBsZXQgcHJldmlvdXMgPSBudWxsO1xuICAgICAgbGV0IG5leHQgPSBudWxsO1xuXG4gICAgICBpZiAoaSA+IDApIHtcbiAgICAgICAgcHJldmlvdXMgPSBzaWRlYmFySXRlbXNbaSAtIDFdLmlkO1xuICAgICAgfVxuXG4gICAgICBpZiAoaSA8IHNpZGViYXJJdGVtcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIG5leHQgPSBzaWRlYmFySXRlbXNbaSArIDFdLmlkO1xuICAgICAgfVxuXG4gICAgICBpdGVtc1tpdGVtLmlkXSA9IHtcbiAgICAgICAgcHJldmlvdXMsXG4gICAgICAgIG5leHQsXG4gICAgICAgIHNpZGViYXIsXG4gICAgICAgIGNhdGVnb3J5OiBpdGVtLmNhdGVnb3J5LFxuICAgICAgICBzdWJjYXRlZ29yeTogaXRlbS5zdWJjYXRlZ29yeSxcbiAgICAgICAgb3JkZXI6IGl0ZW0ub3JkZXIsXG4gICAgICB9O1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGl0ZW1zO1xufVxuXG4vLyBwcm9jZXNzIHRoZSBtZXRhZGF0YSBmb3IgYSBkb2N1bWVudCBmb3VuZCBpbiBlaXRoZXIgJ2RvY3MnIG9yICd0cmFuc2xhdGVkX2RvY3MnXG5mdW5jdGlvbiBwcm9jZXNzTWV0YWRhdGEoZmlsZSwgcmVmRGlyKSB7XG4gIGNvbnN0IHJlc3VsdCA9IG1ldGFkYXRhVXRpbHMuZXh0cmFjdE1ldGFkYXRhKGZzLnJlYWRGaWxlU3luYyhmaWxlLCAndXRmOCcpKTtcbiAgY29uc3QgbGFuZ3VhZ2UgPSB1dGlscy5nZXRMYW5ndWFnZShmaWxlLCByZWZEaXIpIHx8ICdlbic7XG5cbiAgY29uc3QgbWV0YWRhdGEgPSB7fTtcbiAgT2JqZWN0LmtleXMocmVzdWx0Lm1ldGFkYXRhKS5mb3JFYWNoKChmaWVsZE5hbWUpID0+IHtcbiAgICBpZiAoU3VwcG9ydGVkSGVhZGVyRmllbGRzLmhhcyhmaWVsZE5hbWUpKSB7XG4gICAgICBtZXRhZGF0YVtmaWVsZE5hbWVdID0gcmVzdWx0Lm1ldGFkYXRhW2ZpZWxkTmFtZV07XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUud2FybihgSGVhZGVyIGZpZWxkIFwiJHtmaWVsZE5hbWV9XCIgaW4gJHtmaWxlfSBpcyBub3Qgc3VwcG9ydGVkLmApO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgcmF3Q29udGVudCA9IHJlc3VsdC5yYXdDb250ZW50O1xuXG4gIGlmICghbWV0YWRhdGEuaWQpIHtcbiAgICBtZXRhZGF0YS5pZCA9IHBhdGgucGFyc2UoZmlsZSkubmFtZTtcbiAgfVxuICBpZiAobWV0YWRhdGEuaWQuaW5jbHVkZXMoJy8nKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRG9jdW1lbnQgaWQgY2Fubm90IGluY2x1ZGUgXCIvXCIuJyk7XG4gIH1cblxuICAvLyBJZiBhIGZpbGUgaXMgbG9jYXRlZCBpbiBhIHN1YmRpcmVjdG9yeSwgcHJlcGVuZCB0aGUgc3ViZGlyIHRvIGl0J3MgSURcbiAgLy8gRXhhbXBsZTpcbiAgLy8gIChmaWxlOiAnZG9jdXNhdXJ1cy9kb2NzL3Byb2plY3RBL3Rlc3QubWQnLCBJRCAndGVzdCcsIHJlZkRpcjogJ2RvY3VzYXVydXMvZG9jcycpXG4gIC8vICByZXR1cm5zICdwcm9qZWN0QS90ZXN0J1xuICBjb25zdCBzdWJEaXIgPSB1dGlscy5nZXRTdWJEaXIoZmlsZSwgcmVmRGlyKTtcbiAgaWYgKHN1YkRpcikge1xuICAgIG1ldGFkYXRhLmlkID0gYCR7c3ViRGlyfS8ke21ldGFkYXRhLmlkfWA7XG4gIH1cblxuICAvLyBFeGFtcGxlOiBgZG9jcy9wcm9qZWN0QS90ZXN0Lm1kYCBzb3VyY2UgaXMgYHByb2plY3RBL3Rlc3QubWRgXG4gIG1ldGFkYXRhLnNvdXJjZSA9IHN1YkRpclxuICAgID8gYCR7c3ViRGlyfS8ke3BhdGguYmFzZW5hbWUoZmlsZSl9YFxuICAgIDogcGF0aC5iYXNlbmFtZShmaWxlKTtcblxuICBpZiAoIW1ldGFkYXRhLnRpdGxlKSB7XG4gICAgbWV0YWRhdGEudGl0bGUgPSBtZXRhZGF0YS5pZDtcbiAgfVxuXG4gIGNvbnN0IGxhbmdQYXJ0ID1cbiAgICBlbnYudHJhbnNsYXRpb24uZW5hYmxlZCB8fCBzaXRlQ29uZmlnLnVzZUVuZ2xpc2hVcmwgPyBgJHtsYW5ndWFnZX0vYCA6ICcnO1xuICBsZXQgdmVyc2lvblBhcnQgPSAnJztcbiAgaWYgKGVudi52ZXJzaW9uaW5nLmVuYWJsZWQpIHtcbiAgICBtZXRhZGF0YS52ZXJzaW9uID0gJ25leHQnO1xuICAgIHZlcnNpb25QYXJ0ID0gJ25leHQvJztcbiAgfVxuXG4gIG1ldGFkYXRhLnBlcm1hbGluayA9IGAke2RvY3NQYXJ0fSR7bGFuZ1BhcnR9JHt2ZXJzaW9uUGFydH0ke21ldGFkYXRhLmlkfS5odG1sYDtcblxuICAvLyBjaGFuZ2UgaWRzIHByZXZpb3VzLCBuZXh0XG4gIG1ldGFkYXRhLmxvY2FsaXplZF9pZCA9IG1ldGFkYXRhLmlkO1xuICBtZXRhZGF0YS5pZCA9IChlbnYudHJhbnNsYXRpb24uZW5hYmxlZCA/IGAke2xhbmd1YWdlfS1gIDogJycpICsgbWV0YWRhdGEuaWQ7XG4gIG1ldGFkYXRhLmxhbmd1YWdlID0gZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyBsYW5ndWFnZSA6ICdlbic7XG5cbiAgY29uc3QgaXRlbXMgPSByZWFkU2lkZWJhcihhbGxTaWRlYmFycyk7XG4gIGNvbnN0IGlkID0gbWV0YWRhdGEubG9jYWxpemVkX2lkO1xuICBjb25zdCBpdGVtID0gaXRlbXNbaWRdO1xuICBpZiAoaXRlbSkge1xuICAgIG1ldGFkYXRhLnNpZGViYXIgPSBpdGVtLnNpZGViYXI7XG4gICAgbWV0YWRhdGEuY2F0ZWdvcnkgPSBpdGVtLmNhdGVnb3J5O1xuICAgIG1ldGFkYXRhLnN1YmNhdGVnb3J5ID0gaXRlbS5zdWJjYXRlZ29yeTtcbiAgICBtZXRhZGF0YS5vcmRlciA9IGl0ZW0ub3JkZXI7XG5cbiAgICBpZiAoaXRlbS5uZXh0KSB7XG4gICAgICBtZXRhZGF0YS5uZXh0X2lkID0gaXRlbS5uZXh0O1xuICAgICAgbWV0YWRhdGEubmV4dCA9XG4gICAgICAgIChlbnYudHJhbnNsYXRpb24uZW5hYmxlZCA/IGAke2xhbmd1YWdlfS1gIDogJycpICsgaXRlbS5uZXh0O1xuICAgIH1cbiAgICBpZiAoaXRlbS5wcmV2aW91cykge1xuICAgICAgbWV0YWRhdGEucHJldmlvdXNfaWQgPSBpdGVtLnByZXZpb3VzO1xuICAgICAgbWV0YWRhdGEucHJldmlvdXMgPVxuICAgICAgICAoZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyBgJHtsYW5ndWFnZX0tYCA6ICcnKSArIGl0ZW0ucHJldmlvdXM7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHttZXRhZGF0YSwgcmF3Q29udGVudH07XG59XG5cbi8vIHByb2Nlc3MgbWV0YWRhdGEgZm9yIGFsbCBkb2NzIGFuZCBzYXZlIGludG8gY29yZS9tZXRhZGF0YS5qc1xuZnVuY3Rpb24gZ2VuZXJhdGVNZXRhZGF0YURvY3MoKSB7XG4gIGxldCBvcmRlcjtcbiAgdHJ5IHtcbiAgICBvcmRlciA9IHJlYWRTaWRlYmFyKGFsbFNpZGViYXJzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xuICB9XG5cbiAgY29uc3QgZW5hYmxlZExhbmd1YWdlcyA9IGVudi50cmFuc2xhdGlvblxuICAgIC5lbmFibGVkTGFuZ3VhZ2VzKClcbiAgICAubWFwKChsYW5ndWFnZSkgPT4gbGFuZ3VhZ2UudGFnKTtcblxuICBjb25zdCBtZXRhZGF0YXMgPSB7fTtcbiAgY29uc3QgZGVmYXVsdE1ldGFkYXRhcyA9IHt9O1xuXG4gIGlmIChzaG91bGRHZW5lcmF0ZU5leHRSZWxlYXNlRG9jcygpKSB7XG4gICAgLy8gbWV0YWRhdGEgZm9yIGVuZ2xpc2ggZmlsZXNcbiAgICBjb25zdCBkb2NzRGlyID0gcGF0aC5qb2luKENXRCwgJy4uLycsIGdldERvY3NQYXRoKCkpO1xuICAgIGxldCBmaWxlcyA9IGdsb2Iuc3luYyhgJHtkb2NzRGlyfS8qKmApO1xuICAgIGZpbGVzLmZvckVhY2goKGZpbGUpID0+IHtcbiAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IHBhdGguZXh0bmFtZShmaWxlKTtcblxuICAgICAgaWYgKGV4dGVuc2lvbiA9PT0gJy5tZCcgfHwgZXh0ZW5zaW9uID09PSAnLm1hcmtkb3duJykge1xuICAgICAgICBjb25zdCByZXMgPSBwcm9jZXNzTWV0YWRhdGEoZmlsZSwgZG9jc0Rpcik7XG5cbiAgICAgICAgaWYgKCFyZXMpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWV0YWRhdGEgPSByZXMubWV0YWRhdGE7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBhbGxEZWxldGVkSWRzLmhhcyhtZXRhZGF0YS5pZCkgfHxcbiAgICAgICAgICAobWV0YWRhdGEub3JpZ2luYWxfaWQgJiYgYWxsRGVsZXRlZElkcy5oYXMobWV0YWRhdGEub3JpZ2luYWxfaWQpKVxuICAgICAgICApIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbWV0YWRhdGFzW21ldGFkYXRhLmlkXSA9IG1ldGFkYXRhO1xuXG4gICAgICAgIC8vIGNyZWF0ZSBhIGRlZmF1bHQgbGlzdCBvZiBkb2N1bWVudHMgZm9yIGVhY2ggZW5hYmxlZCBsYW5ndWFnZSBiYXNlZCBvbiBkb2NzIGluIEVuZ2xpc2hcbiAgICAgICAgLy8gdGhlc2Ugd2lsbCBnZXQgcmVwbGFjZWQgaWYvd2hlbiB0aGUgbG9jYWxpemVkIGZpbGUgaXMgZG93bmxvYWRlZCBmcm9tIGNyb3dkaW5cbiAgICAgICAgZW5hYmxlZExhbmd1YWdlc1xuICAgICAgICAgIC5maWx0ZXIoKGN1cnJlbnRMYW5ndWFnZSkgPT4gY3VycmVudExhbmd1YWdlICE9PSAnZW4nKVxuICAgICAgICAgIC5mb3JFYWNoKChjdXJyZW50TGFuZ3VhZ2UpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGJhc2VNZXRhZGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIG1ldGFkYXRhKTtcbiAgICAgICAgICAgIGJhc2VNZXRhZGF0YS5pZCA9IGJhc2VNZXRhZGF0YS5pZFxuICAgICAgICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICAgICAgICAucmVwbGFjZSgvXmVuLS8sIGAke2N1cnJlbnRMYW5ndWFnZX0tYCk7XG4gICAgICAgICAgICBpZiAoYmFzZU1ldGFkYXRhLnBlcm1hbGluaykge1xuICAgICAgICAgICAgICBiYXNlTWV0YWRhdGEucGVybWFsaW5rID0gYmFzZU1ldGFkYXRhLnBlcm1hbGlua1xuICAgICAgICAgICAgICAgIC50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoXG4gICAgICAgICAgICAgICAgICBuZXcgUmVnRXhwKGBeJHtkb2NzUGFydH1lbi9gKSxcbiAgICAgICAgICAgICAgICAgIGAke2RvY3NQYXJ0fSR7Y3VycmVudExhbmd1YWdlfS9gLFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYmFzZU1ldGFkYXRhLm5leHQpIHtcbiAgICAgICAgICAgICAgYmFzZU1ldGFkYXRhLm5leHQgPSBiYXNlTWV0YWRhdGEubmV4dFxuICAgICAgICAgICAgICAgIC50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL15lbi0vLCBgJHtjdXJyZW50TGFuZ3VhZ2V9LWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGJhc2VNZXRhZGF0YS5wcmV2aW91cykge1xuICAgICAgICAgICAgICBiYXNlTWV0YWRhdGEucHJldmlvdXMgPSBiYXNlTWV0YWRhdGEucHJldmlvdXNcbiAgICAgICAgICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9eZW4tLywgYCR7Y3VycmVudExhbmd1YWdlfS1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJhc2VNZXRhZGF0YS5sYW5ndWFnZSA9IGN1cnJlbnRMYW5ndWFnZTtcbiAgICAgICAgICAgIGRlZmF1bHRNZXRhZGF0YXNbYmFzZU1ldGFkYXRhLmlkXSA9IGJhc2VNZXRhZGF0YTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihtZXRhZGF0YXMsIGRlZmF1bHRNZXRhZGF0YXMpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gbWV0YWRhdGEgZm9yIG5vbi1lbmdsaXNoIGRvY3NcbiAgICBjb25zdCB0cmFuc2xhdGVkRGlyID0gcGF0aC5qb2luKENXRCwgJ3RyYW5zbGF0ZWRfZG9jcycpO1xuICAgIGZpbGVzID0gZ2xvYi5zeW5jKGAke0NXRH0vdHJhbnNsYXRlZF9kb2NzLyoqYCk7XG4gICAgZmlsZXMuZm9yRWFjaCgoZmlsZSkgPT4ge1xuICAgICAgaWYgKCF1dGlscy5nZXRMYW5ndWFnZShmaWxlLCB0cmFuc2xhdGVkRGlyKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IHBhdGguZXh0bmFtZShmaWxlKTtcblxuICAgICAgaWYgKGV4dGVuc2lvbiA9PT0gJy5tZCcgfHwgZXh0ZW5zaW9uID09PSAnLm1hcmtkb3duJykge1xuICAgICAgICBjb25zdCByZXMgPSBwcm9jZXNzTWV0YWRhdGEoZmlsZSwgdHJhbnNsYXRlZERpcik7XG4gICAgICAgIGlmICghcmVzKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1ldGFkYXRhID0gcmVzLm1ldGFkYXRhO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgYWxsRGVsZXRlZElkcy5oYXMobWV0YWRhdGEuaWQpIHx8XG4gICAgICAgICAgKG1ldGFkYXRhLm9yaWdpbmFsX2lkICYmIGFsbERlbGV0ZWRJZHMuaGFzKG1ldGFkYXRhLm9yaWdpbmFsX2lkKSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIG1ldGFkYXRhc1ttZXRhZGF0YS5pZF0gPSBtZXRhZGF0YTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8vIG1ldGFkYXRhIGZvciB2ZXJzaW9uZWQgZG9jc1xuICBjb25zdCB2ZXJzaW9uRGF0YSA9IHZlcnNpb25GYWxsYmFjay5kb2NEYXRhKCk7XG4gIHZlcnNpb25EYXRhLmZvckVhY2goKG1ldGFkYXRhKSA9PiB7XG4gICAgY29uc3QgaWQgPSBtZXRhZGF0YS5sb2NhbGl6ZWRfaWQ7XG4gICAgaWYgKG9yZGVyW2lkXSkge1xuICAgICAgbWV0YWRhdGEuc2lkZWJhciA9IG9yZGVyW2lkXS5zaWRlYmFyO1xuICAgICAgbWV0YWRhdGEuY2F0ZWdvcnkgPSBvcmRlcltpZF0uY2F0ZWdvcnk7XG4gICAgICBtZXRhZGF0YS5zdWJjYXRlZ29yeSA9IG9yZGVyW2lkXS5zdWJjYXRlZ29yeTtcbiAgICAgIG1ldGFkYXRhLm9yZGVyID0gb3JkZXJbaWRdLm9yZGVyO1xuXG4gICAgICBpZiAob3JkZXJbaWRdLm5leHQpIHtcbiAgICAgICAgbWV0YWRhdGEubmV4dF9pZCA9IG9yZGVyW2lkXS5uZXh0LnJlcGxhY2UoXG4gICAgICAgICAgYHZlcnNpb24tJHttZXRhZGF0YS52ZXJzaW9ufS1gLFxuICAgICAgICAgICcnLFxuICAgICAgICApO1xuICAgICAgICBtZXRhZGF0YS5uZXh0ID1cbiAgICAgICAgICAoZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyBgJHttZXRhZGF0YS5sYW5ndWFnZX0tYCA6ICcnKSArXG4gICAgICAgICAgb3JkZXJbaWRdLm5leHQ7XG4gICAgICB9XG4gICAgICBpZiAob3JkZXJbaWRdLnByZXZpb3VzKSB7XG4gICAgICAgIG1ldGFkYXRhLnByZXZpb3VzX2lkID0gb3JkZXJbaWRdLnByZXZpb3VzLnJlcGxhY2UoXG4gICAgICAgICAgYHZlcnNpb24tJHttZXRhZGF0YS52ZXJzaW9ufS1gLFxuICAgICAgICAgICcnLFxuICAgICAgICApO1xuICAgICAgICBtZXRhZGF0YS5wcmV2aW91cyA9XG4gICAgICAgICAgKGVudi50cmFuc2xhdGlvbi5lbmFibGVkID8gYCR7bWV0YWRhdGEubGFuZ3VhZ2V9LWAgOiAnJykgK1xuICAgICAgICAgIG9yZGVyW2lkXS5wcmV2aW91cztcbiAgICAgIH1cbiAgICB9XG4gICAgbWV0YWRhdGFzW21ldGFkYXRhLmlkXSA9IG1ldGFkYXRhO1xuICB9KTtcblxuICAvLyBHZXQgdGhlIHRpdGxlcyBvZiB0aGUgcHJldmlvdXMgYW5kIG5leHQgaWRzIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluXG4gIC8vIG5hdmlnYXRpb24gYnV0dG9ucyBpbiBEb2NzTGF5b3V0LmpzXG4gIE9iamVjdC5rZXlzKG1ldGFkYXRhcykuZm9yRWFjaCgobWV0YWRhdGEpID0+IHtcbiAgICBpZiAobWV0YWRhdGFzW21ldGFkYXRhXS5wcmV2aW91cykge1xuICAgICAgaWYgKG1ldGFkYXRhc1ttZXRhZGF0YXNbbWV0YWRhdGFdLnByZXZpb3VzXSkge1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFdLnByZXZpb3VzX3RpdGxlID1cbiAgICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFzW21ldGFkYXRhXS5wcmV2aW91c10udGl0bGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFdLnByZXZpb3VzX3RpdGxlID0gJ1ByZXZpb3VzJztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG1ldGFkYXRhc1ttZXRhZGF0YV0ubmV4dCkge1xuICAgICAgaWYgKG1ldGFkYXRhc1ttZXRhZGF0YXNbbWV0YWRhdGFdLm5leHRdKSB7XG4gICAgICAgIG1ldGFkYXRhc1ttZXRhZGF0YV0ubmV4dF90aXRsZSA9XG4gICAgICAgICAgbWV0YWRhdGFzW21ldGFkYXRhc1ttZXRhZGF0YV0ubmV4dF0udGl0bGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFdLm5leHRfdGl0bGUgPSAnTmV4dCc7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBmcy53cml0ZUZpbGVTeW5jKFxuICAgIHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vY29yZS9tZXRhZGF0YS5qcycpLFxuICAgIGAke1xuICAgICAgJy8qKlxcbicgK1xuICAgICAgJyAqIEAnICtcbiAgICAgICdnZW5lcmF0ZWRcXG4nICsgLy8gc2VwYXJhdGUgdGhpcyBvdXQgZm9yIE51Y2xpZGUgdHJlYXRpbmcgQGdlbmVyYXRlZCBhcyByZWFkb25seVxuICAgICAgJyAqL1xcbicgK1xuICAgICAgJ21vZHVsZS5leHBvcnRzID0gJ1xuICAgIH0ke0pTT04uc3RyaW5naWZ5KG1ldGFkYXRhcywgbnVsbCwgMil9O1xcbmAsXG4gICk7XG59XG5cbi8vIHByb2Nlc3MgbWV0YWRhdGEgZm9yIGJsb2cgcG9zdHMgYW5kIHNhdmUgaW50byBjb3JlL01ldGFkYXRhQmxvZy5qc1xuZnVuY3Rpb24gZ2VuZXJhdGVNZXRhZGF0YUJsb2coY29uZmlnID0gc2l0ZUNvbmZpZykge1xuICBjb25zdCBtZXRhZGF0YXMgPSBbXTtcblxuICBjb25zdCBmaWxlcyA9IGdsb2Iuc3luYyhgJHtDV0R9L2Jsb2cvKiovKi4qYCk7XG4gIGZpbGVzXG4gICAgLnNvcnQoKVxuICAgIC5yZXZlcnNlKClcbiAgICAuZm9yRWFjaCgoZmlsZSkgPT4ge1xuICAgICAgY29uc3QgZXh0ZW5zaW9uID0gcGF0aC5leHRuYW1lKGZpbGUpO1xuICAgICAgaWYgKGV4dGVuc2lvbiAhPT0gJy5tZCcgJiYgZXh0ZW5zaW9uICE9PSAnLm1hcmtkb3duJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBtZXRhZGF0YSA9IGJsb2cuZ2V0TWV0YWRhdGEoZmlsZSwgY29uZmlnKTtcbiAgICAgIC8vIEV4dHJhY3QsIFlZWVksIE1NLCBERCBmcm9tIHRoZSBmaWxlIG5hbWVcbiAgICAgIGNvbnN0IGZpbGVQYXRoRGF0ZUFyciA9IHBhdGguYmFzZW5hbWUoZmlsZSkuc3BsaXQoJy0nKTtcbiAgICAgIG1ldGFkYXRhLmRhdGUgPSBuZXcgRGF0ZShcbiAgICAgICAgYCR7ZmlsZVBhdGhEYXRlQXJyWzBdfS0ke2ZpbGVQYXRoRGF0ZUFyclsxXX0tJHtmaWxlUGF0aERhdGVBcnJbMl19VDA2OjAwOjAwLjAwMFpgLFxuICAgICAgKTtcbiAgICAgIC8vIGFsbG93IGVhc2llciBzb3J0aW5nIG9mIGJsb2cgYnkgcHJvdmlkaW5nIHNlY29uZHMgc2luY2UgZXBvY2hcbiAgICAgIG1ldGFkYXRhLnNlY29uZHMgPSBNYXRoLnJvdW5kKG1ldGFkYXRhLmRhdGUuZ2V0VGltZSgpIC8gMTAwMCk7XG5cbiAgICAgIG1ldGFkYXRhcy5wdXNoKG1ldGFkYXRhKTtcbiAgICB9KTtcblxuICBjb25zdCBzb3J0ZWRNZXRhZGF0YXMgPSBtZXRhZGF0YXMuc29ydChcbiAgICAoYSwgYikgPT4gcGFyc2VJbnQoYi5zZWNvbmRzLCAxMCkgLSBwYXJzZUludChhLnNlY29uZHMsIDEwKSxcbiAgKTtcblxuICBmcy53cml0ZUZpbGVTeW5jKFxuICAgIHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vY29yZS9NZXRhZGF0YUJsb2cuanMnKSxcbiAgICBgJHtcbiAgICAgICcvKipcXG4nICtcbiAgICAgICcgKiBAJyArXG4gICAgICAnZ2VuZXJhdGVkXFxuJyArIC8vIHNlcGFyYXRlIHRoaXMgb3V0IGZvciBOdWNsaWRlIHRyZWF0aW5nIEBnZW5lcmF0ZWQgYXMgcmVhZG9ubHlcbiAgICAgICcgKi9cXG4nICtcbiAgICAgICdtb2R1bGUuZXhwb3J0cyA9ICdcbiAgICB9JHtKU09OLnN0cmluZ2lmeShzb3J0ZWRNZXRhZGF0YXMsIG51bGwsIDIpfTtcXG5gLFxuICApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0RG9jc1BhdGgsXG4gIHJlYWRTaWRlYmFyLFxuICBwcm9jZXNzTWV0YWRhdGEsXG4gIGdlbmVyYXRlTWV0YWRhdGFEb2NzLFxuICBnZW5lcmF0ZU1ldGFkYXRhQmxvZyxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "readMetadata.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "path",
        "require",
        "fs",
        "glob",
        "program",
        "metadataUtils",
        "env",
        "blog",
        "loadConfig",
        "siteConfig",
        "versionFallback",
        "utils",
        "docsPart",
        "docsUrl",
        "allDeletedIds",
        "Set",
        "deletedDocs",
        "Object",
        "values",
        "forEach",
        "idList",
        "id",
        "add",
        "SupportedHeaderFields",
        "allSidebars",
        "existsSync",
        "getDocsPath",
        "customDocsPath",
        "shouldGenerateNextReleaseDocs",
        "versioning",
        "enabled",
        "skipNextRelease",
        "readSidebar",
        "sidebars",
        "assign",
        "sidebarData",
        "items",
        "keys",
        "sidebar",
        "categories",
        "sidebarItems",
        "category",
        "categoryItems",
        "categoryItem",
        "type",
        "ids",
        "subcategoryItem",
        "push",
        "subcategory",
        "label",
        "order",
        "length",
        "i",
        "item",
        "previous",
        "next",
        "processMetadata",
        "file",
        "refDir",
        "result",
        "extractMetadata",
        "readFileSync",
        "language",
        "getLanguage",
        "metadata",
        "fieldName",
        "has",
        "console",
        "warn",
        "rawContent",
        "parse",
        "name",
        "includes",
        "Error",
        "subDir",
        "getSubDir",
        "source",
        "basename",
        "title",
        "langPart",
        "translation",
        "useEnglishUrl",
        "versionPart",
        "version",
        "permalink",
        "localized_id",
        "next_id",
        "previous_id",
        "generateMetadataDocs",
        "e",
        "error",
        "exit",
        "enabledLanguages",
        "map",
        "tag",
        "metadatas",
        "defaultMetadatas",
        "docsDir",
        "join",
        "files",
        "sync",
        "extension",
        "extname",
        "res",
        "original_id",
        "filter",
        "currentLanguage",
        "baseMetadata",
        "toString",
        "replace",
        "RegExp",
        "translatedDir",
        "versionData",
        "docData",
        "previous_title",
        "next_title",
        "writeFileSync",
        "__dirname",
        "JSON",
        "stringify",
        "generateMetadataBlog",
        "config",
        "sort",
        "reverse",
        "getMetadata",
        "filePathDateArr",
        "split",
        "date",
        "Date",
        "seconds",
        "Math",
        "round",
        "getTime",
        "sortedMetadatas",
        "a",
        "b",
        "parseInt",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\n\nconst path = require('path');\nconst fs = require('fs');\nconst glob = require('glob');\nconst program = require('commander');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst blog = require('./blog.js');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\nconst versionFallback = require('./versionFallback.js');\nconst utils = require('./utils.js');\n\nconst docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n\n// Get a list of all IDs that have been deleted in any version.\n// We will assume these should not be in the current/next version.\nconst allDeletedIds = new Set();\nif (siteConfig.deletedDocs) {\n  Object.values(siteConfig.deletedDocs).forEach((idList) => {\n    idList.forEach((id) => allDeletedIds.add(id));\n  });\n}\n\nconst SupportedHeaderFields = new Set([\n  'id',\n  'title',\n  'author',\n  'authorURL',\n  'authorFBID',\n  'sidebar_label',\n  'original_id',\n  'hide_title',\n  'layout',\n  'custom_edit_url',\n  'description',\n]);\n\nlet allSidebars;\nif (fs.existsSync(`${CWD}/sidebars.json`)) {\n  allSidebars = require(`${CWD}/sidebars.json`);\n} else {\n  allSidebars = {};\n}\n\n// Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n}\n\n// returns map from id to object containing sidebar ordering info\nfunction readSidebar(sidebars = {}) {\n  Object.assign(sidebars, versionFallback.sidebarData());\n\n  const items = {};\n\n  Object.keys(sidebars).forEach((sidebar) => {\n    const categories = sidebars[sidebar];\n    const sidebarItems = [];\n\n    Object.keys(categories).forEach((category) => {\n      const categoryItems = categories[category];\n      categoryItems.forEach((categoryItem) => {\n        if (typeof categoryItem === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach((subcategoryItem) => {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1,\n                });\n              });\n              return;\n            default:\n              return;\n          }\n        }\n\n        // Is a regular id value.\n        sidebarItems.push({\n          id: categoryItem,\n          category,\n          subcategory: null,\n          order: sidebarItems.length + 1,\n        });\n      });\n    });\n\n    for (let i = 0; i < sidebarItems.length; i++) {\n      const item = sidebarItems[i];\n      let previous = null;\n      let next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous,\n        next,\n        sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order,\n      };\n    }\n  });\n\n  return items;\n}\n\n// process the metadata for a document found in either 'docs' or 'translated_docs'\nfunction processMetadata(file, refDir) {\n  const result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const language = utils.getLanguage(file, refDir) || 'en';\n\n  const metadata = {};\n  Object.keys(result.metadata).forEach((fieldName) => {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(`Header field \"${fieldName}\" in ${file} is not supported.`);\n    }\n  });\n\n  const rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  }\n\n  // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n  const subDir = utils.getSubDir(file, refDir);\n  if (subDir) {\n    metadata.id = `${subDir}/${metadata.id}`;\n  }\n\n  // Example: `docs/projectA/test.md` source is `projectA/test.md`\n  metadata.source = subDir\n    ? `${subDir}/${path.basename(file)}`\n    : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  const langPart =\n    env.translation.enabled || siteConfig.useEnglishUrl ? `${language}/` : '';\n  let versionPart = '';\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = `${docsPart}${langPart}${versionPart}${metadata.id}.html`;\n\n  // change ids previous, next\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n\n  const items = readSidebar(allSidebars);\n  const id = metadata.localized_id;\n  const item = items[id];\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next =\n        (env.translation.enabled ? `${language}-` : '') + item.next;\n    }\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous =\n        (env.translation.enabled ? `${language}-` : '') + item.previous;\n    }\n  }\n\n  return {metadata, rawContent};\n}\n\n// process metadata for all docs and save into core/metadata.js\nfunction generateMetadataDocs() {\n  let order;\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  const enabledLanguages = env.translation\n    .enabledLanguages()\n    .map((language) => language.tag);\n\n  const metadatas = {};\n  const defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    const docsDir = path.join(CWD, '../', getDocsPath());\n    let files = glob.sync(`${docsDir}/**`);\n    files.forEach((file) => {\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        if (\n          allDeletedIds.has(metadata.id) ||\n          (metadata.original_id && allDeletedIds.has(metadata.original_id))\n        ) {\n          return;\n        }\n        metadatas[metadata.id] = metadata;\n\n        // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n        enabledLanguages\n          .filter((currentLanguage) => currentLanguage !== 'en')\n          .forEach((currentLanguage) => {\n            const baseMetadata = Object.assign({}, metadata);\n            baseMetadata.id = baseMetadata.id\n              .toString()\n              .replace(/^en-/, `${currentLanguage}-`);\n            if (baseMetadata.permalink) {\n              baseMetadata.permalink = baseMetadata.permalink\n                .toString()\n                .replace(\n                  new RegExp(`^${docsPart}en/`),\n                  `${docsPart}${currentLanguage}/`,\n                );\n            }\n            if (baseMetadata.next) {\n              baseMetadata.next = baseMetadata.next\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            if (baseMetadata.previous) {\n              baseMetadata.previous = baseMetadata.previous\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            baseMetadata.language = currentLanguage;\n            defaultMetadatas[baseMetadata.id] = baseMetadata;\n          });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    });\n\n    // metadata for non-english docs\n    const translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(`${CWD}/translated_docs/**`);\n    files.forEach((file) => {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, translatedDir);\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        if (\n          allDeletedIds.has(metadata.id) ||\n          (metadata.original_id && allDeletedIds.has(metadata.original_id))\n        ) {\n          return;\n        }\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  }\n\n  // metadata for versioned docs\n  const versionData = versionFallback.docData();\n  versionData.forEach((metadata) => {\n    const id = metadata.localized_id;\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.next =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].next;\n      }\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.previous =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].previous;\n      }\n    }\n    metadatas[metadata.id] = metadata;\n  });\n\n  // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n  Object.keys(metadatas).forEach((metadata) => {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title =\n          metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title =\n          metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/metadata.js'),\n    `${\n      '/**\\n' +\n      ' * @' +\n      'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '\n    }${JSON.stringify(metadatas, null, 2)};\\n`,\n  );\n}\n\n// process metadata for blog posts and save into core/MetadataBlog.js\nfunction generateMetadataBlog(config = siteConfig) {\n  const metadatas = [];\n\n  const files = glob.sync(`${CWD}/blog/**/*.*`);\n  files\n    .sort()\n    .reverse()\n    .forEach((file) => {\n      const extension = path.extname(file);\n      if (extension !== '.md' && extension !== '.markdown') {\n        return;\n      }\n      const metadata = blog.getMetadata(file, config);\n      // Extract, YYYY, MM, DD from the file name\n      const filePathDateArr = path.basename(file).split('-');\n      metadata.date = new Date(\n        `${filePathDateArr[0]}-${filePathDateArr[1]}-${filePathDateArr[2]}T06:00:00.000Z`,\n      );\n      // allow easier sorting of blog by providing seconds since epoch\n      metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n\n      metadatas.push(metadata);\n    });\n\n  const sortedMetadatas = metadatas.sort(\n    (a, b) => parseInt(b.seconds, 10) - parseInt(a.seconds, 10),\n  );\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/MetadataBlog.js'),\n    `${\n      '/**\\n' +\n      ' * @' +\n      'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '\n    }${JSON.stringify(sortedMetadatas, null, 2)};\\n`,\n  );\n}\n\nmodule.exports = {\n  getDocsPath,\n  readSidebar,\n  processMetadata,\n  generateMetadataDocs,\n  generateMetadataBlog,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\metadataUtils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\metadataUtils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\metadataUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\metadataUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "metadataUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  var lines = content.split(/\\r?\\n/);\n\n  if (lines[0] !== '---') {\n    return {};\n  }\n\n  var i = 1;\n\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n')\n  };\n} // Extract markdown metadata header\n\n\nfunction extractMetadata(content) {\n  var metadata = {};\n  var both = splitHeader(content); // if no content returned, then that means there was no header, and both.header is the content\n\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {\n        metadata: metadata,\n        rawContent: content\n      };\n    }\n\n    return {\n      metadata: metadata,\n      rawContent: both.header\n    };\n  } // New line characters => to handle all operating systems.\n\n\n  var lines = both.header.split(/\\r?\\n/); // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n\n  for (var i = 0; i < lines.length - 1; ++i) {\n    var keyvalue = lines[i].split(':');\n    var key = keyvalue[0].trim();\n    var value = keyvalue.slice(1).join(':').trim();\n\n    try {\n      value = JSON.parse(value);\n    } catch (err) {// Ignore the error as it means it's not a JSON value.\n    }\n\n    metadata[key] = value;\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: both.content\n  };\n} // mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\n\n\nfunction mdToHtml(Metadata, siteConfig) {\n  var baseUrl = siteConfig.baseUrl,\n      docsUrl = siteConfig.docsUrl;\n  var result = {};\n  Object.keys(Metadata).forEach(function (id) {\n    var metadata = Metadata[id];\n\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n\n    var htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n    var baseDocsPart = \"\".concat(baseUrl).concat(docsUrl ? \"\".concat(docsUrl, \"/\") : '');\n    var i18nDocsRegex = new RegExp(\"^\".concat(baseDocsPart, \"en/\"));\n    var docsRegex = new RegExp(\"^\".concat(baseDocsPart));\n\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, \"\".concat(baseDocsPart, \"en/VERSION/\"));\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, \"\".concat(baseDocsPart, \"VERSION/\"));\n    }\n\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata: extractMetadata,\n  mdToHtml: mdToHtml\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "metadataUtils.js"
      ],
      "names": [
        "splitHeader",
        "content",
        "lines",
        "split",
        "i",
        "length",
        "header",
        "slice",
        "join",
        "extractMetadata",
        "metadata",
        "both",
        "rawContent",
        "keyvalue",
        "key",
        "trim",
        "value",
        "JSON",
        "parse",
        "err",
        "mdToHtml",
        "Metadata",
        "siteConfig",
        "baseUrl",
        "docsUrl",
        "result",
        "Object",
        "keys",
        "forEach",
        "id",
        "language",
        "original_id",
        "htmlLink",
        "permalink",
        "replace",
        "baseDocsPart",
        "i18nDocsRegex",
        "RegExp",
        "docsRegex",
        "test",
        "source",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  const lines = content.split(/\\r?\\n/);\n  if (lines[0] !== '---') {\n    return {};\n  }\n  let i = 1;\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n'),\n  };\n}\n\n// Extract markdown metadata header\nfunction extractMetadata(content) {\n  const metadata = {};\n  const both = splitHeader(content);\n\n  // if no content returned, then that means there was no header, and both.header is the content\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {metadata, rawContent: content};\n    }\n    return {metadata, rawContent: both.header};\n  }\n\n  // New line characters => to handle all operating systems.\n  const lines = both.header.split(/\\r?\\n/);\n\n  // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n  for (let i = 0; i < lines.length - 1; ++i) {\n    const keyvalue = lines[i].split(':');\n    const key = keyvalue[0].trim();\n    let value = keyvalue.slice(1).join(':').trim();\n    try {\n      value = JSON.parse(value);\n    } catch (err) {\n      // Ignore the error as it means it's not a JSON value.\n    }\n    metadata[key] = value;\n  }\n  return {metadata, rawContent: both.content};\n}\n\n// mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\nfunction mdToHtml(Metadata, siteConfig) {\n  const {baseUrl, docsUrl} = siteConfig;\n  const result = {};\n  Object.keys(Metadata).forEach((id) => {\n    const metadata = Metadata[id];\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n    let htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n\n    const baseDocsPart = `${baseUrl}${docsUrl ? `${docsUrl}/` : ''}`;\n\n    const i18nDocsRegex = new RegExp(`^${baseDocsPart}en/`);\n    const docsRegex = new RegExp(`^${baseDocsPart}`);\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, `${baseDocsPart}en/VERSION/`);\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, `${baseDocsPart}VERSION/`);\n    }\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata,\n  mdToHtml,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\blog.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\blog.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\blog.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\blog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "blog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar path = require('path');\n\nvar fs = require('fs-extra');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar _require = require('./utils.js'),\n    replaceAssetsLink = _require.replaceAssetsLink;\n\nvar _require2 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n\n  return path.basename(file).replace('-', '/').replace('-', '/').replace('-', '/').replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  var BlogPageLayout = require('../core/BlogPageLayout.js');\n\n  var blogPages = {};\n  var perPage = 10;\n\n  for (var page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    var metadata = {\n      page: page,\n      perPage: perPage\n    };\n    var blogPageComp = /*#__PURE__*/React.createElement(BlogPageLayout, {\n      metadata: metadata,\n      language: \"en\",\n      config: siteConfig\n    });\n    var str = renderToStaticMarkupWithDoctype(blogPageComp);\n    var pagePath = \"\".concat(page > 0 ? \"page\".concat(page + 1) : '', \"/index.html\");\n    blogPages[pagePath] = str;\n  }\n\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, {\n    encoding: 'utf8'\n  }));\n  var metadata = Object.assign({\n    path: fileToUrl(file),\n    content: replaceAssetsLink(result.rawContent, \"\".concat(siteConfig.baseUrl, \"blog\"))\n  }, result.metadata);\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  var metadata = getMetadata(file, siteConfig);\n\n  if (!metadata) {\n    return null;\n  }\n\n  var BlogPostLayout = require('../core/BlogPostLayout.js');\n\n  var blogPostComp = /*#__PURE__*/React.createElement(BlogPostLayout, {\n    metadata: metadata,\n    language: \"en\",\n    config: siteConfig\n  }, metadata.content);\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl: fileToUrl,\n  getMetadata: getMetadata,\n  getPagesMarkup: getPagesMarkup,\n  getPostMarkup: getPostMarkup,\n  urlToSource: urlToSource\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwicGF0aCIsImZzIiwibWV0YWRhdGFVdGlscyIsInJlcGxhY2VBc3NldHNMaW5rIiwicmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSIsInVybFRvU291cmNlIiwidXJsIiwicmVwbGFjZSIsImZpbGVUb1VybCIsImZpbGUiLCJleGlzdHNTeW5jIiwiYmFzZW5hbWUiLCJnZXRQYWdlc01hcmt1cCIsIm51bU9mQmxvZyIsInNpdGVDb25maWciLCJCbG9nUGFnZUxheW91dCIsImJsb2dQYWdlcyIsInBlclBhZ2UiLCJwYWdlIiwiTWF0aCIsImNlaWwiLCJtZXRhZGF0YSIsImJsb2dQYWdlQ29tcCIsInN0ciIsInBhZ2VQYXRoIiwiZ2V0TWV0YWRhdGEiLCJyZXN1bHQiLCJleHRyYWN0TWV0YWRhdGEiLCJyZWFkRmlsZVN5bmMiLCJlbmNvZGluZyIsIk9iamVjdCIsImFzc2lnbiIsImNvbnRlbnQiLCJyYXdDb250ZW50IiwiYmFzZVVybCIsImlkIiwidGl0bGUiLCJnZXRQb3N0TWFya3VwIiwiQmxvZ1Bvc3RMYXlvdXQiLCJibG9nUG9zdENvbXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsVUFBRCxDQUFsQjs7QUFDQSxJQUFNRyxhQUFhLEdBQUdILE9BQU8sQ0FBQyxpQkFBRCxDQUE3Qjs7ZUFDNEJBLE9BQU8sQ0FBQyxZQUFELEM7SUFBNUJJLGlCLFlBQUFBLGlCOztnQkFDbUNKLE9BQU8sQ0FBQyxlQUFELEM7SUFBMUNLLCtCLGFBQUFBLCtCOztBQUVQLFNBQVNDLFdBQVQsQ0FBcUJDLEdBQXJCLEVBQTBCO0FBQ3hCLE1BQUksQ0FB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Q0FBQ2hCLElBQUQsRUFBT0ssVUFBUCxDQUE1Qjs7QUFDQSxNQUFJLENBQUNPLFFBQUwsRUFBZTtBQUNiLFdBQU8sSUFBUDtBQUNEOztBQUNELE1BQU1pQixjQUFjLEdBQUd2QyxPQUFPLENBQUMsMkJBQUQsQ0FBOUI7O0FBQ0EsTUFBTXdDLFlBQVksZ0JBQ2hCLG9CQUFDLGNBQUQ7QUFBZ0IsSUFBQSxRQUFRLEVBQUVsQixRQUExQjtBQUFvQyxJQUFBLFFBQVEsRUFBQyxJQUE3QztBQUFrRCxJQUFBLE1BQU0sRUFBRVA7QUFBMUQsS0FDR08sUUFBUSxDQUFDVyxPQURaLENBREY7QUFLQSxTQUFPNUIsK0JBQStCLENBQUNtQyxZQUFELENBQXRDO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmakMsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZpQixFQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZmIsRUFBQUEsY0FBYyxFQUFkQSxjQUhlO0FBSWZ5QixFQUFBQSxhQUFhLEVBQWJBLGFBSmU7QUFLZmhDLEVBQUFBLFdBQVcsRUFBWEE7QUFMZSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxpdWppXFxEZXNrdG9wXFxCbG9nXFx3ZWJzaXRlXFxub2RlX21vZHVsZXNcXGRvY3VzYXVydXNcXGxpYlxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBtZXRhZGF0YVV0aWxzID0gcmVxdWlyZSgnLi9tZXRhZGF0YVV0aWxzJyk7XG5jb25zdCB7cmVwbGFjZUFzc2V0c0xpbmt9ID0gcmVxdWlyZSgnLi91dGlscy5qcycpO1xuY29uc3Qge3JlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGV9ID0gcmVxdWlyZSgnLi9yZW5kZXJVdGlscycpO1xuXG5mdW5jdGlvbiB1cmxUb1NvdXJjZSh1cmwpIHtcbiAgaWYgKCF1cmwgfHwgdHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gdXJsLnJlcGxhY2UoLyhcXC9pbmRleCk/XFwuaHRtbCQvLCAnLm1kJykucmVwbGFjZSgvXFwvL2csICctJyk7XG59XG5cbmZ1bmN0aW9uIGZpbGVUb1VybChmaWxlKSB7XG4gIGlmICghZmlsZSB8fCAhZnMuZXhpc3RzU3luYyhmaWxlKSB8fCB0eXBlb2YgZmlsZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gcGF0aFxuICAgIC5iYXNlbmFtZShmaWxlKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKC9cXC5tZCQvLCAnLmh0bWwnKTtcbn1cblxuZnVuY3Rpb24gZ2V0UGFnZXNNYXJrdXAobnVtT2ZCbG9nLCBzaXRlQ29uZmlnKSB7XG4gIGNvbnN0IEJsb2dQYWdlTGF5b3V0ID0gcmVxdWlyZSgnLi4vY29yZS9CbG9nUGFnZUxheW91dC5qcycpO1xuICBjb25zdCBibG9nUGFnZXMgPSB7fTtcbiAgY29uc3QgcGVyUGFnZSA9IDEwO1xuICBmb3IgKGxldCBwYWdlID0gMDsgcGFnZSA8IE1hdGguY2VpbChudW1PZkJsb2cgLyBwZXJQYWdlKTsgcGFnZSsrKSB7XG4gICAgY29uc3QgbWV0YWRhdGEgPSB7cGFnZSwgcGVyUGFnZX07XG4gICAgY29uc3QgYmxvZ1BhZ2VDb21wID0gKFxuICAgICAgPEJsb2dQYWdlTGF5b3V0IG1ldGFkYXRhPXttZXRhZGF0YX0gbGFuZ3VhZ2U9XCJlblwiIGNvbmZpZz17c2l0ZUNvbmZpZ30gLz5cbiAgICApO1xuICAgIGNvbnN0IHN0ciA9IHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoYmxvZ1BhZ2VDb21wKTtcbiAgICBjb25zdCBwYWdlUGF0aCA9IGAke3BhZ2UgPiAwID8gYHBhZ2Uke3BhZ2UgKyAxfWAgOiAnJ30vaW5kZXguaHRtbGA7XG4gICAgYmxvZ1BhZ2VzW3BhZ2VQYXRoXSA9IHN0cjtcbiAgfVxuICByZXR1cm4gYmxvZ1BhZ2VzO1xufVxuXG5mdW5jdGlvbiBnZXRNZXRhZGF0YShmaWxlLCBzaXRlQ29uZmlnKSB7XG4gIGlmICghZmlsZSB8fCAhZnMuZXhpc3RzU3luYyhmaWxlKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IG1ldGFkYXRhVXRpbHMuZXh0cmFjdE1ldGFkYXRhKFxuICAgIGZzLnJlYWRGaWxlU3luYyhmaWxlLCB7ZW5jb2Rpbmc6ICd1dGY4J30pLFxuICApO1xuICBjb25zdCBtZXRhZGF0YSA9IE9iamVjdC5hc3NpZ24oXG4gICAge1xuICAgICAgcGF0aDogZmlsZVRvVXJsKGZpbGUpLFxuICAgICAgY29udGVudDogcmVwbGFjZUFzc2V0c0xpbmsoXG4gICAgICAgIHJlc3VsdC5yYXdDb250ZW50LFxuICAgICAgICBgJHtzaXRlQ29uZmlnLmJhc2VVcmx9YmxvZ2AsXG4gICAgICApLFxuICAgIH0sXG4gICAgcmVzdWx0Lm1ldGFkYXRhLFxuICApO1xuICBtZXRhZGF0YS5pZCA9IG1ldGFkYXRhLnRpdGxlO1xuICByZXR1cm4gbWV0YWRhdGE7XG59XG5cbmZ1bmN0aW9uIGdldFBvc3RNYXJrdXAoZmlsZSwgc2l0ZUNvbmZpZykge1xuICBjb25zdCBtZXRhZGF0YSA9IGdldE1ldGFkYXRhKGZpbGUsIHNpdGVDb25maWcpO1xuICBpZiAoIW1ldGFkYXRhKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgQmxvZ1Bvc3RMYXlvdXQgPSByZXF1aXJlKCcuLi9jb3JlL0Jsb2dQb3N0TGF5b3V0LmpzJyk7XG4gIGNvbnN0IGJsb2dQb3N0Q29tcCA9IChcbiAgICA8QmxvZ1Bvc3RMYXlvdXQgbWV0YWRhdGE9e21ldGFkYXRhfSBsYW5ndWFnZT1cImVuXCIgY29uZmlnPXtzaXRlQ29uZmlnfT5cbiAgICAgIHttZXRhZGF0YS5jb250ZW50fVxuICAgIDwvQmxvZ1Bvc3RMYXlvdXQ+XG4gICk7XG4gIHJldHVybiByZW5kZXJUb1N0YXRpY01hcmt1cFdpdGhEb2N0eXBlKGJsb2dQb3N0Q29tcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBmaWxlVG9VcmwsXG4gIGdldE1ldGFkYXRhLFxuICBnZXRQYWdlc01hcmt1cCxcbiAgZ2V0UG9zdE1hcmt1cCxcbiAgdXJsVG9Tb3VyY2UsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "blog.js"
      ],
      "names": [
        "React",
        "require",
        "path",
        "fs",
        "metadataUtils",
        "replaceAssetsLink",
        "renderToStaticMarkupWithDoctype",
        "urlToSource",
        "url",
        "replace",
        "fileToUrl",
        "file",
        "existsSync",
        "basename",
        "getPagesMarkup",
        "numOfBlog",
        "siteConfig",
        "BlogPageLayout",
        "blogPages",
        "perPage",
        "page",
        "Math",
        "ceil",
        "metadata",
        "blogPageComp",
        "str",
        "pagePath",
        "getMetadata",
        "result",
        "extractMetadata",
        "readFileSync",
        "encoding",
        "Object",
        "assign",
        "content",
        "rawContent",
        "baseUrl",
        "id",
        "title",
        "getPostMarkup",
        "BlogPostLayout",
        "blogPostComp",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst metadataUtils = require('./metadataUtils');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n  return path\n    .basename(file)\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  const BlogPageLayout = require('../core/BlogPageLayout.js');\n  const blogPages = {};\n  const perPage = 10;\n  for (let page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    const metadata = {page, perPage};\n    const blogPageComp = (\n      <BlogPageLayout metadata={metadata} language=\"en\" config={siteConfig} />\n    );\n    const str = renderToStaticMarkupWithDoctype(blogPageComp);\n    const pagePath = `${page > 0 ? `page${page + 1}` : ''}/index.html`;\n    blogPages[pagePath] = str;\n  }\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n  const result = metadataUtils.extractMetadata(\n    fs.readFileSync(file, {encoding: 'utf8'}),\n  );\n  const metadata = Object.assign(\n    {\n      path: fileToUrl(file),\n      content: replaceAssetsLink(\n        result.rawContent,\n        `${siteConfig.baseUrl}blog`,\n      ),\n    },\n    result.metadata,\n  );\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  const metadata = getMetadata(file, siteConfig);\n  if (!metadata) {\n    return null;\n  }\n  const BlogPostLayout = require('../core/BlogPostLayout.js');\n  const blogPostComp = (\n    <BlogPostLayout metadata={metadata} language=\"en\" config={siteConfig}>\n      {metadata.content}\n    </BlogPostLayout>\n  );\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl,\n  getMetadata,\n  getPagesMarkup,\n  getPostMarkup,\n  urlToSource,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\utils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\utils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar cssnano = require('cssnano');\n\nvar autoprefixer = require('autoprefixer');\n\nvar postcss = require('postcss');\n\nvar path = require('path');\n\nvar escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  var subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  var separator = escapeStringRegexp(path.sep);\n  var baseDir = escapeStringRegexp(path.basename(refDir));\n  var regexSubFolder = new RegExp(\"\".concat(baseDir).concat(separator, \"(.*?)\").concat(separator, \".*\"));\n  var match = regexSubFolder.exec(file); // Avoid misinterpreting subdirectory as language\n\n  var env = require('./env.js');\n\n  if (match && env.translation.enabled) {\n    var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n      return language.tag;\n    });\n\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n\n  for (var i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano.process(cssContent, {\n    preset: 'default',\n    zindex: false,\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer]).process(cssContent, {\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  var fencedBlock = false;\n  var lines = oldContent.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    return fencedBlock ? line : line.replace(/\\]\\(assets\\//g, \"](\".concat(location, \"/assets/\"));\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir: getSubDir,\n  getLanguage: getLanguage,\n  isSeparateCss: isSeparateCss,\n  minifyCss: minifyCss,\n  autoPrefixCss: autoPrefixCss,\n  replaceAssetsLink: replaceAssetsLink\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNzc25hbm8iLCJyZXF1aXJlIiwiYXV0b3ByZWZpeGVyIiwicG9zdGNzcyIsInBhdGgiLCJlc2NhcGVTdHJpbmdSZWdleHAiLCJnZXRTdWJEaXIiLCJmaWxlIiwicmVmRGlyIiwic3ViRGlyIiwiZGlybmFtZSIsInJlbGF0aXZlIiwicmVwbGFjZSIsImluY2x1ZGVzIiwiZ2V0TGFuZ3VhZ2UiLCJzZXBhcmF0b3IiLCJzZXAiLCJiYXNlRGlyIiwiYmFzZW5hbWUiLCJyZWdleFN1YkZvbGRlciIsIlJlZ0V4cCIsIm1hdGNoIiwiZXhlYyIsImVudiIsInRyYW5zbGF0aW9uIiwiZW5hYmxlZCIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJsYW5ndWFnZSIsInRhZyIsImluZGV4T2YiLCJpc1NlcGFyYXRlQ3NzIiwic2VwYXJhdGVEaXJzIiwiaSIsImxlbmd0aCIsIm1pbmlmeUNzcyIsImNzc0NvbnRlbnQiLCJwcm9jZXNzIiwicHJlc2V0IiwiemluZGV4IiwiZnJvbSIsInVuZGVmaW5lZCIsInRoZW4iLCJyZXN1bHQiLCJjc3MiLCJhdXRvUHJlZml4Q3NzIiwicmVwbGFjZUFzc2V0c0xpbmsiLCJvbGRDb250ZW50IiwibG9jYXRpb24iLCJmZW5jZWRCbG9jayIsImxpbmVzIiwic3BsaXQiLCJsaW5lIiwidHJpbSIsInN0YXJ0c1dpdGgiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBTUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTVCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSSxrQkFBa0IsR0FBR0osT0FBTyxDQUFDLHNCQUFELENBQWxD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QUF2QyxFQUFpRDtBQUMvQyxNQUFJQyxXQUFXLEdBQUcsS0FBbEI7QUFDQSxNQUFNQyxLQUFLLEdBQUdILFVBQVUsQ0FBQ0ksS0FBWCxDQUFpQixJQUFqQixFQUF1QnhCLEdBQXZCLENBQTJCLFVBQUN5QixJQUFELEVBQVU7QUFDakQsUUFBSUEsSUFBSSxDQUFDQyxJQUFMLEdBQVlDLFVBQVosQ0FBdUIsS0FBdkIsQ0FBSixFQUFtQztBQUNqQ0wsTUFBQUEsV0FBVyxHQUFHLENBQUNBLFdBQWY7QUFDRDs7QUFDRCxXQUFPQSxXQUFXLEdBQ2RHLElBRGMsR0FFZEEsSUFBSSxDQUFDeEMsT0FBTCxDQUFhLGVBQWIsY0FBbUNvQyxRQUFuQyxjQUZKO0FBR0QsR0FQYSxDQUFkO0FBUUEsU0FBT0UsS0FBSyxDQUFDSyxJQUFOLENBQVcsSUFBWCxDQUFQO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmbkQsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZRLEVBQUFBLFdBQVcsRUFBWEEsV0FGZTtBQUdmaUIsRUFBQUEsYUFBYSxFQUFiQSxhQUhlO0FBSWZJLEVBQUFBLFNBQVMsRUFBVEEsU0FKZTtBQUtmVSxFQUFBQSxhQUFhLEVBQWJBLGFBTGU7QUFNZkMsRUFBQUEsaUJBQWlCLEVBQWpCQTtBQU5lLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbGl1amlcXERlc2t0b3BcXEJsb2dcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcZG9jdXNhdXJ1c1xcbGliXFxzZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmNvbnN0IGNzc25hbm8gPSByZXF1aXJlKCdjc3NuYW5vJyk7XG5jb25zdCBhdXRvcHJlZml4ZXIgPSByZXF1aXJlKCdhdXRvcHJlZml4ZXInKTtcbmNvbnN0IHBvc3Rjc3MgPSByZXF1aXJlKCdwb3N0Y3NzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgZXNjYXBlU3RyaW5nUmVnZXhwID0gcmVxdWlyZSgnZXNjYXBlLXN0cmluZy1yZWdleHAnKTtcblxuZnVuY3Rpb24gZ2V0U3ViRGlyKGZpbGUsIHJlZkRpcikge1xuICBjb25zdCBzdWJEaXIgPSBwYXRoLmRpcm5hbWUocGF0aC5yZWxhdGl2ZShyZWZEaXIsIGZpbGUpKS5yZXBsYWNlKC9cXFxcL2csICcvJyk7XG4gIHJldHVybiBzdWJEaXIgIT09ICcuJyAmJiAhc3ViRGlyLmluY2x1ZGVzKCcuLicpID8gc3ViRGlyIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gZ2V0TGFuZ3VhZ2UoZmlsZSwgcmVmRGlyKSB7XG4gIGNvbnN0IHNlcGFyYXRvciA9IGVzY2FwZVN0cmluZ1JlZ2V4cChwYXRoLnNlcCk7XG4gIGNvbnN0IGJhc2VEaXIgPSBlc2NhcGVTdHJpbmdSZWdleHAocGF0aC5iYXNlbmFtZShyZWZEaXIpKTtcbiAgY29uc3QgcmVnZXhTdWJGb2xkZXIgPSBuZXcgUmVnRXhwKFxuICAgIGAke2Jhc2VEaXJ9JHtzZXBhcmF0b3J9KC4qPykke3NlcGFyYXRvcn0uKmAsXG4gICk7XG4gIGNvbnN0IG1hdGNoID0gcmVnZXhTdWJGb2xkZXIuZXhlYyhmaWxlKTtcblxuICAvLyBBdm9pZCBtaXNpbnRlcnByZXRpbmcgc3ViZGlyZWN0b3J5IGFzIGxhbmd1YWdlXG4gIGNvbnN0IGVudiA9IHJlcXVpcmUoJy4vZW52LmpzJyk7XG4gIGlmIChtYXRjaCAmJiBlbnYudHJhbnNsYXRpb24uZW5hYmxlZCkge1xuICAgIGNvbnN0IGVuYWJsZWRMYW5ndWFnZXMgPSBlbnYudHJhbnNsYXRpb25cbiAgICAgIC5lbmFibGVkTGFuZ3VhZ2VzKClcbiAgICAgIC5tYXAoKGxhbmd1YWdlKSA9PiBsYW5ndWFnZS50YWcpO1xuICAgIGlmIChlbmFibGVkTGFuZ3VhZ2VzLmluZGV4T2YobWF0Y2hbMV0pICE9PSAtMSkge1xuICAgICAgcmV0dXJuIG1hdGNoWzFdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNTZXBhcmF0ZUNzcyhmaWxlLCBzZXBhcmF0ZURpcnMpIHtcbiAgaWYgKCFzZXBhcmF0ZURpcnMpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZXBhcmF0ZURpcnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZmlsZS5pbmNsdWRlcyhzZXBhcmF0ZURpcnNbaV0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBtaW5pZnlDc3MoY3NzQ29udGVudCkge1xuICByZXR1cm4gY3NzbmFub1xuICAgIC5wcm9jZXNzKGNzc0NvbnRlbnQsIHtcbiAgICAgIHByZXNldDogJ2RlZmF1bHQnLFxuICAgICAgemluZGV4OiBmYWxzZSxcbiAgICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICB9KVxuICAgIC50aGVuKChyZXN1bHQpID0+IHJlc3VsdC5jc3MpO1xufVxuXG5mdW5jdGlvbiBhdXRvUHJlZml4Q3NzKGNzc0NvbnRlbnQpIHtcbiAgcmV0dXJuIHBvc3Rjc3MoW2F1dG9wcmVmaXhlcl0pXG4gICAgLnByb2Nlc3MoY3NzQ29udGVudCwge1xuICAgICAgZnJvbTogdW5kZWZpbmVkLFxuICAgIH0pXG4gICAgLnRoZW4oKHJlc3VsdCkgPT4gcmVzdWx0LmNzcyk7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VBc3NldHNMaW5rKG9sZENvbnRlbnQsIGxvY2F0aW9uKSB7XG4gIGxldCBmZW5jZWRCbG9jayA9IGZhbHNlO1xuICBjb25zdCBsaW5lcyA9IG9sZENvbnRlbnQuc3BsaXQoJ1xcbicpLm1hcCgobGluZSkgPT4ge1xuICAgIGlmIChsaW5lLnRyaW0oKS5zdGFydHNXaXRoKCdgYGAnKSkge1xuICAgICAgZmVuY2VkQmxvY2sgPSAhZmVuY2VkQmxvY2s7XG4gICAgfVxuICAgIHJldHVybiBmZW5jZWRCbG9ja1xuICAgICAgPyBsaW5lXG4gICAgICA6IGxpbmUucmVwbGFjZSgvXFxdXFwoYXNzZXRzXFwvL2csIGBdKCR7bG9jYXRpb259L2Fzc2V0cy9gKTtcbiAgfSk7XG4gIHJldHVybiBsaW5lcy5qb2luKCdcXG4nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldFN1YkRpcixcbiAgZ2V0TGFuZ3VhZ2UsXG4gIGlzU2VwYXJhdGVDc3MsXG4gIG1pbmlmeUNzcyxcbiAgYXV0b1ByZWZpeENzcyxcbiAgcmVwbGFjZUFzc2V0c0xpbmssXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "cssnano",
        "require",
        "autoprefixer",
        "postcss",
        "path",
        "escapeStringRegexp",
        "getSubDir",
        "file",
        "refDir",
        "subDir",
        "dirname",
        "relative",
        "replace",
        "includes",
        "getLanguage",
        "separator",
        "sep",
        "baseDir",
        "basename",
        "regexSubFolder",
        "RegExp",
        "match",
        "exec",
        "env",
        "translation",
        "enabled",
        "enabledLanguages",
        "map",
        "language",
        "tag",
        "indexOf",
        "isSeparateCss",
        "separateDirs",
        "i",
        "length",
        "minifyCss",
        "cssContent",
        "process",
        "preset",
        "zindex",
        "from",
        "undefined",
        "then",
        "result",
        "css",
        "autoPrefixCss",
        "replaceAssetsLink",
        "oldContent",
        "location",
        "fencedBlock",
        "lines",
        "split",
        "line",
        "trim",
        "startsWith",
        "join",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst cssnano = require('cssnano');\nconst autoprefixer = require('autoprefixer');\nconst postcss = require('postcss');\nconst path = require('path');\nconst escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  const subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  const separator = escapeStringRegexp(path.sep);\n  const baseDir = escapeStringRegexp(path.basename(refDir));\n  const regexSubFolder = new RegExp(\n    `${baseDir}${separator}(.*?)${separator}.*`,\n  );\n  const match = regexSubFolder.exec(file);\n\n  // Avoid misinterpreting subdirectory as language\n  const env = require('./env.js');\n  if (match && env.translation.enabled) {\n    const enabledLanguages = env.translation\n      .enabledLanguages()\n      .map((language) => language.tag);\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n  for (let i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano\n    .process(cssContent, {\n      preset: 'default',\n      zindex: false,\n      from: undefined,\n    })\n    .then((result) => result.css);\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer])\n    .process(cssContent, {\n      from: undefined,\n    })\n    .then((result) => result.css);\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  let fencedBlock = false;\n  const lines = oldContent.split('\\n').map((line) => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    return fencedBlock\n      ? line\n      : line.replace(/\\]\\(assets\\//g, `](${location}/assets/`);\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir,\n  getLanguage,\n  isSeparateCss,\n  minifyCss,\n  autoPrefixCss,\n  replaceAssetsLink,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\versionFallback.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\versionFallback.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\versionFallback.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\versionFallback.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "versionFallback.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar glob = require('glob');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar utils = require('./utils.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\nvar ENABLE_TRANSLATION = fs.existsSync(\"\".concat(CWD, \"/languages.js\"));\nvar versions;\n\nif (fs.existsSync(\"\".concat(CWD, \"/versions.json\"))) {\n  versions = require(\"\".concat(CWD, \"/versions.json\"));\n} else {\n  versions = [];\n}\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar versionFolder = \"\".concat(CWD, \"/versioned_docs/\"); // available stores doc ids of documents that are available for\n// each version\n\nvar available = {}; // versionFiles is used to keep track of what file to use with a\n// given version/id of a document\n\nvar versionFiles = {};\nvar files = glob.sync(\"\".concat(versionFolder, \"**\"));\nfiles.forEach(function (file) {\n  var ext = path.extname(file);\n\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n\n  var res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  }\n\n  if (!metadata.id) {\n    console.error(\"No 'id' field found in \".concat(file, \".\"));\n    throw new Error(\"No 'id' field found in \".concat(file, \".\"));\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  } // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n\n\n  var version = metadata.id.substring(metadata.id.indexOf('version-') + 8, // version- is 8 characters\n  metadata.id.lastIndexOf(\"-\".concat(metadata.original_id))); // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n\n  var subDir = utils.getSubDir(file, path.join(versionFolder, \"version-\".concat(version)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n\n  versionFiles[version][metadata.original_id] = file;\n}); // returns the version to use for a document based on its id and\n// what the requested version is\n\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  } // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n\n\n  var requestedFound = false;\n  var availableVersion = null;\n  var deletedDocs = null;\n\n  if (siteConfig.deletedDocs) {\n    // Config file may have either Array or Set for each version. Convert\n    // all to Set to make the check faster in the versions loop below.\n    deletedDocs = {};\n    Object.keys(siteConfig.deletedDocs).forEach(function (deletedDocVersion) {\n      deletedDocs[deletedDocVersion] = new Set(siteConfig.deletedDocs[deletedDocVersion]);\n    });\n  }\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound) {\n      // If this ID is deleted as of any version equal to or prior to\n      // the requested, return null.\n      if (deletedDocs && deletedDocs[versions[i]] && deletedDocs[versions[i]].has(id)) {\n        return null;\n      }\n\n      if (!availableVersion && available[id].has(versions[i])) {\n        availableVersion = versions[i]; // Note the fallback version but keep looping in case this ID\n        // was deleted as of a previous version.\n        //\n        // If `deletedDocs` config isn't used, we can return immediately\n        // and avoid unnecessary looping.\n\n        if (!deletedDocs) {\n          break;\n        }\n      }\n    }\n  }\n\n  return availableVersion;\n} // returns whether a given file has content that differ from the\n// document with the given id\n\n\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version;\n\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  if (!version) {\n    return true;\n  }\n\n  var latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return metadataUtils.extractMetadata(fs.readFileSync(latestFile, 'utf8')).rawContent.trim() !== metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).rawContent.trim();\n} // return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\n\n\nfunction processVersionMetadata(file, version, useVersion, language) {\n  var metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).metadata; // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n\n  var subDir = utils.getSubDir(file, path.join(CWD, 'versioned_docs', \"version-\".concat(useVersion)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n    metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(useVersion, \"-\").concat(subDir, \"/\"));\n  }\n\n  metadata.source = subDir ? \"version-\".concat(useVersion, \"/\").concat(subDir, \"/\").concat(path.basename(file)) : \"version-\".concat(useVersion, \"/\").concat(path.basename(file));\n  var latestVersion = versions[0];\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n  var versionPart = \"\".concat(version !== latestVersion ? \"\".concat(version, \"/\") : '');\n\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = \"\".concat(docsPart).concat(versionPart).concat(metadata.original_id, \".html\");\n  } else {\n    metadata.permalink = \"\".concat(docsPart).concat(language, \"/\").concat(versionPart).concat(metadata.original_id, \".html\");\n  }\n\n  metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(version, \"-\"));\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n  return metadata;\n} // return all metadata of versioned documents\n\n\nfunction docData() {\n  var allIds = new Set();\n  Object.keys(versionFiles).forEach(function (version) {\n    Object.keys(versionFiles[version]).forEach(function (id) {\n      allIds.add(id);\n    });\n  });\n  var metadatas = [];\n  languages.filter(function (language) {\n    return language.enabled;\n  }).forEach(function (language) {\n    versions.forEach(function (version) {\n      allIds.forEach(function (id) {\n        var useVersion;\n\n        try {\n          useVersion = docVersion(id, version);\n        } catch (e) {\n          console.log(e);\n          process.exit(1);\n        }\n\n        if (!useVersion) {\n          return;\n        }\n\n        var file = versionFiles[useVersion][id];\n        metadatas.push(processVersionMetadata(file, version, useVersion, language.tag));\n      });\n    });\n  });\n  return metadatas;\n} // return the version of the sidebar to use given a requested version\n\n\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && fs.existsSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(versions[i], \"-sidebars.json\"))) {\n      return versions[i];\n    }\n  }\n\n  throw new Error(\"No sidebar file available to use for version \".concat(reqVersion, \". Verify that 'version-\").concat(reqVersion, \"-sidebars.json' exists.\"));\n} // return whether or not the current sidebars.json file differs from the\n// latest versioned one\n\n\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version = sidebarVersion(latest);\n  var latestSidebar = \"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\");\n\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n\n  var currentSidebar = \"\".concat(CWD, \"/sidebars.json\"); // if no current sidebar file, return false so no sidebar file gets copied\n\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  } // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n\n\n  return JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), '') !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')));\n} // return all versioned sidebar data\n\n\nfunction sidebarData() {\n  var allSidebars = {};\n\n  for (var i = 0; i < versions.length; i++) {\n    var version = sidebarVersion(versions[i]);\n    var sidebar = JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\"), 'utf8').replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), \"version-\".concat(versions[i], \"-\")));\n    Object.assign(allSidebars, sidebar);\n  }\n\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion: docVersion,\n  diffLatestDoc: diffLatestDoc,\n  processVersionMetadata: processVersionMetadata,\n  docData: docData,\n  sidebarVersion: sidebarVersion,\n  diffLatestSidebar: diffLatestSidebar,\n  sidebarData: sidebarData\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "versionFallback.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "glob",
        "require",
        "fs",
        "path",
        "metadataUtils",
        "env",
        "utils",
        "loadConfig",
        "siteConfig",
        "ENABLE_TRANSLATION",
        "existsSync",
        "versions",
        "languages",
        "enabled",
        "name",
        "tag",
        "versionFolder",
        "available",
        "versionFiles",
        "files",
        "sync",
        "forEach",
        "file",
        "ext",
        "extname",
        "res",
        "extractMetadata",
        "readFileSync",
        "metadata",
        "original_id",
        "console",
        "error",
        "Error",
        "id",
        "indexOf",
        "version",
        "substring",
        "lastIndexOf",
        "subDir",
        "getSubDir",
        "join",
        "Set",
        "add",
        "docVersion",
        "reqVersion",
        "requestedFound",
        "availableVersion",
        "deletedDocs",
        "Object",
        "keys",
        "deletedDocVersion",
        "i",
        "length",
        "has",
        "diffLatestDoc",
        "latest",
        "e",
        "exit",
        "latestFile",
        "rawContent",
        "trim",
        "processVersionMetadata",
        "useVersion",
        "language",
        "replace",
        "source",
        "basename",
        "latestVersion",
        "docsPart",
        "docsUrl",
        "versionPart",
        "useEnglishUrl",
        "permalink",
        "localized_id",
        "translation",
        "docData",
        "allIds",
        "metadatas",
        "filter",
        "log",
        "push",
        "sidebarVersion",
        "diffLatestSidebar",
        "latestSidebar",
        "currentSidebar",
        "JSON",
        "stringify",
        "parse",
        "RegExp",
        "sidebarData",
        "allSidebars",
        "sidebar",
        "assign",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst utils = require('./utils.js');\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst ENABLE_TRANSLATION = fs.existsSync(`${CWD}/languages.js`);\n\nlet versions;\nif (fs.existsSync(`${CWD}/versions.json`)) {\n  versions = require(`${CWD}/versions.json`);\n} else {\n  versions = [];\n}\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst versionFolder = `${CWD}/versioned_docs/`;\n\n// available stores doc ids of documents that are available for\n// each version\nconst available = {};\n// versionFiles is used to keep track of what file to use with a\n// given version/id of a document\nconst versionFiles = {};\nconst files = glob.sync(`${versionFolder}**`);\nfiles.forEach((file) => {\n  const ext = path.extname(file);\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n  const res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n  if (!metadata.id) {\n    console.error(`No 'id' field found in ${file}.`);\n    throw new Error(`No 'id' field found in ${file}.`);\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n\n  // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n  const version = metadata.id.substring(\n    metadata.id.indexOf('version-') + 8, // version- is 8 characters\n    metadata.id.lastIndexOf(`-${metadata.original_id}`),\n  );\n\n  // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n  const subDir = utils.getSubDir(\n    file,\n    path.join(versionFolder, `version-${version}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n  versionFiles[version][metadata.original_id] = file;\n});\n\n// returns the version to use for a document based on its id and\n// what the requested version is\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  }\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  let availableVersion = null;\n  let deletedDocs = null;\n  if (siteConfig.deletedDocs) {\n    // Config file may have either Array or Set for each version. Convert\n    // all to Set to make the check faster in the versions loop below.\n    deletedDocs = {};\n    Object.keys(siteConfig.deletedDocs).forEach((deletedDocVersion) => {\n      deletedDocs[deletedDocVersion] = new Set(\n        siteConfig.deletedDocs[deletedDocVersion],\n      );\n    });\n  }\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (requestedFound) {\n      // If this ID is deleted as of any version equal to or prior to\n      // the requested, return null.\n      if (\n        deletedDocs &&\n        deletedDocs[versions[i]] &&\n        deletedDocs[versions[i]].has(id)\n      ) {\n        return null;\n      }\n      if (!availableVersion && available[id].has(versions[i])) {\n        availableVersion = versions[i];\n        // Note the fallback version but keep looping in case this ID\n        // was deleted as of a previous version.\n        //\n        // If `deletedDocs` config isn't used, we can return immediately\n        // and avoid unnecessary looping.\n        if (!deletedDocs) {\n          break;\n        }\n      }\n    }\n  }\n  return availableVersion;\n}\n\n// returns whether a given file has content that differ from the\n// document with the given id\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  const latest = versions[0];\n\n  let version;\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n  if (!version) {\n    return true;\n  }\n  const latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return (\n    metadataUtils\n      .extractMetadata(fs.readFileSync(latestFile, 'utf8'))\n      .rawContent.trim() !==\n    metadataUtils\n      .extractMetadata(fs.readFileSync(file, 'utf8'))\n      .rawContent.trim()\n  );\n}\n\n// return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\nfunction processVersionMetadata(file, version, useVersion, language) {\n  const metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'))\n    .metadata;\n\n  // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n  const subDir = utils.getSubDir(\n    file,\n    path.join(CWD, 'versioned_docs', `version-${useVersion}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n    metadata.id = metadata.id.replace(\n      `version-${useVersion}-`,\n      `version-${useVersion}-${subDir}/`,\n    );\n  }\n\n  metadata.source = subDir\n    ? `version-${useVersion}/${subDir}/${path.basename(file)}`\n    : `version-${useVersion}/${path.basename(file)}`;\n\n  const latestVersion = versions[0];\n\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  const versionPart = `${version !== latestVersion ? `${version}/` : ''}`;\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = `${docsPart}${versionPart}${metadata.original_id}.html`;\n  } else {\n    metadata.permalink = `${docsPart}${language}/${versionPart}${metadata.original_id}.html`;\n  }\n  metadata.id = metadata.id.replace(\n    `version-${useVersion}-`,\n    `version-${version}-`,\n  );\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n\n  return metadata;\n}\n\n// return all metadata of versioned documents\nfunction docData() {\n  const allIds = new Set();\n  Object.keys(versionFiles).forEach((version) => {\n    Object.keys(versionFiles[version]).forEach((id) => {\n      allIds.add(id);\n    });\n  });\n\n  const metadatas = [];\n\n  languages\n    .filter((language) => language.enabled)\n    .forEach((language) => {\n      versions.forEach((version) => {\n        allIds.forEach((id) => {\n          let useVersion;\n          try {\n            useVersion = docVersion(id, version);\n          } catch (e) {\n            console.log(e);\n            process.exit(1);\n          }\n          if (!useVersion) {\n            return;\n          }\n          const file = versionFiles[useVersion][id];\n\n          metadatas.push(\n            processVersionMetadata(file, version, useVersion, language.tag),\n          );\n        });\n      });\n    });\n\n  return metadatas;\n}\n\n// return the version of the sidebar to use given a requested version\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (\n      requestedFound &&\n      fs.existsSync(\n        `${CWD}/versioned_sidebars/version-${versions[i]}-sidebars.json`,\n      )\n    ) {\n      return versions[i];\n    }\n  }\n  throw new Error(\n    `No sidebar file available to use for version ${reqVersion}. Verify that 'version-${reqVersion}-sidebars.json' exists.`,\n  );\n}\n\n// return whether or not the current sidebars.json file differs from the\n// latest versioned one\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n  const latest = versions[0];\n\n  const version = sidebarVersion(latest);\n  const latestSidebar = `${CWD}/versioned_sidebars/version-${version}-sidebars.json`;\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n  const currentSidebar = `${CWD}/sidebars.json`;\n  // if no current sidebar file, return false so no sidebar file gets copied\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  }\n\n  // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n  return (\n    JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(\n      new RegExp(`version-${version}-`, 'g'),\n      '',\n    ) !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')))\n  );\n}\n\n// return all versioned sidebar data\nfunction sidebarData() {\n  const allSidebars = {};\n\n  for (let i = 0; i < versions.length; i++) {\n    const version = sidebarVersion(versions[i]);\n    const sidebar = JSON.parse(\n      fs\n        .readFileSync(\n          `${CWD}/versioned_sidebars/version-${version}-sidebars.json`,\n          'utf8',\n        )\n        .replace(\n          new RegExp(`version-${version}-`, 'g'),\n          `version-${versions[i]}-`,\n        ),\n    );\n    Object.assign(allSidebars, sidebar);\n  }\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion,\n  diffLatestDoc,\n  processVersionMetadata,\n  docData,\n  sidebarVersion,\n  diffLatestSidebar,\n  sidebarData,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\core\\\\Head.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Head.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Head.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\Head.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
        "sourceFileName": "Head.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react'); // html head for each page\n\n\nvar Head = /*#__PURE__*/function (_React$Component) {\n  _inherits(Head, _React$Component);\n\n  var _super = _createSuper(Head);\n\n  function Head() {\n    _classCallCheck(this, Head);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Head, [{\n    key: \"render\",\n    value: function render() {\n      var links = this.props.config.headerLinks;\n      var hasBlog = links.some(function (link) {\n        return link.blog;\n      });\n\n      var highlight = _objectSpread({\n        version: '9.12.0',\n        theme: 'default'\n      }, this.props.config.highlight); // Use user-provided themeUrl if it exists, else construct one from version and theme.\n\n\n      var highlightThemeURL = highlight.themeUrl ? highlight.themeUrl : \"//cdnjs.cloudflare.com/ajax/libs/highlight.js/\".concat(highlight.version, \"/styles/\").concat(highlight.theme, \".min.css\"); // ensure the siteUrl variable ends with a single slash\n\n      var siteUrl = \"\".concat((this.props.config.url + this.props.config.baseUrl).replace(/\\/+$/, ''), \"/\");\n      return /*#__PURE__*/React.createElement(\"head\", null, /*#__PURE__*/React.createElement(\"meta\", {\n        charSet: \"utf-8\"\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        httpEquiv: \"X-UA-Compatible\",\n        content: \"IE=edge\"\n      }), /*#__PURE__*/React.createElement(\"title\", null, this.props.title), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width\"\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"generator\",\n        content: \"Docusaurus\"\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"description\",\n        content: this.props.description\n      }), this.props.version && /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"docsearch:version\",\n        content: this.props.version\n      }), this.props.language && /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"docsearch:language\",\n        content: this.props.language\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:title\",\n        content: this.props.title\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:type\",\n        content: \"website\"\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:url\",\n        content: this.props.url\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:description\",\n        content: this.props.description\n      }), this.props.config.ogImage && /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:image\",\n        content: siteUrl + this.props.config.ogImage\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"twitter:card\",\n        content: \"summary\"\n      }), this.props.config.twitterImage && /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"twitter:image\",\n        content: siteUrl + this.props.config.twitterImage\n      }), this.props.config.noIndex && /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"robots\",\n        content: \"noindex\"\n      }), this.props.redirect && /*#__PURE__*/React.createElement(\"meta\", {\n        httpEquiv: \"refresh\",\n        content: \"0; URL=\".concat(this.props.redirect)\n      }), this.props.config.manifest && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"manifest\",\n        href: siteUrl + this.props.config.manifest\n      }), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"shortcut icon\",\n        href: this.props.config.baseUrl + this.props.config.favicon\n      }), this.props.config.algolia && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css\"\n      }), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: highlightThemeURL\n      }), hasBlog && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"alternate\",\n        type: \"application/atom+xml\",\n        href: \"\".concat(siteUrl, \"blog/atom.xml\"),\n        title: \"\".concat(this.props.config.title, \" Blog ATOM Feed\")\n      }), hasBlog && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"alternate\",\n        type: \"application/rss+xml\",\n        href: \"\".concat(siteUrl, \"blog/feed.xml\"),\n        title: \"\".concat(this.props.config.title, \" Blog RSS Feed\")\n      }), this.props.config.gaTrackingId && this.props.config.gaGtag && /*#__PURE__*/React.createElement(\"script\", {\n        async: true,\n        src: \"https://www.googletagmanager.com/gtag/js?id=\".concat(this.props.config.gaTrackingId)\n      }), this.props.config.gaTrackingId && this.props.config.gaGtag && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              window.dataLayer = window.dataLayer || [];\\n              function gtag(){dataLayer.push(arguments); }\\n              gtag('js', new Date());\\n              gtag('config', '\".concat(this.props.config.gaTrackingId, \"');\\n            \")\n        }\n      }), this.props.config.gaTrackingId && !this.props.config.gaGtag && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\\n              (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\\n              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\\n              })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\\n\\n              ga('create', '\".concat(this.props.config.gaTrackingId, \"', 'auto');\\n              ga('send', 'pageview');\\n            \")\n        }\n      }), this.props.config.stylesheets && this.props.config.stylesheets.map(function (source) {\n        return source.href ? /*#__PURE__*/React.createElement(\"link\", _extends({\n          rel: \"stylesheet\",\n          key: source.href\n        }, source)) : /*#__PURE__*/React.createElement(\"link\", {\n          rel: \"stylesheet\",\n          key: source,\n          href: source\n        });\n      }), this.props.config.scripts && this.props.config.scripts.map(function (source) {\n        return source.src ? /*#__PURE__*/React.createElement(\"script\", _extends({\n          type: \"text/javascript\",\n          key: source.src\n        }, source)) : /*#__PURE__*/React.createElement(\"script\", {\n          type: \"text/javascript\",\n          src: source,\n          key: source\n        });\n      }), this.props.config.scrollToTop && /*#__PURE__*/React.createElement(\"script\", {\n        src: \"https://unpkg.com/vanilla-back-to-top@7.1.14/dist/vanilla-back-to-top.min.js\"\n      }), this.props.config.scrollToTop && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n        document.addEventListener('DOMContentLoaded', function() {\\n          addBackToTop(\\n            \".concat(JSON.stringify(Object.assign({}, {\n            zIndex: 100\n          }, this.props.config.scrollToTopOptions)), \"\\n          )\\n        });\\n        \")\n        }\n      }), /*#__PURE__*/React.createElement(\"script\", {\n        src: \"\".concat(this.props.config.baseUrl, \"js/scrollSpy.js\")\n      }), this.props.config.usePrism && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"\".concat(this.props.config.baseUrl, \"css/prism.css\")\n      }), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"\".concat(this.props.config.baseUrl, \"css/main.css\")\n      }), /*#__PURE__*/React.createElement(\"script\", {\n        src: \"\".concat(this.props.config.baseUrl, \"js/codetabs.js\")\n      }));\n    }\n  }]);\n\n  return Head;\n}(React.Component);\n\nmodule.exports = Head;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Head.js"
      ],
      "names": [
        "React",
        "require",
        "Head",
        "links",
        "props",
        "config",
        "headerLinks",
        "hasBlog",
        "some",
        "link",
        "blog",
        "highlight",
        "version",
        "theme",
        "highlightThemeURL",
        "themeUrl",
        "siteUrl",
        "url",
        "baseUrl",
        "replace",
        "title",
        "description",
        "language",
        "ogImage",
        "twitterImage",
        "noIndex",
        "redirect",
        "manifest",
        "favicon",
        "algolia",
        "gaTrackingId",
        "gaGtag",
        "__html",
        "stylesheets",
        "map",
        "source",
        "href",
        "scripts",
        "src",
        "scrollToTop",
        "JSON",
        "stringify",
        "Object",
        "assign",
        "zIndex",
        "scrollToTopOptions",
        "usePrism",
        "Component",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\n\n// html head for each page\nclass Head extends React.Component {\n  render() {\n    const links = this.props.config.headerLinks;\n    const hasBlog = links.some((link) => link.blog);\n\n    const highlight = {\n      version: '9.12.0',\n      theme: 'default',\n      ...this.props.config.highlight,\n    };\n\n    // Use user-provided themeUrl if it exists, else construct one from version and theme.\n    const highlightThemeURL = highlight.themeUrl\n      ? highlight.themeUrl\n      : `//cdnjs.cloudflare.com/ajax/libs/highlight.js/${highlight.version}/styles/${highlight.theme}.min.css`;\n\n    // ensure the siteUrl variable ends with a single slash\n    const siteUrl = `${(\n      this.props.config.url + this.props.config.baseUrl\n    ).replace(/\\/+$/, '')}/`;\n\n    return (\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <title>{this.props.title}</title>\n        <meta name=\"viewport\" content=\"width=device-width\" />\n        <meta name=\"generator\" content=\"Docusaurus\" />\n        <meta name=\"description\" content={this.props.description} />\n        {this.props.version && (\n          <meta name=\"docsearch:version\" content={this.props.version} />\n        )}\n        {this.props.language && (\n          <meta name=\"docsearch:language\" content={this.props.language} />\n        )}\n        <meta property=\"og:title\" content={this.props.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:url\" content={this.props.url} />\n        <meta property=\"og:description\" content={this.props.description} />\n        {this.props.config.ogImage && (\n          <meta\n            property=\"og:image\"\n            content={siteUrl + this.props.config.ogImage}\n          />\n        )}\n        <meta name=\"twitter:card\" content=\"summary\" />\n        {this.props.config.twitterImage && (\n          <meta\n            name=\"twitter:image\"\n            content={siteUrl + this.props.config.twitterImage}\n          />\n        )}\n        {this.props.config.noIndex && <meta name=\"robots\" content=\"noindex\" />}\n        {this.props.redirect && (\n          <meta httpEquiv=\"refresh\" content={`0; URL=${this.props.redirect}`} />\n        )}\n        {this.props.config.manifest && (\n          <link rel=\"manifest\" href={siteUrl + this.props.config.manifest} />\n        )}\n        <link\n          rel=\"shortcut icon\"\n          href={this.props.config.baseUrl + this.props.config.favicon}\n        />\n        {this.props.config.algolia && (\n          <link\n            rel=\"stylesheet\"\n            href=\"https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css\"\n          />\n        )}\n        <link rel=\"stylesheet\" href={highlightThemeURL} />\n        {hasBlog && (\n          <link\n            rel=\"alternate\"\n            type=\"application/atom+xml\"\n            href={`${siteUrl}blog/atom.xml`}\n            title={`${this.props.config.title} Blog ATOM Feed`}\n          />\n        )}\n        {hasBlog && (\n          <link\n            rel=\"alternate\"\n            type=\"application/rss+xml\"\n            href={`${siteUrl}blog/feed.xml`}\n            title={`${this.props.config.title} Blog RSS Feed`}\n          />\n        )}\n        {this.props.config.gaTrackingId && this.props.config.gaGtag && (\n          <script\n            async\n            src={`https://www.googletagmanager.com/gtag/js?id=${this.props.config.gaTrackingId}`}\n          />\n        )}\n        {this.props.config.gaTrackingId && this.props.config.gaGtag && (\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments); }\n              gtag('js', new Date());\n              gtag('config', '${this.props.config.gaTrackingId}');\n            `,\n            }}\n          />\n        )}\n        {this.props.config.gaTrackingId && !this.props.config.gaGtag && (\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n              (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n              (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n              })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n              ga('create', '${this.props.config.gaTrackingId}', 'auto');\n              ga('send', 'pageview');\n            `,\n            }}\n          />\n        )}\n\n        {/* External resources */}\n        {this.props.config.stylesheets &&\n          this.props.config.stylesheets.map((source) =>\n            source.href ? (\n              <link rel=\"stylesheet\" key={source.href} {...source} />\n            ) : (\n              <link rel=\"stylesheet\" key={source} href={source} />\n            ),\n          )}\n        {this.props.config.scripts &&\n          this.props.config.scripts.map((source) =>\n            source.src ? (\n              <script type=\"text/javascript\" key={source.src} {...source} />\n            ) : (\n              <script type=\"text/javascript\" src={source} key={source} />\n            ),\n          )}\n\n        {this.props.config.scrollToTop && (\n          <script src=\"https://unpkg.com/vanilla-back-to-top@7.1.14/dist/vanilla-back-to-top.min.js\" />\n        )}\n        {this.props.config.scrollToTop && (\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n        document.addEventListener('DOMContentLoaded', function() {\n          addBackToTop(\n            ${JSON.stringify(\n              Object.assign(\n                {},\n                {zIndex: 100},\n                this.props.config.scrollToTopOptions,\n              ),\n            )}\n          )\n        });\n        `,\n            }}\n          />\n        )}\n        <script src={`${this.props.config.baseUrl}js/scrollSpy.js`} />\n        {this.props.config.usePrism && (\n          <link\n            rel=\"stylesheet\"\n            href={`${this.props.config.baseUrl}css/prism.css`}\n          />\n        )}\n        {/* Site defined code. Keep these at the end to avoid overriding. */}\n        <link\n          rel=\"stylesheet\"\n          href={`${this.props.config.baseUrl}css/main.css`}\n        />\n        <script src={`${this.props.config.baseUrl}js/codetabs.js`} />\n      </head>\n    );\n  }\n}\n\nmodule.exports = Head;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\core\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\core\\\\Footer.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\core\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\core\\Footer.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\core\\Footer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\core\\Footer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\core\\",
        "sourceFileName": "Footer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar Footer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Footer, _React$Component);\n\n  var _super = _createSuper(Footer);\n\n  function Footer() {\n    _classCallCheck(this, Footer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Footer, [{\n    key: \"docUrl\",\n    value: function docUrl(doc) {\n      var baseUrl = this.props.config.baseUrl;\n      var docsUrl = this.props.config.docsUrl;\n      var docsPart = \"\".concat(docsUrl ? \"\".concat(docsUrl, \"/\") : '');\n      return \"\".concat(baseUrl).concat(docsPart).concat(doc);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"footer\", {\n        className: \"nav-footer\",\n        id: \"footer\"\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"sitemap\"\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: this.props.config.baseUrl,\n        className: \"nav-home\"\n      }, this.props.config.footerIcon && /*#__PURE__*/React.createElement(\"img\", {\n        src: this.props.config.baseUrl + this.props.config.footerIcon,\n        alt: this.props.config.title,\n        width: \"66\",\n        height: \"58\"\n      })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h5\", null, \"Docs\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: this.docUrl('doc1.html')\n      }, \"Getting Started (or other categories)\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: this.docUrl('doc2.html')\n      }, \"Guides (or other categories)\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: this.docUrl('doc3.html')\n      }, \"API Reference (or other categories)\")), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h5\", null, \"Community\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"\".concat(this.props.config.baseUrl, \"users\")\n      }, \"User Showcase\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://stackoverflow.com/questions/tagged/\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\"\n      }, \"Stack Overflow\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://discordapp.com/\"\n      }, \"Project Chat\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://twitter.com/\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\"\n      }, \"Twitter\")), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h5\", null, \"More\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"\".concat(this.props.config.baseUrl, \"blog\")\n      }, \"Blog\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://github.com/\"\n      }, \"GitHub\"), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"github-button\",\n        href: this.props.config.repoUrl,\n        \"data-icon\": \"octicon-star\",\n        \"data-count-href\": \"/facebook/docusaurus/stargazers\",\n        \"data-show-count\": \"true\",\n        \"data-count-aria-label\": \"# stargazers on GitHub\",\n        \"aria-label\": \"Star this project on GitHub\"\n      }, \"Star\"), this.props.config.twitterUsername && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"social\"\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://twitter.com/\".concat(this.props.config.twitterUsername),\n        className: \"twitter-follow-button\"\n      }, \"Follow @\", this.props.config.twitterUsername)), this.props.config.facebookAppId && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"social\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fb-like\",\n        \"data-href\": this.props.config.url,\n        \"data-colorscheme\": \"dark\",\n        \"data-layout\": \"standard\",\n        \"data-share\": \"true\",\n        \"data-width\": \"225\",\n        \"data-show-faces\": \"false\"\n      })))), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://opensource.facebook.com/\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        className: \"fbOpenSource\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"\".concat(this.props.config.baseUrl, \"img/oss_logo.png\"),\n        alt: \"Facebook Open Source\",\n        width: \"170\",\n        height: \"45\"\n      })), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"copyright\"\n      }, this.props.config.copyright));\n    }\n  }]);\n\n  return Footer;\n}(React.Component);\n\nmodule.exports = Footer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Footer.js"
      ],
      "names": [
        "React",
        "require",
        "Footer",
        "doc",
        "baseUrl",
        "props",
        "config",
        "docsUrl",
        "docsPart",
        "footerIcon",
        "title",
        "docUrl",
        "repoUrl",
        "twitterUsername",
        "facebookAppId",
        "url",
        "copyright",
        "Component",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\core\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\n\nclass Footer extends React.Component {\n  docUrl(doc) {\n    const baseUrl = this.props.config.baseUrl;\n    const docsUrl = this.props.config.docsUrl;\n    const docsPart = `${docsUrl ? `${docsUrl}/` : ''}`;\n    return `${baseUrl}${docsPart}${doc}`;\n  }\n\n  render() {\n    return (\n      <footer className=\"nav-footer\" id=\"footer\">\n        <section className=\"sitemap\">\n          <a href={this.props.config.baseUrl} className=\"nav-home\">\n            {this.props.config.footerIcon && (\n              <img\n                src={this.props.config.baseUrl + this.props.config.footerIcon}\n                alt={this.props.config.title}\n                width=\"66\"\n                height=\"58\"\n              />\n            )}\n          </a>\n          <div>\n            <h5>Docs</h5>\n            <a href={this.docUrl('doc1.html')}>\n              Getting Started (or other categories)\n            </a>\n            <a href={this.docUrl('doc2.html')}>Guides (or other categories)</a>\n            <a href={this.docUrl('doc3.html')}>\n              API Reference (or other categories)\n            </a>\n          </div>\n          <div>\n            <h5>Community</h5>\n            <a href={`${this.props.config.baseUrl}users`}>User Showcase</a>\n            <a\n              href=\"https://stackoverflow.com/questions/tagged/\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\">\n              Stack Overflow\n            </a>\n            <a href=\"https://discordapp.com/\">Project Chat</a>\n            <a\n              href=\"https://twitter.com/\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\">\n              Twitter\n            </a>\n          </div>\n          <div>\n            <h5>More</h5>\n            <a href={`${this.props.config.baseUrl}blog`}>Blog</a>\n            <a href=\"https://github.com/\">GitHub</a>\n            <a\n              className=\"github-button\"\n              href={this.props.config.repoUrl}\n              data-icon=\"octicon-star\"\n              data-count-href=\"/facebook/docusaurus/stargazers\"\n              data-show-count=\"true\"\n              data-count-aria-label=\"# stargazers on GitHub\"\n              aria-label=\"Star this project on GitHub\">\n              Star\n            </a>\n            {this.props.config.twitterUsername && (\n              <div className=\"social\">\n                <a\n                  href={`https://twitter.com/${this.props.config.twitterUsername}`}\n                  className=\"twitter-follow-button\">\n                  Follow @{this.props.config.twitterUsername}\n                </a>\n              </div>\n            )}\n            {this.props.config.facebookAppId && (\n              <div className=\"social\">\n                <div\n                  className=\"fb-like\"\n                  data-href={this.props.config.url}\n                  data-colorscheme=\"dark\"\n                  data-layout=\"standard\"\n                  data-share=\"true\"\n                  data-width=\"225\"\n                  data-show-faces=\"false\"\n                />\n              </div>\n            )}\n          </div>\n        </section>\n\n        <a\n          href=\"https://opensource.facebook.com/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          className=\"fbOpenSource\">\n          <img\n            src={`${this.props.config.baseUrl}img/oss_logo.png`}\n            alt=\"Facebook Open Source\"\n            width=\"170\"\n            height=\"45\"\n          />\n        </a>\n        <section className=\"copyright\">{this.props.config.copyright}</section>\n      </footer>\n    );\n  }\n}\n\nmodule.exports = Footer;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"filename\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\\\\node_modules\\\\docusaurus\\\\lib\\\\server\\\\liveReloadServer.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\liuji\\\\Desktop\\\\Blog\\\\website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.11.1:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\liveReloadServer.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\liuji\\Desktop\\Blog\\website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\liveReloadServer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\liveReloadServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
        "sourceFileName": "liveReloadServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar gaze = require('gaze');\n\nvar tinylr = require('tiny-lr');\n\nvar program = require('commander');\n\nvar readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  var server = tinylr();\n  server.listen(port, function () {\n    console.log('LiveReload server started on port %d', port);\n  });\n  gaze([\"../\".concat(readMetadata.getDocsPath(), \"/**/*\"), '**/*', '!node_modules/**/*'], function () {\n    this.on('all', function () {\n      server.notifyClients(['/']);\n    });\n  });\n}\n\nvar getReloadScriptUrl = function getReloadScriptUrl() {\n  var port = process.env.LIVERELOAD_PORT;\n  var host = program.host || 'localhost';\n  return \"http://\".concat(host, \":\").concat(port, \"/livereload.js\");\n};\n\nmodule.exports = {\n  start: start,\n  getReloadScriptUrl: getReloadScriptUrl\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpdmVSZWxvYWRTZXJ2ZXIuanMiXSwibmFtZXMiOlsiZ2F6ZSIsInJlcXVpcmUiLCJ0aW55bHIiLCJwcm9ncmFtIiwicmVhZE1ldGFkYXRhIiwic3RhcnQiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiTElWRVJFTE9BRF9QT1JUIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImdldERvY3NQYXRoIiwib24iLCJub3RpZnlDbGllbnRzIiwiZ2V0UmVsb2FkU2NyaXB0VXJsIiwiaG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLElBQU1HLFlBQVksR0FBR0gsT0FBTyxDQUFDLG1CQUFELENBQTVCOztBQUVBLFNBQVNJLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUNuQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosR0FBdUIsYUFBdkI7QUFDQUYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLGVBQVosR0FBOEJKLElBQTlCO0FBQ0EsTUFBTUssTUFBTSxHQUFHVCxNQUFNLEVBQXJCO0FBQ0FTLEVBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjTixJQUFkLEVBQW9CLFlBQU07QUFDeEJPLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNDQUFaLEVBQW9EUixJQUFwRDtBQUNELEdBRkQ7QUFJQU4sRUFBQUEsSUFBSSxDQUNGLGNBQU9JLFlBQVksQ0FBQ1csV0FBYixFQUFQLFlBQTBDLE1BQTFDLEVBQWtELG9CQUFsRCxDQURFLEVBRUYsWUFBWTtBQUNWLFNBQUtDLEVBQUwsQ0FBUSxLQUFSLEVBQWUsWUFBTTtBQUNuQkwsTUFBQUEsTUFBTSxDQUFDTSxhQUFQLENBQXFCLENBQUMsR0FBRCxDQUFyQjtBQUNELEtBRkQ7QUFHRCxHQU5DLENBQUo7QUFRRDs7QUFDRCxJQUFNQyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLEdBQU07QUFDL0IsTUFBTVosSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsZUFBekI7QUFDQSxNQUFNUyxJQUFJLEdBQUdoQixPQUFPLENBQUNnQixJQUFSLElBQWdCLFdBQTdCO0FBRUEsMEJBQWlCQSxJQUFqQixjQUF5QmIsSUFBekI7QUFDRCxDQUxEOztBQU9BYyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmhCLEVBQUFBLEtBQUssRUFBTEEsS0FEZTtBQUVmYSxFQUFBQSxrQkFBa0IsRUFBbEJBO0FBRmUsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxsaXVqaVxcRGVza3RvcFxcQmxvZ1xcd2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxkb2N1c2F1cnVzXFxsaWJcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBnYXplID0gcmVxdWlyZSgnZ2F6ZScpO1xuY29uc3QgdGlueWxyID0gcmVxdWlyZSgndGlueS1scicpO1xuY29uc3QgcHJvZ3JhbSA9IHJlcXVpcmUoJ2NvbW1hbmRlcicpO1xuY29uc3QgcmVhZE1ldGFkYXRhID0gcmVxdWlyZSgnLi9yZWFkTWV0YWRhdGEuanMnKTtcblxuZnVuY3Rpb24gc3RhcnQocG9ydCkge1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViA9ICdkZXZlbG9wbWVudCc7XG4gIHByb2Nlc3MuZW52LkxJVkVSRUxPQURfUE9SVCA9IHBvcnQ7XG4gIGNvbnN0IHNlcnZlciA9IHRpbnlscigpO1xuICBzZXJ2ZXIubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnTGl2ZVJlbG9hZCBzZXJ2ZXIgc3RhcnRlZCBvbiBwb3J0ICVkJywgcG9ydCk7XG4gIH0pO1xuXG4gIGdhemUoXG4gICAgW2AuLi8ke3JlYWRNZXRhZGF0YS5nZXREb2NzUGF0aCgpfS8qKi8qYCwgJyoqLyonLCAnIW5vZGVfbW9kdWxlcy8qKi8qJ10sXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5vbignYWxsJywgKCkgPT4ge1xuICAgICAgICBzZXJ2ZXIubm90aWZ5Q2xpZW50cyhbJy8nXSk7XG4gICAgICB9KTtcbiAgICB9LFxuICApO1xufVxuY29uc3QgZ2V0UmVsb2FkU2NyaXB0VXJsID0gKCkgPT4ge1xuICBjb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuTElWRVJFTE9BRF9QT1JUO1xuICBjb25zdCBob3N0ID0gcHJvZ3JhbS5ob3N0IHx8ICdsb2NhbGhvc3QnO1xuXG4gIHJldHVybiBgaHR0cDovLyR7aG9zdH06JHtwb3J0fS9saXZlcmVsb2FkLmpzYDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzdGFydCxcbiAgZ2V0UmVsb2FkU2NyaXB0VXJsLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "liveReloadServer.js"
      ],
      "names": [
        "gaze",
        "require",
        "tinylr",
        "program",
        "readMetadata",
        "start",
        "port",
        "process",
        "env",
        "NODE_ENV",
        "LIVERELOAD_PORT",
        "server",
        "listen",
        "console",
        "log",
        "getDocsPath",
        "on",
        "notifyClients",
        "getReloadScriptUrl",
        "host",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,mBAAD,CAA5B;;AAEA,SAASI,KAAT,CAAeC,IAAf,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ,GAA8BJ,IAA9B;AACA,MAAMK,MAAM,GAAGT,MAAM,EAArB;AACAS,EAAAA,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoB,YAAM;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDR,IAApD;AACD,GAFD;AAIAN,EAAAA,IAAI,CACF,cAAOI,YAAY,CAACW,WAAb,EAAP,YAA0C,MAA1C,EAAkD,oBAAlD,CADE,EAEF,YAAY;AACV,SAAKC,EAAL,CAAQ,KAAR,EAAe,YAAM;AACnBL,MAAAA,MAAM,CAACM,aAAP,CAAqB,CAAC,GAAD,CAArB;AACD,KAFD;AAGD,GANC,CAAJ;AAQD;;AACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,MAAMZ,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYE,eAAzB;AACA,MAAMS,IAAI,GAAGhB,OAAO,CAACgB,IAAR,IAAgB,WAA7B;AAEA,0BAAiBA,IAAjB,cAAyBb,IAAzB;AACD,CALD;;AAOAc,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,KAAK,EAALA,KADe;AAEfa,EAAAA,kBAAkB,EAAlBA;AAFe,CAAjB",
      "sourceRoot": "C:\\Users\\liuji\\Desktop\\Blog\\website\\node_modules\\docusaurus\\lib\\server\\",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst gaze = require('gaze');\nconst tinylr = require('tiny-lr');\nconst program = require('commander');\nconst readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  const server = tinylr();\n  server.listen(port, () => {\n    console.log('LiveReload server started on port %d', port);\n  });\n\n  gaze(\n    [`../${readMetadata.getDocsPath()}/**/*`, '**/*', '!node_modules/**/*'],\n    function () {\n      this.on('all', () => {\n        server.notifyClients(['/']);\n      });\n    },\n  );\n}\nconst getReloadScriptUrl = () => {\n  const port = process.env.LIVERELOAD_PORT;\n  const host = program.host || 'localhost';\n\n  return `http://${host}:${port}/livereload.js`;\n};\n\nmodule.exports = {\n  start,\n  getReloadScriptUrl,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597071653598
  }
}